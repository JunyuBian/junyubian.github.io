<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Notes on Junyu Bian</title>
    <link>https://junyubian.github.io/categories/notes/</link>
    <description>Recent content in Notes on Junyu Bian</description>
    <image>
      <title>Junyu Bian</title>
      <url>https://junyubian.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://junyubian.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 02 Dec 2023 18:53:43 +0000</lastBuildDate><atom:link href="https://junyubian.github.io/categories/notes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hugo Site Auto Deployment With Github Action</title>
      <link>https://junyubian.github.io/posts/2023-12-02-hugo-site-auto-deployment-with-github-action/</link>
      <pubDate>Sat, 02 Dec 2023 18:53:43 +0000</pubDate>
      
      <guid>https://junyubian.github.io/posts/2023-12-02-hugo-site-auto-deployment-with-github-action/</guid>
      <description>1-Background 2-Steps 3-Good to know Reference 1-Background Trying to auto deploy Hugo blogs with Github Action.
2-Steps Most steps and tips have been covered by reference#1 and reference#2.
3-Good to know Action will build from base url, could use this feature to create different sub domain under github.io. e.g. create a repo called projects to display different projects, this will be added to github.io/prjects
Reference 1-https://gohugo.io/hosting-and-deployment/hosting-on-github/ 2-https://lucumt.info/post/hugo/using-github-action-to-auto-build-deploy/</description>
    </item>
    
    <item>
      <title>Fluent Bit Client Notes</title>
      <link>https://junyubian.github.io/posts/2023-11-07-fluent-bit-notes/</link>
      <pubDate>Tue, 07 Nov 2023 21:53:43 +0000</pubDate>
      
      <guid>https://junyubian.github.io/posts/2023-11-07-fluent-bit-notes/</guid>
      <description>What is Fluent Bit One day, the Insurance Management System Tom built crashed. Good news is the system recovered through rebooting, bad news is Tom did not know what had gone wrong. Tom&amp;rsquo;s dad comes by and says to Tom &amp;ldquo;Fluent Bit is a telemetry agent designed to collect and process telemetry data from constrained systems to cloud infrastructures. Why don&amp;rsquo;t you give it a try?&amp;rdquo;
Structural Sketch Tom is a good listener.</description>
    </item>
    
    <item>
      <title>/dev/null and 2&amp;&gt;1</title>
      <link>https://junyubian.github.io/posts/2022-10-21-dev-null-and-21/</link>
      <pubDate>Fri, 21 Oct 2022 21:27:29 +0000</pubDate>
      
      <guid>https://junyubian.github.io/posts/2022-10-21-dev-null-and-21/</guid>
      <description>&lt;h1 id=&#34;1-notice&#34;&gt;1. Notice&lt;/h1&gt;
&lt;p&gt;1.1 &lt;code&gt;/dev/null&lt;/code&gt; is the null file. Anything written to it is discarded.
1.2 &lt;code&gt;2&amp;gt;&lt;/code&gt; means &amp;ldquo;redirect standard-error&amp;rdquo; to the given file.
1.3 &lt;code&gt;2&amp;gt;/dev/null&lt;/code&gt; means &amp;ldquo;throw away any error messages&amp;rdquo;.
1.4 &lt;code&gt;1&lt;/code&gt; is stdout. &lt;code&gt;2&lt;/code&gt; is stderr.
1.5 &lt;code&gt;2&amp;gt;&amp;amp;1&lt;/code&gt; means redirecting stderr to stdout.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>getopts in Bash</title>
      <link>https://junyubian.github.io/posts/2022-10-21-getopts-in-bash/</link>
      <pubDate>Fri, 21 Oct 2022 14:17:29 +0000</pubDate>
      
      <guid>https://junyubian.github.io/posts/2022-10-21-getopts-in-bash/</guid>
      <description>&lt;h1 id=&#34;1-notice&#34;&gt;1. Notice&lt;/h1&gt;
&lt;p&gt;1.1 &lt;code&gt;getopts&lt;/code&gt; is different from &lt;code&gt;getopt&lt;/code&gt;.
1.2 &lt;code&gt;getopts&lt;/code&gt; runs on any system running bash in POSIX mode (e.g., set -o posix), &lt;code&gt;getopt&lt;/code&gt; is a system tool varies in different systems.
1.3 &lt;code&gt;getopts&lt;/code&gt; parses short options, which are a single dash (&amp;quot;-&amp;quot;) and a letter or digit.e.g. -2, -d, and -D. It can also parse short options in combination, for instance -2dD. But each option will be treated seperately, i.e. -2dD = -2 -d -D not equal -&amp;ldquo;2dD&amp;rdquo;, will need &lt;code&gt;getopt&lt;/code&gt; to cope with -&amp;ldquo;2dD&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>K8s and docker Related Notes</title>
      <link>https://junyubian.github.io/posts/2021-06-05-k8s-and-docker-related-notes/</link>
      <pubDate>Sat, 05 Jun 2021 15:08:29 +0000</pubDate>
      
      <guid>https://junyubian.github.io/posts/2021-06-05-k8s-and-docker-related-notes/</guid>
      <description>&lt;h4 id=&#34;1-management-tools-for-clusters-pods-deployments-etc-&#34;&gt;1. Management tools for clusters, pods, deployments, etc. :&lt;/h4&gt;
&lt;p&gt;k9s&lt;/p&gt;
&lt;h4 id=&#34;2-when-not-able-to-delete-resources-in-k8s&#34;&gt;2. When not able to delete resources in k8s:&lt;/h4&gt;
&lt;p&gt;First edit resource:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl edit &amp;lt;resource name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;then delete the &lt;code&gt;finalizer&lt;/code&gt; part and try again.&lt;/p&gt;
&lt;h4 id=&#34;3-filtering-docker-images&#34;&gt;3. filtering docker images&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker image &lt;span class=&#34;s2&#34;&gt;&amp;#34;name*&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>VM Related Notes</title>
      <link>https://junyubian.github.io/posts/2021-06-05-vm-related-notes/</link>
      <pubDate>Sat, 05 Jun 2021 15:01:29 +0000</pubDate>
      
      <guid>https://junyubian.github.io/posts/2021-06-05-vm-related-notes/</guid>
      <description>&lt;h4 id=&#34;1-list-all-vms&#34;&gt;1. List all VMs:&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;virsh list
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;2-list-network-setting-xml&#34;&gt;2. List network setting xml:&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;virsh net-dumpxml &amp;lt;network&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;3-list-and-revert-vm-from-snapshots&#34;&gt;3. list and revert vm from snapshots:&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;virsh snapshot-list &lt;span class=&#34;m&#34;&gt;476&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;virsh snapshot-revert --domain freebsd --snapshotname 5Sep2016_S1 --running
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Command Line Related Notes</title>
      <link>https://junyubian.github.io/posts/2021-06-05-command-line-related-notes/</link>
      <pubDate>Sat, 05 Jun 2021 00:31:29 +0000</pubDate>
      
      <guid>https://junyubian.github.io/posts/2021-06-05-command-line-related-notes/</guid>
      <description>&lt;h4 id=&#34;1-switch-to-end-of-line-in-vi&#34;&gt;1. Switch to end of line in vi:&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;shift+G
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;2-switch-to-end-of-line-in-normal-command-line&#34;&gt;2. Switch to end of line in normal command line:&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ctrl+E
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;3-switch-to-specific-line-in-target-file&#34;&gt;3. Switch to specific line in target file:&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;vi &amp;lt;file directory&amp;gt; +&amp;lt;n&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>FD.io简介</title>
      <link>https://junyubian.github.io/posts/2021-04-26-fdio%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Mon, 26 Apr 2021 15:19:00 +0000</pubDate>
      
      <guid>https://junyubian.github.io/posts/2021-04-26-fdio%E7%AE%80%E4%BB%8B/</guid>
      <description>&lt;p&gt;总结自&lt;a href=&#34;https://www.youtube.com/watch?v=rfat_guzoEI&#34;&gt;fd.io Youtube&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Diff Array</title>
      <link>https://junyubian.github.io/posts/2020-11-08-diff-array/</link>
      <pubDate>Sun, 08 Nov 2020 15:19:00 +0000</pubDate>
      
      <guid>https://junyubian.github.io/posts/2020-11-08-diff-array/</guid>
      <description>&lt;p&gt;In this blog, we will talk about one trick can be used to solve problems to do with frequent addition and subtraction to a subsection of an array  - &lt;a href=&#34;https://labuladong.gitbook.io/algo/suan-fa-si-wei-xi-lie/3.3-yi-xiang-bu-dao-xi-lie/cha-fen-ji-qiao&#34;&gt;Diff Array&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;functionality&#34;&gt;Functionality&lt;/h1&gt;
&lt;p&gt;Todo with frequent addition and subtraction to a subsection of an array.&lt;/p&gt;
&lt;p&gt;e.g. Given array &lt;code&gt;arr&lt;/code&gt;, add 1 for elements between  &lt;code&gt;arr[0]&lt;/code&gt; and &lt;code&gt;arr[3]&lt;/code&gt; inclusively, then, substract 3 for elements between  &lt;code&gt;arr[2]&lt;/code&gt; and &lt;code&gt;arr[5]&lt;/code&gt; inclusively, what will be the final &lt;code&gt;arr&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux知识点总结</title>
      <link>https://junyubian.github.io/posts/2020-09-28-linux%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</link>
      <pubDate>Mon, 28 Sep 2020 22:43:19 +0000</pubDate>
      
      <guid>https://junyubian.github.io/posts/2020-09-28-linux%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;h3 id=&#34;1-find命令&#34;&gt;1. find命令&lt;/h3&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;查找指定文件名文件（不区分大小写）：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;find -iname &lt;span class=&#34;s2&#34;&gt;&amp;#34;ProgramToFind.java&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;对找到的文件执行某命令&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;find -iname &lt;span class=&#34;s2&#34;&gt;&amp;#34;ProgramToOperate.java&amp;#34;&lt;/span&gt; -exec md5sum &lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;查找home目录下所有空文件&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;find ~ -empty
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>C&#43;&#43;知识点总结</title>
      <link>https://junyubian.github.io/posts/2020-09-01-c&#43;&#43;%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</link>
      <pubDate>Tue, 01 Sep 2020 21:33:19 +0000</pubDate>
      
      <guid>https://junyubian.github.io/posts/2020-09-01-c&#43;&#43;%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;h3 id=&#34;1-虚函数和纯虚函数&#34;&gt;1. 虚函数和纯虚函数&lt;/h3&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;虚函数：为了动态绑定，允许被子类重新定义的成员函数， virtual returnType func(parameter);&lt;/li&gt;
&lt;li&gt;纯虚函数：为了派生接口，virtual returnType func(parameter) = 0;&lt;/li&gt;
&lt;li&gt;基类需要虚析构函数的原因：防止内存泄漏，假如没有虚析构函数，释放一个由基类指向派生类的对象是，不触发动态绑定，则只会调用基类析构函数，而不会调用派生类的，从而导致派生类内存空间的不到释放。&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>数据库知识点总结</title>
      <link>https://junyubian.github.io/posts/2020-09-01-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</link>
      <pubDate>Tue, 01 Sep 2020 17:22:16 +0000</pubDate>
      
      <guid>https://junyubian.github.io/posts/2020-09-01-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;h3 id=&#34;1-数据库范式&#34;&gt;1. 数据库范式&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;第一范式：列不可分；&lt;/p&gt;
&lt;p&gt;第二范式：有主键，保证完全依赖于主键；&lt;/p&gt;
&lt;p&gt;第三范式：无传递依赖。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>操作系统知识点总结</title>
      <link>https://junyubian.github.io/posts/2020-08-31-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</link>
      <pubDate>Mon, 31 Aug 2020 19:32:21 +0000</pubDate>
      
      <guid>https://junyubian.github.io/posts/2020-08-31-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;h3 id=&#34;1-进程和线程&#34;&gt;1. 进程和线程&lt;/h3&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;进程：系统进行资源分配的基本单位；&lt;/li&gt;
&lt;li&gt;线程：CPU调度的基本单位：
&lt;ol&gt;
&lt;li&gt;共享进程的全部资源；&lt;/li&gt;
&lt;li&gt;独有程序计数器、寄存器和栈。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>计算机网络知识点总结</title>
      <link>https://junyubian.github.io/posts/2020-08-31-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</link>
      <pubDate>Mon, 31 Aug 2020 16:40:10 +0000</pubDate>
      
      <guid>https://junyubian.github.io/posts/2020-08-31-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;h3 id=&#34;1-https加密过程&#34;&gt;1. Https加密过程&lt;/h3&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;客户端发起握手请求；&lt;/li&gt;
&lt;li&gt;服务端返回已有的&lt;code&gt;证书公钥&lt;/code&gt;（服务端通过CA认证后，拥有&lt;code&gt;证书公钥&lt;/code&gt;和&lt;code&gt;证书私钥&lt;/code&gt;）；&lt;/li&gt;
&lt;li&gt;客户端验证证书是否有效；&lt;/li&gt;
&lt;li&gt;若证书有效，则生成一个&lt;code&gt;随机数&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;用&lt;code&gt;证书公钥&lt;/code&gt;加密生成的随机数；&lt;/li&gt;
&lt;li&gt;将加密后的&lt;code&gt;密钥&lt;/code&gt;发送给服务端；&lt;/li&gt;
&lt;li&gt;服务端用&lt;code&gt;证书私钥&lt;/code&gt;解密密钥；&lt;/li&gt;
&lt;li&gt;服务端使用解密出的密钥加密要发送的内容并发送给客户端；&lt;/li&gt;
&lt;li&gt;客户端使用秘钥解密信息。&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>知识点整理-6</title>
      <link>https://junyubian.github.io/posts/2020-07-23-%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86-6/</link>
      <pubDate>Thu, 23 Jul 2020 22:54:16 +0000</pubDate>
      
      <guid>https://junyubian.github.io/posts/2020-07-23-%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86-6/</guid>
      <description>&lt;h3 id=&#34;1-linux和端口号进程文件相关的命令&#34;&gt;1. Linux和端口号、进程、文件相关的命令&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;静态进程查看&lt;/strong&gt;: ps&lt;/p&gt;
&lt;p&gt;例：通过进程名查看进程号&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ps ax &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; fgrep &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;进程名&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;网络查看&lt;/strong&gt;: netstat&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SWAP Function</title>
      <link>https://junyubian.github.io/posts/2020-05-17-swap-function/</link>
      <pubDate>Sun, 17 May 2020 19:28:00 +0000</pubDate>
      
      <guid>https://junyubian.github.io/posts/2020-05-17-swap-function/</guid>
      <description>&lt;p&gt;In this blog, we will look into several ways of implementing swap in different ways.&lt;/p&gt;
&lt;h1 id=&#34;intermedia-variable&#34;&gt;Intermedia Variable&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tem&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;temp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>EMPLACE_BACK in C&#43;&#43;</title>
      <link>https://junyubian.github.io/posts/2020-05-16-emplace_back-in-c&#43;&#43;/</link>
      <pubDate>Sat, 16 May 2020 09:39:00 +0000</pubDate>
      
      <guid>https://junyubian.github.io/posts/2020-05-16-emplace_back-in-c&#43;&#43;/</guid>
      <description>&lt;p&gt;There are different type of containers in C++ STL. To add a new element into the back of a container, we normally use &lt;code&gt;push_back()&lt;/code&gt;. In this blog, we will look into a new way of performing push back - &lt;code&gt;emplace_back()&lt;/code&gt;.&lt;/p&gt;
&lt;h1 id=&#34;background-knowledge&#34;&gt;Background Knowledge&lt;/h1&gt;
&lt;p&gt;Rvalue References: with aim of increasing the efficiency of C++, rvalues are included. It doesn&amp;rsquo;t  need to copy the value, the rvalue reference is bound to the value itself.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sorting Algorithms - Quick Sort</title>
      <link>https://junyubian.github.io/posts/2020-04-23-sorting-algorithms---quick-sort/</link>
      <pubDate>Thu, 23 Apr 2020 13:42:56 +0000</pubDate>
      
      <guid>https://junyubian.github.io/posts/2020-04-23-sorting-algorithms---quick-sort/</guid>
      <description>&lt;p&gt;In this series of blogs, we will talk about different sorting algorithms.&lt;/p&gt;
&lt;p&gt;All the algorithms in the table below will be covered.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Algorithm&lt;/th&gt;
&lt;th&gt;Time Complexity (Average Case)&lt;/th&gt;
&lt;th&gt;Time Complexity (Worst Case)&lt;/th&gt;
&lt;th&gt;Time Complexity (Best Case)&lt;/th&gt;
&lt;th&gt;Merg&lt;/th&gt;
&lt;th&gt;Stability&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Bubble Sort&lt;/td&gt;
&lt;td&gt;O(N^2)&lt;/td&gt;
&lt;td&gt;O(N^2)&lt;/td&gt;
&lt;td&gt;O(N^2)&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;Stable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Quick Sort&lt;/td&gt;
&lt;td&gt;O(NlogN)&lt;/td&gt;
&lt;td&gt;O(N^2)&lt;/td&gt;
&lt;td&gt;O(NlogN)&lt;/td&gt;
&lt;td&gt;O(logN)&lt;/td&gt;
&lt;td&gt;Not Stable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Quick Sort (with Random Selection)&lt;/td&gt;
&lt;td&gt;O(NlogN)&lt;/td&gt;
&lt;td&gt;O(NlogN)&lt;/td&gt;
&lt;td&gt;O(NlogN)&lt;/td&gt;
&lt;td&gt;O(logN)&lt;/td&gt;
&lt;td&gt;Not Stable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Insertion Sort&lt;/td&gt;
&lt;td&gt;O(N^2)&lt;/td&gt;
&lt;td&gt;O(N^2)&lt;/td&gt;
&lt;td&gt;O(N)&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;Stable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Selection Sort&lt;/td&gt;
&lt;td&gt;O(N^2)&lt;/td&gt;
&lt;td&gt;O(N^2)&lt;/td&gt;
&lt;td&gt;O(N^2)&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;Not Stable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Heap Sort&lt;/td&gt;
&lt;td&gt;O(NlogN)&lt;/td&gt;
&lt;td&gt;O(NlogN)&lt;/td&gt;
&lt;td&gt;O(NlogN)&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;Not Stable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Merge Sort (with double divides)&lt;/td&gt;
&lt;td&gt;O(NlogN)&lt;/td&gt;
&lt;td&gt;O(NlogN)&lt;/td&gt;
&lt;td&gt;O(NlogN)&lt;/td&gt;
&lt;td&gt;O(N)&lt;/td&gt;
&lt;td&gt;Stable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Merge Sort (with multi divides)&lt;/td&gt;
&lt;td&gt;O(NlogN)&lt;/td&gt;
&lt;td&gt;O(NlogN)&lt;/td&gt;
&lt;td&gt;O(NlogN)&lt;/td&gt;
&lt;td&gt;O(N)&lt;/td&gt;
&lt;td&gt;Stable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Counting Sort&lt;/td&gt;
&lt;td&gt;O(N+M)&lt;/td&gt;
&lt;td&gt;O(N+M)&lt;/td&gt;
&lt;td&gt;O(N+M)&lt;/td&gt;
&lt;td&gt;O(N+M)&lt;/td&gt;
&lt;td&gt;Stable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bucket Sort&lt;/td&gt;
&lt;td&gt;O(N+M)&lt;/td&gt;
&lt;td&gt;O(N^2)&lt;/td&gt;
&lt;td&gt;O(N+M)&lt;/td&gt;
&lt;td&gt;O(N+M)&lt;/td&gt;
&lt;td&gt;Stable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Radix Sort&lt;/td&gt;
&lt;td&gt;O(N*M)&lt;/td&gt;
&lt;td&gt;O(N*M)&lt;/td&gt;
&lt;td&gt;O(N*M)&lt;/td&gt;
&lt;td&gt;O(N+M)&lt;/td&gt;
&lt;td&gt;Stable&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;quick-sort&#34;&gt;Quick Sort&lt;/h1&gt;
&lt;h2 id=&#34;how-to-do-it&#34;&gt;How to do it&amp;hellip;&lt;/h2&gt;
&lt;p&gt;Divide and conquer.&lt;/p&gt;
&lt;p&gt;In each division, seperate the data into two parts.&lt;/p&gt;
&lt;p&gt;All elements in the first part should be all less than the elements in the second part.&lt;/p&gt;
&lt;p&gt;Loop until the array is sorted.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sorting Algorithms - Bubble Sort</title>
      <link>https://junyubian.github.io/posts/2020-04-22-sorting-algorithms---bubble-sort/</link>
      <pubDate>Wed, 22 Apr 2020 09:23:36 +0000</pubDate>
      
      <guid>https://junyubian.github.io/posts/2020-04-22-sorting-algorithms---bubble-sort/</guid>
      <description>&lt;p&gt;In this series of blogs, we will talk about different sorting algorithms.&lt;/p&gt;
&lt;p&gt;All the algorithms in the table below will be covered.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Algorithm&lt;/th&gt;
&lt;th&gt;Time Complexity (Average Case)&lt;/th&gt;
&lt;th&gt;Time Complexity (Worst Case)&lt;/th&gt;
&lt;th&gt;Time Complexity (Best Case)&lt;/th&gt;
&lt;th&gt;Merg&lt;/th&gt;
&lt;th&gt;Stability&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Bubble Sort&lt;/td&gt;
&lt;td&gt;O(N^2)&lt;/td&gt;
&lt;td&gt;O(N^2)&lt;/td&gt;
&lt;td&gt;O(N^2)&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;Stable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Quick Sort&lt;/td&gt;
&lt;td&gt;O(NlogN)&lt;/td&gt;
&lt;td&gt;O(N^2)&lt;/td&gt;
&lt;td&gt;O(NlogN)&lt;/td&gt;
&lt;td&gt;O(logN)&lt;/td&gt;
&lt;td&gt;Not Stable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Quick Sort (with Random Selection)&lt;/td&gt;
&lt;td&gt;O(NlogN)&lt;/td&gt;
&lt;td&gt;O(NlogN)&lt;/td&gt;
&lt;td&gt;O(NlogN)&lt;/td&gt;
&lt;td&gt;O(logN)&lt;/td&gt;
&lt;td&gt;Not Stable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Insertion Sort&lt;/td&gt;
&lt;td&gt;O(N^2)&lt;/td&gt;
&lt;td&gt;O(N^2)&lt;/td&gt;
&lt;td&gt;O(N)&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;Stable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Selection Sort&lt;/td&gt;
&lt;td&gt;O(N^2)&lt;/td&gt;
&lt;td&gt;O(N^2)&lt;/td&gt;
&lt;td&gt;O(N^2)&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;Not Stable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Heap Sort&lt;/td&gt;
&lt;td&gt;O(NlogN)&lt;/td&gt;
&lt;td&gt;O(NlogN)&lt;/td&gt;
&lt;td&gt;O(NlogN)&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;Not Stable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Merge Sort (with double divides)&lt;/td&gt;
&lt;td&gt;O(NlogN)&lt;/td&gt;
&lt;td&gt;O(NlogN)&lt;/td&gt;
&lt;td&gt;O(NlogN)&lt;/td&gt;
&lt;td&gt;O(N)&lt;/td&gt;
&lt;td&gt;Stable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Merge Sort (with multi divides)&lt;/td&gt;
&lt;td&gt;O(NlogN)&lt;/td&gt;
&lt;td&gt;O(NlogN)&lt;/td&gt;
&lt;td&gt;O(NlogN)&lt;/td&gt;
&lt;td&gt;O(N)&lt;/td&gt;
&lt;td&gt;Stable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Counting Sort&lt;/td&gt;
&lt;td&gt;O(N+M)&lt;/td&gt;
&lt;td&gt;O(N+M)&lt;/td&gt;
&lt;td&gt;O(N+M)&lt;/td&gt;
&lt;td&gt;O(N+M)&lt;/td&gt;
&lt;td&gt;Stable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bucket Sort&lt;/td&gt;
&lt;td&gt;O(N+M)&lt;/td&gt;
&lt;td&gt;O(N^2)&lt;/td&gt;
&lt;td&gt;O(N+M)&lt;/td&gt;
&lt;td&gt;O(N+M)&lt;/td&gt;
&lt;td&gt;Stable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Radix Sort&lt;/td&gt;
&lt;td&gt;O(N*M)&lt;/td&gt;
&lt;td&gt;O(N*M)&lt;/td&gt;
&lt;td&gt;O(N*M)&lt;/td&gt;
&lt;td&gt;O(N+M)&lt;/td&gt;
&lt;td&gt;Stable&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;bubble-sort&#34;&gt;Bubble Sort&lt;/h1&gt;
&lt;h2 id=&#34;how-to-do-it&#34;&gt;How to do it&amp;hellip;&lt;/h2&gt;
&lt;p&gt;Compare the adjacent elements.&lt;/p&gt;
&lt;p&gt;If the first element is greater than the second element, swap them.&lt;/p&gt;
&lt;p&gt;Loop until reaching the last pair of elements.&lt;/p&gt;
&lt;p&gt;Repeat until all the array is sorted.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sorting Algorithms - Summary</title>
      <link>https://junyubian.github.io/posts/2020-04-21-sorting-algorithms---summary/</link>
      <pubDate>Tue, 21 Apr 2020 22:18:10 +0000</pubDate>
      
      <guid>https://junyubian.github.io/posts/2020-04-21-sorting-algorithms---summary/</guid>
      <description>&lt;p&gt;In this series of blogs, we will talk about different sorting algorithms.&lt;/p&gt;
&lt;p&gt;All the algorithms in the table below will be covered.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>知识点整理-5</title>
      <link>https://junyubian.github.io/posts/2020-04-19-%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86-5/</link>
      <pubDate>Mon, 20 Apr 2020 00:51:32 +0000</pubDate>
      
      <guid>https://junyubian.github.io/posts/2020-04-19-%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86-5/</guid>
      <description>&lt;h3 id=&#34;1-mysql查询10-20条的数据&#34;&gt;1. MySQL查询10-20条的数据&lt;/h3&gt;
&lt;hr&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-mysql&#34; data-lang=&#34;mysql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;limit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>知识点整理-4</title>
      <link>https://junyubian.github.io/posts/2020-04-19-%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86-4/</link>
      <pubDate>Sun, 19 Apr 2020 21:07:23 +0000</pubDate>
      
      <guid>https://junyubian.github.io/posts/2020-04-19-%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86-4/</guid>
      <description>&lt;h3 id=&#34;1-黑盒测试和白盒测试&#34;&gt;1. 黑盒测试和白盒测试&lt;/h3&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;黑盒测试：即功能性测试&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;等价类划分&lt;/strong&gt;：有效等价类即对于程序的规格来说是合理的、有意义的；无效等价类即对程序的规格来说是不合理的、每有意义的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;边界值分析&lt;/strong&gt;：对各种边界情况设计测试用例。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;因果图法&lt;/strong&gt;：根据输入的各种组合来设计测试用例，用于检查程序输入条件的各种组合情况。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>知识点整理-3</title>
      <link>https://junyubian.github.io/posts/2020-04-17-%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86-3/</link>
      <pubDate>Fri, 17 Apr 2020 14:22:01 +0000</pubDate>
      
      <guid>https://junyubian.github.io/posts/2020-04-17-%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86-3/</guid>
      <description>&lt;h3 id=&#34;1-计算机网络分层模型&#34;&gt;1. 计算机网络分层模型&lt;/h3&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;7层&lt;/strong&gt; (osi国际标准组织定制)：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;应用层&lt;/strong&gt;：为程序提供网络服务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;表示层&lt;/strong&gt;：数据格式化，加密、解密。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;会话层&lt;/strong&gt;：建立、维护、管理会话链接。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;传输层&lt;/strong&gt;：建立、维护、管理端到端链接。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>KMP Algorithm</title>
      <link>https://junyubian.github.io/posts/2020-04-17-kmp-algorithm/</link>
      <pubDate>Fri, 17 Apr 2020 00:31:29 +0000</pubDate>
      
      <guid>https://junyubian.github.io/posts/2020-04-17-kmp-algorithm/</guid>
      <description>&lt;h1 id=&#34;background&#34;&gt;Background&amp;hellip;&lt;/h1&gt;
&lt;p&gt;Once upon a time, Tom asked his father to find &lt;code&gt;abab&lt;/code&gt; inside &lt;code&gt;abcaabababaa&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Tom&amp;rsquo;s dad did this in a traditional way (brute force). He compared each character of the first string with each character of the second string. When he find one character not matching, for example, the third character in the second string in this case, he start again from the second character of the second string. It went on and on and on&amp;hellip;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>知识点整理-2</title>
      <link>https://junyubian.github.io/posts/2020-04-16-%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86-2/</link>
      <pubDate>Thu, 16 Apr 2020 21:29:34 +0000</pubDate>
      
      <guid>https://junyubian.github.io/posts/2020-04-16-%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86-2/</guid>
      <description>&lt;h3 id=&#34;1-两个有序链表合并成一个leetcode-21&#34;&gt;1. 两个有序链表合并成一个(leetcode 21)&lt;/h3&gt;
&lt;hr&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;ListNode&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;n&#34;&gt;ListNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;n&#34;&gt;ListNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ListNode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;mergeTwoLists&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ListNode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ListNode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;n&#34;&gt;l1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mergeTwoLists&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;n&#34;&gt;l2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mergeTwoLists&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;</description>
    </item>
    
  </channel>
</rss>
